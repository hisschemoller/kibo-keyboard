{"version":3,"sources":["webpack://planck/webpack/bootstrap","webpack://planck/./lib/common/Vec2.js","webpack://planck/./lib/common/Math.js","webpack://planck/./lib/util/common.js","webpack://planck/./lib/common/Rot.js","webpack://planck/./lib/Settings.js","webpack://planck/./lib/common/Transform.js","webpack://planck/./lib/util/create.js","webpack://planck/./lib/util/options.js","webpack://planck/./lib/common/Sweep.js","webpack://planck/./lib/common/Mat22.js","webpack://planck/./lib/common/Vec3.js","webpack://planck/./lib/Joint.js","webpack://planck/./lib/common/Velocity.js","webpack://planck/./lib/common/Position.js","webpack://planck/./lib/common/Mat33.js","webpack://planck/./lib/Shape.js","webpack://planck/./lib/collision/AABB.js","webpack://planck/./lib/Contact.js","webpack://planck/./lib/Body.js","webpack://planck/./lib/Manifold.js","webpack://planck/./lib/shape/PolygonShape.js","webpack://planck/./lib/collision/Distance.js","webpack://planck/./lib/shape/CircleShape.js","webpack://planck/./lib/shape/EdgeShape.js","webpack://planck/./lib/common/stats.js","webpack://planck/./lib/shape/ChainShape.js","webpack://planck/./lib/World.js","webpack://planck/./lib/collision/DynamicTree.js","webpack://planck/./lib/Fixture.js","webpack://planck/./lib/collision/TimeOfImpact.js","webpack://planck/./lib/joint/RevoluteJoint.js","webpack://planck/./lib/joint/PrismaticJoint.js","webpack://planck/./lib/index.js","webpack://planck/./lib/serializer/index.js","webpack://planck/./lib/collision/BroadPhase.js","webpack://planck/./lib/util/Pool.js","webpack://planck/./lib/Solver.js","webpack://planck/./lib/util/Timer.js","webpack://planck/./lib/shape/BoxShape.js","webpack://planck/./lib/shape/CollideCircle.js","webpack://planck/./lib/shape/CollideEdgeCircle.js","webpack://planck/./lib/shape/CollidePolygon.js","webpack://planck/./lib/shape/CollideCirclePolygone.js","webpack://planck/./lib/shape/CollideEdgePolygon.js","webpack://planck/./lib/joint/DistanceJoint.js","webpack://planck/./lib/joint/FrictionJoint.js","webpack://planck/./lib/joint/GearJoint.js","webpack://planck/./lib/joint/MotorJoint.js","webpack://planck/./lib/joint/MouseJoint.js","webpack://planck/./lib/joint/PulleyJoint.js","webpack://planck/./lib/joint/RopeJoint.js","webpack://planck/./lib/joint/WeldJoint.js","webpack://planck/./lib/joint/WheelJoint.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","Math","x","y","this","_serialize","_deserialize","data","obj","zero","neo","clone","v","toString","JSON","stringify","isValid","isFinite","assert","setZero","set","wSet","a","b","w","setCombine","setMul","add","wAdd","addCombine","addMul","wSub","subCombine","subMul","sub","mul","length","lengthOf","lengthSquared","normalize","EPSILON","invLength","sqrt","distance","dx","dy","distanceSquared","areEqual","skew","dot","cross","addCross","combine","neg","abs","mid","upper","max","lower","min","clamp","lengthSqr","invSqrt","scaleFn","translateFn","native","math","isNaN","nextPowerOfTwo","isPowerOfTwo","mod","num","random","debug","statement","err","log","Rot","angle","setAngle","setIdentity","rot","identity","sin","cos","getAngle","atan2","getXAxis","getYAxis","qr","mulRot","mulVec2","mulSub","mulT","mulTRot","mulTVec2","Settings","maxManifoldPoints","maxPolygonVertices","aabbExtension","aabbMultiplier","linearSlop","linearSlopSquared","angularSlop","PI","polygonRadius","maxSubSteps","maxTOIContacts","maxTOIIterations","maxDistnceIterations","velocityThreshold","maxLinearCorrection","maxAngularCorrection","maxTranslation","maxTranslationSquared","maxRotation","maxRotationSquared","baumgarte","toiBaugarte","timeToSleep","linearSleepTolerance","linearSleepToleranceSqr","pow","angularSleepTolerance","angularSleepToleranceSqr","Transform","position","rotation","q","xf","Array","isArray","arr","mulAll","mulFn","mulXf","px","py","mulTXf","proto","props","noop","Error","propertyIsEnumerable","to","from","getOwnPropertySymbols","symbols","symbol","Sweep","localCenter","alpha0","c0","a0","setTransform","setLocalCenter","getTransform","beta","advance","alpha","forward","that","Mat22","ex","ey","getInverse","det","imx","solve","mx","mulMat22","mulTMat22","mx1","mx2","Vec3","z","Joint","JointEdge","other","joint","prev","next","def","bodyA","bodyB","m_type","m_bodyA","m_bodyB","m_index","m_collideConnected","collideConnected","m_prev","m_next","m_edgeA","m_edgeB","m_islandFlag","m_userData","userData","TYPES","context","restore","clazz","type","isActive","getType","getBodyA","getBodyB","getNext","getUserData","setUserData","getCollideConnected","getAnchorA","getAnchorB","getReactionForce","inv_dt","getReactionTorque","shiftOrigin","newOrigin","initVelocityConstraints","step","solveVelocityConstraints","solvePositionConstraints","Position","Mat33","ez","solve33","solve22","a11","a12","a21","a22","getInverse22","M","getSymInverse33","a13","a23","a33","mulVec3","Shape","m_radius","_reset","shape","getRadius","_clone","getChildCount","testPoint","rayCast","output","input","transform","childIndex","computeAABB","aabb","computeMass","massData","density","computeDistanceProxy","proxy","AABB","lowerBound","upperBound","getCenter","getExtents","getPerimeter","lowerA","upperA","lowerB","upperB","lowerX","lowerY","upperX","upperY","combinePoints","contains","result","extend","testOverlap","d1x","d2x","d1y","d2y","diff","wD","hD","tmin","Infinity","tmax","p1","p2","absD","normal","f","inv_d","t1","t2","temp","maxFraction","fraction","Manifold","Distance","ContactEdge","contact","Contact","fA","indexA","fB","indexB","evaluateFcn","m_nodeA","m_nodeB","m_fixtureA","m_fixtureB","m_indexA","m_indexB","m_evaluateFcn","m_manifold","m_toi","m_toiCount","m_toiFlag","m_friction","mixFriction","m_restitution","mixRestitution","m_tangentSpeed","m_enabledFlag","m_touchingFlag","m_filterFlag","m_bulletHitFlag","v_points","v_normal","v_normalMass","v_K","v_pointCount","v_tangentSpeed","v_friction","v_restitution","v_invMassA","v_invMassB","v_invIA","v_invIB","p_localPoints","p_localNormal","p_localPoint","p_localCenterA","p_localCenterB","p_type","p_radiusA","p_radiusB","p_pointCount","p_invMassA","p_invMassB","p_invIA","p_invIB","VelocityConstraintPoint","rA","rB","normalImpulse","tangentImpulse","normalMass","tangentMass","velocityBias","friction1","friction2","restitution1","restitution2","initConstraint","fixtureA","fixtureB","shapeA","getShape","shapeB","getBody","manifold","getManifold","pointCount","m_invMass","m_invI","m_sweep","localNormal","localPoint","j","cp","points","vcp","warmStarting","dtRatio","getWorldManifold","worldManifold","setEnabled","flag","isEnabled","isTouching","getFixtureA","getFixtureB","getChildIndexA","getChildIndexB","flagForFiltering","setFriction","friction","getFriction","resetFriction","setRestitution","restitution","getRestitution","resetRestitution","setTangentSpeed","speed","getTangentSpeed","evaluate","xfA","xfB","update","listener","touching","wasTouching","sensorA","isSensor","sensorB","sensor","oldManifold","nmp","omp","id","setAwake","beginContact","endContact","preSolve","solvePositionConstraint","_solvePositionConstraint","solvePositionConstraintTOI","toiA","toiB","toi","positionA","c_velocity","c_position","positionB","localCenterA","localCenterB","mA","iA","mB","iB","cA","aA","cB","aB","minSeparation","point","separation","e_circles","pointA","pointB","e_faceA","planePoint","clipPoint","e_faceB","C","rnA","rnB","K","impulse","P","initVelocityConstraint","velocityA","velocityB","radiusA","radiusB","vA","wA","vB","wB","kNormal","tangent","rtA","rtB","kTangent","vRel","blockSolve","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","k11","k22","k12","warmStartConstraint","storeConstraintImpulses","solveVelocityConstraint","m_body","dv","vt","lambda","maxFriction","newImpulse","vn","dv1","dv2","vn1","vn2","P1","P2","s_registers","addType","type1","type2","callback","typeA","typeB","m_contactList","destroy","destroyFcn","Body","options","Velocity","Fixture","staticBody","STATIC","kinematicBody","KINEMATIC","dynamicBody","DYNAMIC","BodyDef","linearVelocity","angularVelocity","linearDamping","angularDamping","fixedRotation","bullet","gravityScale","allowSleep","awake","active","world","m_world","m_awakeFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_mass","m_I","m_xf","m_force","m_torque","m_linearVelocity","m_angularVelocity","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_jointList","m_fixtureList","m_destroyed","MassData","mass","center","I","fixtures","push","body","forEach","fixture","_addFixture","isWorldLocked","isLocked","getWorld","getFixtureList","getJointList","getContactList","isStatic","isDynamic","isKinematic","setStatic","setType","setDynamic","setKinematic","resetMassData","synchronizeFixtures","ce","ce0","destroyContact","broadPhase","m_broadPhase","proxyCount","m_proxyCount","touchProxy","m_proxies","proxyId","isBullet","setBullet","isSleepingAllowed","setSleepingAllowed","isAwake","setActive","createProxies","destroyProxies","isFixedRotation","setFixedRotation","synchronize","synchronizeTransform","getPosition","setPosition","getWorldCenter","getLocalCenter","getLinearVelocity","getLinearVelocityFromWorldPoint","worldPoint","getLinearVelocityFromLocalPoint","getWorldPoint","setLinearVelocity","getAngularVelocity","setAngularVelocity","getLinearDamping","setLinearDamping","getAngularDamping","setAngularDamping","getGravityScale","setGravityScale","scale","getMass","getInertia","getMassData","m_density","oldCenter","setMassData","applyForce","force","wake","applyForceToCenter","applyTorque","torque","applyLinearImpulse","applyAngularImpulse","shouldCollide","jn","m_newFixture","createFixture","fixdef","destroyFixture","node","edge","publish","getWorldVector","localVector","getLocalPoint","getLocalVector","worldVector","ManifoldPoint","ContactID","cf","ContactFeature","WorldManifold","separations","clipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","distance0","distance1","interp","e_vertex","e_face","clipVertex","ClipVertex","getPointStates","state1","state2","manifold1","manifold2","PointState","removeState","persistState","addState","configurable","wm","dist","nullState","PolygonShape","vertices","_super","TYPE","m_centroid","m_vertices","m_normals","m_count","_set","getVertex","index","_setAsBox","ps","tempCount","unique","i0","x0","hull","ih","ie","i1","i2","vs","count","area","pRef","p3","e1","e2","triangleArea","ComputeCentroid","hx","hy","pLocal","numerator","denominator","minX","minY","maxX","maxY","D","ex1","ey1","ex2","ey2","validate","e","Input","DistanceInput","Output","DistanceOutput","Proxy","DistanceProxy","Cache","SimplexCache","stats","proxyA","proxyB","transformA","transformB","useRadii","iterations","metric","cache","gjkCalls","simplex","Simplex","readCache","m_v","k_maxIters","saveA","saveB","saveCount","iter","getClosestPoint","getSearchDirection","vertex","getSupport","gjkIters","duplicate","gjkMaxIters","getWitnessPoints","writeCache","m_buffer","SimplexVertex","m_v1","m_v2","m_v3","getVertexCount","bestIndex","bestValue","getSupportVertex","print","wALocal","wBLocal","metric1","metric2","getMetric","e12","pA","pB","solve2","solve3","w1","w2","d12_2","d12_1","inv_d12","w3","w1e12","e13","w1e13","d13_1","d13_2","e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","CircleShape","m_p","radius","rr","sigma","EdgeShape","v1","v2","m_vertex1","m_vertex2","m_vertex0","m_vertex3","m_hasVertex0","m_hasVertex3","vertex1","vertex2","vertex0","vertex3","hasVertex0","hasVertex3","setPrev","setNext","v3","v0","newline","string","ChainShape","loop","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","m_isLoop","_createLoop","_createChain","isLoop","prevVertex","undefined","nextVertex","hasPrevVertex","hasNextVertex","map","_setPrevVertex","_setNextVertex","createChain","getChildEdge","World","BroadPhase","Solver","WorldDef","gravity","continuousPhysics","subStepping","velocityIterations","positionIterations","m_solver","m_contactCount","m_bodyList","m_bodyCount","m_jointCount","m_stepComplete","m_allowSleep","m_gravity","m_clearForces","m_locked","m_warmStarting","m_continuousPhysics","m_subStepping","m_blockSolve","m_velocityIterations","m_positionIterations","m_t","m_stepCount","addPair","createContact","bodies","joints","getBodyList","reverse","_addBody","createJoint","getBodyCount","getJointCount","getContactCount","setGravity","getGravity","setAllowSleeping","getAllowSleeping","setWarmStarting","getWarmStarting","setContinuousPhysics","getContinuousPhysics","setSubStepping","getSubStepping","setAutoClearForces","getAutoClearForces","clearForces","queryAABB","queryCallback","query","point1","point2","reportFixtureCallback","getProxyCount","getTreeHeight","getTreeBalance","getTreeQuality","createBody","createDynamicBody","createKinematicBody","destroyBody","je","je0","destroyJoint","f0","s_step","TimeStep","timeStep","findNewContacts","reset","updateContacts","solveWorld","solveWorldTOI","updatePairs","next_c","activeA","activeB","proxyIdA","proxyIdB","_listeners","on","off","listeners","indexOf","splice","arg1","arg2","arg3","postSolve","Pool","TreeNode","parent","child1","child2","height","DynamicTree","m_root","m_nodes","m_lastProxyId","m_pool","isLeaf","getFatAABB","allocateNode","allocate","freeNode","release","createProxy","insertLeaf","destroyProxy","removeLeaf","moveProxy","leaf","leafAABB","combinedAABB","cost1","cost2","combinedArea","cost","inheritanceCost","oldArea","sibling","oldParent","newParent","balance","grandParent","A","B","F","G","E","getHeight","getAreaRatio","rootArea","totalArea","it","iteratorPool","preorder","computeHeight","height1","height2","validateStructure","validateMetrics","getMaxBalance","maxBalance","rebuildBottomUp","nodes","minCost","iMin","jMin","aabbi","aabbj","stack","stackPool","pop","rayCastCallback","abs_v","segmentAABB","subInput","inputPool","h","Iterator","iterator","close","parents","states","root","FixtureDef","filterGroupIndex","filterCategoryBits","filterMaskBits","FixtureProxy","m_isSensor","m_filterGroupIndex","m_filterCategoryBits","m_filterMaskBits","m_shape","childCount","setSensor","getDensity","setDensity","getAABB","xf1","xf2","aabb1","aabb2","displacement","setFilterData","filter","groupIndex","categoryBits","maskBits","refilter","getFilterGroupIndex","getFilterCategoryBits","getFilterMaskBits","timer","Timer","now","toiCalls","state","TOIOutput","e_unknown","tMax","sweepA","sweepB","totalRadius","target","tolerance","k_maxIterations","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","SeparationFunction","initialize","done","pushBackIter","s2","findMinSeparation","e_separated","s1","e_failed","rootIterCount","a1","a2","toiRootIters","toiMaxRootIters","toiIters","toiMaxIters","time","toiMaxTime","toiTime","m_proxyA","m_proxyB","m_sweepA","m_sweepB","m_localPoint","m_axis","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","compute","find","axisA","axisB","RevoluteJoint","DEFAULTS","lowerAngle","upperAngle","maxMotorTorque","motorSpeed","enableLimit","enableMotor","anchor","m_localAnchorA","localAnchorA","m_localAnchorB","localAnchorB","m_referenceAngle","referenceAngle","m_impulse","m_motorImpulse","m_lowerAngle","m_upperAngle","m_maxMotorTorque","m_motorSpeed","m_enableLimit","m_enableMotor","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_motorMass","m_limitState","getLocalAnchorA","getLocalAnchorB","getReferenceAngle","getJointAngle","bA","getJointSpeed","isMotorEnabled","getMotorTorque","setMotorSpeed","getMotorSpeed","setMaxMotorTorque","isLimitEnabled","getLowerLimit","getUpperLimit","setLimits","qA","qB","jointAngle","Cdot","oldImpulse","maxImpulse","dt","Cdot1","Cdot2","rhs","reduced","positionError","angularError","limitImpulse","PrismaticJoint","lowerTranslation","upperTranslation","maxMotorForce","axis","m_localXAxisA","localAxisA","m_localYAxisA","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_perp","m_s1","m_s2","m_a1","m_a2","m_K","getLocalAxisA","getJointTranslation","bB","setMaxMotorForce","getMotorForce","k13","k23","k33","jointTranslation","LA","LB","f1","df","f2r","perp","C1","linearError","C2","translation","impulse1","internal","Serializer","Circle","Edge","Polygon","Chain","Box","CollidePolygons","DistanceJoint","FrictionJoint","GearJoint","MotorJoint","MouseJoint","PulleyJoint","RopeJoint","WeldJoint","WheelJoint","TimeOfImpact","SID","CLASSES","Document","toJson","flat","queue","store","cls","__sid","ref","shift","str","join","fromJson","parse","dump","ctx","refIndex","refType","m_tree","m_moveBuffer","aabbA","aabbB","bufferMove","unbufferMove","addPairCallback","m_callback","m_queryProxyId","fatAABB","userDataA","userDataB","opts","_list","_max","_createFn","_outFn","_inFn","_discardFn","discard","_createCount","_outCount","_inCount","_discardCount","size","item","common","TOIInput","inv_dt0","m_stack","m_bodies","m_contacts","m_joints","clear","addBody","addContact","addJoint","seed","solveIsland","ratio","positionSolved","contactsOkay","jointsOkay","jointOkay","postSolveIsland","minSleepTime","linTolSqr","angTolSqr","printBodies","tag","s_subStep","ContactImpulse","normalImpulses","tangentImpulses","minContact","minAlpha","collideA","collideB","backup1","backup2","backup","solveIslandTOI","subStep","Date","BoxShape","CollideCircles","circleA","circleB","distSqr","CollideEdgeCircle","edgeA","Q","u","A1","B1","B2","A2","den","chain","FindMaxSeparation","poly1","poly2","count1","count2","n1s","v1s","v2s","maxSeparation","si","sij","_maxSeparation","_bestIndex","polyA","polyB","separationA","edgeB","separationB","edge1","flip","incidentEdge","normals1","vertices2","normals2","normal1","minDot","FindIncidentEdge","vertices1","iv1","iv2","v11","v12","localTangent","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","polygonA","cLocal","normalIndex","vertexCount","normals","vertIndex1","vertIndex2","u1","u2","faceCenter","CollidePolygonCircle","CollideEdgePolygon","EPAxis","edgeAxis","polygonAxis","polygonBA","rf","sideNormal1","sideNormal2","polygonB","centroidB","front","offset1","offset0","offset2","convex1","convex2","edge0","normal0","edge2","normal2","lowerLimit","upperLimit","primaryAxis","frequencyHz","dampingRatio","anchorA","anchorB","m_length","m_frequencyHz","m_dampingRatio","m_gamma","m_bias","m_u","gamma","bias","setLength","getLength","setFrequency","hz","getFrequency","setDampingRatio","getDampingRatio","crAu","crBu","invMass","omega","k","vpA","vpB","maxForce","maxTorque","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","setMaxForce","getMaxForce","setMaxTorque","getMaxTorque","joint1","joint2","coordinateA","coordinateB","m_joint1","m_joint2","m_ratio","m_type1","m_type2","m_bodyC","xfC","aC","revolute","m_localAnchorC","m_referenceAngleA","m_localAxisC","prismatic","pC","m_bodyD","xfD","aD","m_localAnchorD","m_referenceAngleB","m_localAxisD","pD","m_constant","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","getJoint1","getJoint2","setRatio","getRatio","vC","wC","vD","qC","qD","rC","rD","JvAC","JvBD","JwA","JwB","JwC","JwD","cC","cD","correctionFactor","m_linearOffset","linearOffset","angleA","angleB","m_angularOffset","m_correctionFactor","m_linearError","m_angularError","setCorrectionFactor","factor","getCorrectionFactor","setLinearOffset","getLinearOffset","setAngularOffset","angularOffset","getAngularOffset","inv_h","m_targetA","m_beta","m_C","setTarget","getTarget","velocity","MIN_PULLEY_LENGTH","PulleyJointDef","groundA","groundB","m_groundAnchorA","groundAnchorA","m_groundAnchorB","groundAnchorB","m_lengthA","lengthA","m_lengthB","lengthB","m_uA","m_uB","getGroundAnchorA","getGroundAnchorB","getLengthA","getLengthB","getCurrentLengthA","getCurrentLengthB","ruA","ruB","PA","PB","uA","uB","maxLength","m_maxLength","m_state","setMaxLength","getMaxLength","getLimitState","crA","crB","invM","impulse2","localAxis","m_springMass","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","getMaxMotorTorque","setSpringFrequencyHz","getSpringFrequencyHz","setSpringDampingRatio","getSpringDampingRatio","ay","sAy","sBy"],"mappings":"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","file":"planck.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec2;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec2(x, y) {\n  if (!(this instanceof Vec2)) {\n    return new Vec2(x, y);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n  _ASSERT && Vec2.assert(this);\n}\n\nVec2.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y\n  };\n};\n\nVec2._deserialize = function(data) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  return obj;\n};\n\nVec2.zero = function() {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = 0;\n  obj.y = 0;\n  return obj;\n};\n\nVec2.neo = function(x, y) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = x;\n  obj.y = y;\n  return obj;\n};\n\nVec2.clone = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(v.x, v.y);\n};\n\nVec2.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec2.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y);\n}\n\nVec2.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec2.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec2!');\n  }\n}\n\nVec2.prototype.clone = function() {\n  return Vec2.clone(this);\n}\n\n/**\n * Set this vector to all zeros.\n * \n * @returns this\n */\nVec2.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  return this;\n}\n\n/**\n * Set this vector to some specified coordinates.\n * \n * @returns this\n */\nVec2.prototype.set = function(x, y) {\n  if (typeof x === 'object') {\n    _ASSERT && Vec2.assert(x);\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    _ASSERT && Math.assert(x);\n    _ASSERT && Math.assert(y);\n    this.x = x;\n    this.y = y;\n  }\n  return this;\n}\n\n/**\n * @deprecated Use setCombine or setMul\n */\nVec2.prototype.wSet = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.setCombine(a, v, b, w);\n  } else {\n    return this.setMul(a, v);\n  }\n}\n\n/**\n * Set linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.setCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\nVec2.prototype.setMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\n/**\n * Add a vector to this vector.\n * \n * @returns this\n */\nVec2.prototype.add = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x += w.x;\n  this.y += w.y;\n  return this;\n}\n\n/**\n * @deprecated Use addCombine or addMul\n */\nVec2.prototype.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.addCombine(a, v, b, w);\n  } else {\n    return this.addMul(a, v);\n  }\n}\n\n/**\n * Add linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.addCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\nVec2.prototype.addMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\n/**\n * @deprecated Use subCombine or subMul\n */\nVec2.prototype.wSub = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.subCombine(a, v, b, w);\n  } else {\n    return this.subMul(a, v);\n  }}\n\n/**\n * Subtract linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.subCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\nVec2.prototype.subMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\n/**\n * Subtract a vector from this vector\n * \n * @returns this\n */\nVec2.prototype.sub = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x -= w.x;\n  this.y -= w.y;\n  return this;\n}\n\n/**\n * Multiply this vector by a scalar.\n * \n * @returns this\n */\nVec2.prototype.mul = function(m) {\n  _ASSERT && Math.assert(m);\n  this.x *= m;\n  this.y *= m;\n  return this;\n}\n\n/**\n * Get the length of this vector (the norm).\n * \n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.prototype.length = function() {\n  return Vec2.lengthOf(this);\n}\n\n/**\n * Get the length squared.\n */\nVec2.prototype.lengthSquared = function() {\n  return Vec2.lengthSquared(this);\n}\n\n/**\n * Convert this vector into a unit vector.\n * \n * @returns old length\n */\nVec2.prototype.normalize = function() {\n  var length = this.length();\n  if (length < Math.EPSILON) {\n    return 0.0;\n  }\n  var invLength = 1.0 / length;\n  this.x *= invLength;\n  this.y *= invLength;\n  return length;\n}\n\n/**\n * Get the length of this vector (the norm).\n *\n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.lengthOf = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n}\n\n/**\n * Get the length squared.\n */\nVec2.lengthSquared = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return v.x * v.x + v.y * v.y;\n}\n\nVec2.distance = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nVec2.distanceSquared = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return dx * dx + dy * dy;\n}\n\nVec2.areEqual = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v == w || typeof w === 'object' && w !== null && v.x === w.x && v.y === w.y;\n}\n\n/**\n * Get the skew vector such that dot(skew_vec, other) == cross(vec, other)\n */\nVec2.skew = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.y, v.x);\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec2.dot = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v.x * w.x + v.y * w.y;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n * \n * Perform the cross product on a vector and a scalar. In 2D this produces a\n * vector.\n */\nVec2.cross = function(v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y, -w * v.x);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y, v * w.x);\n\n  } else {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return v.x * w.y - v.y * w.x\n  }\n}\n\n/**\n * Returns `a + (v x w)`\n */\nVec2.addCross = function(a, v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y + a.x, -w * v.x + a.y);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y + a.x, v * w.x + a.y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nVec2.add = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x + w.x, v.y + w.y);\n}\n\n/**\n * @deprecated Use combine\n */\nVec2.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return Vec2.combine(a, v, b, w);\n  } else {\n    return Vec2.mul(a, v);\n  }\n}\n\nVec2.combine = function(a, v, b, w) {\n  return Vec2.zero().setCombine(a, v, b, w);\n}\n\nVec2.sub = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x - w.x, v.y - w.y);\n}\n\nVec2.mul = function(a, b) {\n  if (typeof a === 'object') {\n    _ASSERT && Vec2.assert(a);\n    _ASSERT && Math.assert(b);\n    return Vec2.neo(a.x * b, a.y * b);\n\n  } else if (typeof b === 'object') {\n    _ASSERT && Math.assert(a);\n    _ASSERT && Vec2.assert(b);\n    return Vec2.neo(a * b.x, a * b.y);\n  }\n}\n\nVec2.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  return this;\n}\n\nVec2.neg = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.x, -v.y);\n}\n\nVec2.abs = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Math.abs(v.x), Math.abs(v.y));\n}\n\nVec2.mid = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo((v.x + w.x) * 0.5, (v.y + w.y) * 0.5);\n}\n\nVec2.upper = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.max(v.x, w.x), Math.max(v.y, w.y));\n}\n\nVec2.lower = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.min(v.x, w.x), Math.min(v.y, w.y));\n}\n\nVec2.prototype.clamp = function(max) {\n  var lengthSqr = this.x * this.x + this.y * this.y;\n  if (lengthSqr > max * max) {\n    var invLength = Math.invSqrt(lengthSqr);\n    this.x *= invLength * max;\n    this.y *= invLength * max;\n  }\n  return this;\n}\n\nVec2.clamp = function(v, max) {\n  v = Vec2.neo(v.x, v.y);\n  v.clamp(max);\n  return v;\n}\n\n/**\n * @experimental\n */\nVec2.scaleFn = function (x, y) {\n  return function (v) {\n    return Vec2.neo(v.x * x, v.y * y);\n  };\n}\n\n/**\n * @experimental\n */\nVec2.translateFn = function(x, y) {\n  return function (v) {\n    return Vec2.neo(v.x + x, v.y + y);\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar native = Math;\nvar math = module.exports = create(native);\n\nmath.EPSILON = 1e-9; // TODO\n\n/**\n * This function is used to ensure that a floating point number is not a NaN or\n * infinity.\n */\nmath.isFinite = function(x) {\n  return (typeof x === 'number') && isFinite(x) && !isNaN(x);\n}\n\nmath.assert = function(x) {\n  if (!_ASSERT) return;\n  if (!math.isFinite(x)) {\n    _DEBUG && common.debug(x);\n    throw new Error('Invalid Number!');\n  }\n}\n\n/**\n * TODO: This is a approximate yet fast inverse square-root.\n */\nmath.invSqrt = function(x) {\n  // TODO\n  return 1 / native.sqrt(x);\n}\n\n/**\n * Next Largest Power of 2 Given a binary integer value x, the next largest\n * power of 2 can be computed by a SWAR algorithm that recursively \"folds\" the\n * upper bits into the lower bits. This process yields a bit vector with the\n * same most significant 1 as x, but all 1's below it. Adding 1 to that value\n * yields the next largest power of 2. For a 32-bit value:\n */\nmath.nextPowerOfTwo = function(x) {\n  // TODO\n  x |= (x >> 1);\n  x |= (x >> 2);\n  x |= (x >> 4);\n  x |= (x >> 8);\n  x |= (x >> 16);\n  return x + 1;\n}\n\nmath.isPowerOfTwo = function(x) {\n  return x > 0 && (x & (x - 1)) == 0;\n}\n\nmath.mod = function(num, min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n  if (max > min) {\n    num = (num - min) % (max - min);\n    return num + (num < 0 ? max : min);\n  } else {\n    num = (num - max) % (min - max);\n    return num + (num <= 0 ? min : max);\n  }\n};\n\nmath.clamp = function(num, min, max) {\n  if (num < min) {\n    return min;\n  } else if (num > max) {\n    return max;\n  } else {\n    return num;\n  }\n};\n\nmath.random = function(min, max) {\n  if (typeof min === 'undefined') {\n    max = 1;\n    min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min;\n    min = 0;\n  }\n  return min == max ? min : native.random() * (max - min) + min;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.debug = function() {\n  if (!_DEBUG) return;\n  console.log.apply(console, arguments);\n};\n\nexports.assert = function(statement, err, log) {\n  if (!_ASSERT) return;\n  if (statement) return;\n  log && console.log(log);\n  throw new Error(err);\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Rot;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Math = require('./Math');\n\n// TODO merge with Transform\n\n/**\n * Initialize from an angle in radians.\n */\nfunction Rot(angle) {\n  if (!(this instanceof Rot)) {\n    return new Rot(angle);\n  }\n  if (typeof angle === 'number') {\n    this.setAngle(angle);\n  } else if (typeof angle === 'object') {\n      this.set(angle);\n  } else {\n    this.setIdentity();\n  }\n}\n\nRot.neo = function(angle) {\n  var obj = Object.create(Rot.prototype);\n  obj.setAngle(angle);\n  return obj;\n};\n\nRot.clone = function(rot) {\n  _ASSERT && Rot.assert(rot);\n  var obj = Object.create(Rot.prototype);\n  obj.s = rot.s;\n  obj.c = rot.c;\n  return obj;\n};\n\nRot.identity = function() {\n  var obj = Object.create(Rot.prototype);\n  obj.s = 0.0;\n  obj.c = 1.0;\n  return obj;\n};\n\nRot.isValid = function(o) {\n  return o && Math.isFinite(o.s) && Math.isFinite(o.c);\n}\n\nRot.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Rot.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Rot!');\n  }\n}\n\n/**\n * Set to the identity rotation.\n */\nRot.prototype.setIdentity = function() {\n  this.s = 0.0;\n  this.c = 1.0;\n}\n\nRot.prototype.set = function(angle) {\n  if (typeof angle === 'object') {\n    _ASSERT && Rot.assert(angle);\n    this.s = angle.s;\n    this.c = angle.c;\n\n  } else {\n    _ASSERT && Math.assert(angle);\n    // TODO_ERIN optimize\n    this.s = Math.sin(angle);\n    this.c = Math.cos(angle);\n  }\n}\n\n/**\n * Set using an angle in radians.\n */\nRot.prototype.setAngle = function(angle) {\n  _ASSERT && Math.assert(angle);\n  // TODO_ERIN optimize\n  this.s = Math.sin(angle);\n  this.c = Math.cos(angle);\n};\n\n/**\n * Get the angle in radians.\n */\nRot.prototype.getAngle = function() {\n  return Math.atan2(this.s, this.c);\n}\n\n/**\n * Get the x-axis.\n */\nRot.prototype.getXAxis = function() {\n  return Vec2.neo(this.c, this.s);\n}\n\n/**\n * Get the u-axis.\n */\nRot.prototype.getYAxis = function() {\n  return Vec2.neo(-this.s, this.c);\n}\n\n/**\n * Multiply two rotations: q * r\n * \n * @returns Rot\n * \n * Rotate a vector\n * \n * @returns Vec2\n */\nRot.mul = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n    // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n    // s = qs * rc + qc * rs\n    // c = qc * rc - qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.s * m.c + rot.c * m.s;\n    qr.c = rot.c * m.c - rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulRot = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Rot.assert(m);\n  // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n  // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n  // s = qs * rc + qc * rs\n  // c = qc * rc - qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.s * m.c + rot.c * m.s;\n  qr.c = rot.c * m.c - rot.s * m.s;\n  return qr;\n}\n\nRot.mulVec2 = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n}\n\nRot.mulSub = function(rot, v, w) {\n  var x = rot.c * (v.x - w.x) - rot.s * (v.y - w.y);\n  var y = rot.s * (v.x - w.x) + rot.c * (v.y - w.y);\n  return Vec2.neo(x, y);\n}\n\n/**\n * Transpose multiply two rotations: qT * r\n * \n * @returns Rot\n * \n * Inverse rotate a vector\n * \n * @returns Vec2\n */\nRot.mulT = function(rot, m) {\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n    // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n    // s = qc * rs - qs * rc\n    // c = qc * rc + qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.c * m.s - rot.s * m.c;\n    qr.c = rot.c * m.c + rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulTRot = function(rot, m) {\n  _ASSERT && Rot.assert(m);\n  // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n  // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n  // s = qc * rs - qs * rc\n  // c = qc * rc + qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.c * m.s - rot.s * m.c;\n  qr.c = rot.c * m.c + rot.s * m.s;\n  return qr;\n}\n\nRot.mulTVec2 = function(rot, m) {\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\n// TODO merge with World options?\n\nvar Settings = exports;\n\n/**\n * Tuning constants based on meters-kilograms-seconds (MKS) units.\n */\n\n// Collision\n/**\n * The maximum number of contact points between two convex shapes. Do not change\n * this value.\n */\nSettings.maxManifoldPoints = 2;\n\n/**\n * The maximum number of vertices on a convex polygon. You cannot increase this\n * too much because BlockAllocator has a maximum object size.\n */\nSettings.maxPolygonVertices = 12;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This allows proxies to move\n * by a small amount without triggering a tree adjustment. This is in meters.\n */\nSettings.aabbExtension = 0.1;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This is used to predict the\n * future position based on the current displacement. This is a dimensionless\n * multiplier.\n */\nSettings.aabbMultiplier = 2.0;\n\n/**\n * A small length used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.linearSlop = 0.005;\nSettings.linearSlopSquared = Settings.linearSlop * Settings.linearSlop;\n\n/**\n * A small angle used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.angularSlop = (2.0 / 180.0 * Math.PI);\n\n/**\n * The radius of the polygon/edge shape skin. This should not be modified.\n * Making this smaller means polygons will have an insufficient buffer for\n * continuous collision. Making it larger may create artifacts for vertex\n * collision.\n */\nSettings.polygonRadius = (2.0 * Settings.linearSlop);\n\n/**\n * Maximum number of sub-steps per contact in continuous physics simulation.\n */\nSettings.maxSubSteps = 8;\n\n// Dynamics\n\n/**\n * Maximum number of contacts to be handled to solve a TOI impact.\n */\nSettings.maxTOIContacts = 32;\n\n/**\n * Maximum iterations to solve a TOI.\n */\nSettings.maxTOIIterations = 20;\n\n/**\n * Maximum iterations to find Distance.\n */\nSettings.maxDistnceIterations = 20;\n\n/**\n * A velocity threshold for elastic collisions. Any collision with a relative\n * linear velocity below this threshold will be treated as inelastic.\n */\nSettings.velocityThreshold = 1.0;\n\n/**\n * The maximum linear position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxLinearCorrection = 0.2;\n\n/**\n * The maximum angular position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxAngularCorrection = (8.0 / 180.0 * Math.PI);\n\n/**\n * The maximum linear velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxTranslation = 2.0;\nSettings.maxTranslationSquared = (Settings.maxTranslation * Settings.maxTranslation);\n\n/**\n * The maximum angular velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxRotation = (0.5 * Math.PI)\nSettings.maxRotationSquared = (Settings.maxRotation * Settings.maxRotation)\n\n/**\n * This scale factor controls how fast overlap is resolved. Ideally this would\n * be 1 so that overlap is removed in one time step. However using values close\n * to 1 often lead to overshoot.\n */\nSettings.baumgarte = 0.2;\nSettings.toiBaugarte = 0.75;\n\n// Sleep\n\n/**\n * The time that a body must be still before it will go to sleep.\n */\nSettings.timeToSleep = 0.5;\n\n/**\n * A body cannot sleep if its linear velocity is above this tolerance.\n */\nSettings.linearSleepTolerance = 0.01;\n\nSettings.linearSleepToleranceSqr = Math.pow(Settings.linearSleepTolerance, 2);\n\n/**\n * A body cannot sleep if its angular velocity is above this tolerance.\n */\nSettings.angularSleepTolerance = (2.0 / 180.0 * Math.PI);\n\nSettings.angularSleepToleranceSqr = Math.pow(Settings.angularSleepTolerance, 2);\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Transform;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n// TODO merge with Rot\n\n/**\n * A transform contains translation and rotation. It is used to represent the\n * position and orientation of rigid frames. Initialize using a position vector\n * and a rotation.\n *\n * @prop {Vec2} position\n * @prop {Rot} rotation\n */\nfunction Transform(position, rotation) {\n  if (!(this instanceof Transform)) {\n    return new Transform(position, rotation);\n  }\n  this.p = Vec2.zero();\n  this.q = Rot.identity();\n  if (typeof position !== 'undefined') {\n    this.p.set(position);\n  }\n  if (typeof rotation !== 'undefined') {\n    this.q.set(rotation);\n  }\n};\n\nTransform.clone = function(xf) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(xf.p);\n  obj.q = Rot.clone(xf.q);\n  return obj;\n};\n\nTransform.neo = function(position, rotation) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(position);\n  obj.q = Rot.clone(rotation);\n  return obj;\n};\n\nTransform.identity = function() {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.zero();\n  obj.q = Rot.identity();\n  return obj;\n};\n\n/**\n * Set this to the identity transform.\n */\nTransform.prototype.setIdentity = function() {\n  this.p.setZero();\n  this.q.setIdentity();\n}\n\n/**\n * Set this based on the position and angle.\n */\nTransform.prototype.set = function(a, b) {\n  if (typeof b === 'undefined') {\n    this.p.set(a.p);\n    this.q.set(a.q);\n  } else {\n    this.p.set(a);\n    this.q.set(b);\n  }\n}\n\nTransform.isValid = function(o) {\n  return o && Vec2.isValid(o.p) && Rot.isValid(o.q);\n}\n\nTransform.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Transform.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Transform!');\n  }\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mul = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if (Array.isArray(b)) {\n    var arr = [];\n    for (var i = 0; i < b.length; i++) {\n      arr[i] = Transform.mul(a, b[i]);\n    }\n    return arr;\n\n  } else if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n    var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n    // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n    var xf = Transform.identity();\n    xf.q = Rot.mulRot(a.q, b.q);\n    xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n    return xf;\n  }\n}\n\n/**\n * @deprecated Use mulFn instead.\n */\nTransform.mulAll = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  var arr = [];\n  for (var i = 0; i < b.length; i++) {\n    arr[i] = Transform.mul(a, b[i]);\n  }\n  return arr;\n}\n\n/**\n * @experimental\n */\nTransform.mulFn = function(a) {\n  _ASSERT && Transform.assert(a);\n  return function(b) {\n    return Transform.mul(a, b);\n  };\n}\n\nTransform.mulVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n  var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n  return Vec2.neo(x, y);\n}\n\nTransform.mulXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n  // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n  var xf = Transform.identity();\n  xf.q = Rot.mulRot(a.q, b.q);\n  xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n  return xf;\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mulT = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b)\n    var px = b.x - a.p.x;\n    var py = b.y - a.p.y;\n    var x = (a.q.c * px + a.q.s * py);\n    var y = (-a.q.s * px + a.q.c * py);\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q' * (B.q * v1 + B.p - A.p)\n    // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n    var xf = Transform.identity();\n    xf.q.set(Rot.mulTRot(a.q, b.q));\n    xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n    return xf;\n  }\n}\n\nTransform.mulTVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b)\n  var px = b.x - a.p.x;\n  var py = b.y - a.p.y;\n  var x = (a.q.c * px + a.q.s * py);\n  var y = (-a.q.s * px + a.q.c * py);\n  return Vec2.neo(x, y);\n}\n\nTransform.mulTXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q' * (B.q * v1 + B.p - A.p)\n  // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n  var xf = Transform.identity();\n  xf.q.set(Rot.mulTRot(a.q, b.q));\n  xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n  return xf;\n}\n","if (typeof Object.create == 'function') {\n  module.exports = function(proto, props) {\n    return Object.create.call(Object, proto, props);\n  };\n} else {\n  module.exports = function(proto, props) {\n    if (props)\n      throw Error('Second argument is not supported!');\n    if (typeof proto !== 'object' || proto === null)\n      throw Error('Invalid prototype!');\n    noop.prototype = proto;\n    return new noop;\n  };\n  function noop() {\n  }\n}\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function(to, from) {\n  if (to === null || typeof to === 'undefined') {\n    to = {};\n  }\n\n  for ( var key in from) {\n    if (from.hasOwnProperty(key) && typeof to[key] === 'undefined') {\n      to[key] = from[key];\n    }\n  }\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    var symbols = Object.getOwnPropertySymbols(from);\n    for (var i = 0; i < symbols.length; i++) {\n      var symbol = symbols[i];\n      if (from.propertyIsEnumerable(symbol) && typeof to[key] === 'undefined') {\n        to[symbol] = from[symbol];\n      }\n    }\n  }\n  return to;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Sweep;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\nvar Transform = require('./Transform');\n\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function(xf) {\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function(localCenter, xf) {\n  this.localCenter.set(localCenter);\n\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\nSweep.prototype.getTransform = function(xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.setCombine((1.0 - beta), this.c0, beta, this.c);\n\n  // shift to origin\n  xf.p.sub(Rot.mulVec2(xf.q, this.localCenter));\n};\n\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\nSweep.prototype.advance = function(alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.setCombine(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function() {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\nSweep.prototype.normalize = function() {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function() {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function(that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat22;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\n\n/**\n * A 2-by-2 matrix. Stored in column-major order.\n */\nfunction Mat22(a, b, c, d) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec2.clone(a);\n    this.ey = Vec2.clone(b);\n  } else if (typeof a === 'number') {\n    this.ex = Vec2.neo(a, c);\n    this.ey = Vec2.neo(b, d)\n  } else {\n    this.ex = Vec2.zero();\n    this.ey = Vec2.zero()\n  }\n};\n\nMat22.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat22.isValid = function(o) {\n  return o && Vec2.isValid(o.ex) && Vec2.isValid(o.ey);\n};\n\nMat22.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat22.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat22!');\n  }\n};\n\nMat22.prototype.set = function(a, b, c, d) {\n  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number'\n      && typeof d === 'number') {\n    this.ex.set(a, c);\n    this.ey.set(b, d);\n\n  } else if (typeof a === 'object' && typeof b === 'object') {\n    this.ex.set(a);\n    this.ey.set(b);\n\n  } else if (typeof a === 'object') {\n    _ASSERT && Mat22.assert(a);\n    this.ex.set(a.ex);\n    this.ey.set(a.ey);\n\n  } else {\n    _ASSERT && common.assert(false);\n  }\n}\n\nMat22.prototype.setIdentity = function() {\n  this.ex.x = 1.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 1.0;\n}\n\nMat22.prototype.setZero = function() {\n  this.ex.x = 0.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 0.0;\n}\n\nMat22.prototype.getInverse = function() {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var imx = new Mat22();\n  imx.ex.x = det * d;\n  imx.ey.x = -det * b;\n  imx.ex.y = -det * c;\n  imx.ey.y = det * a;\n  return imx;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n */\nMat22.prototype.solve = function(v) {\n  _ASSERT && Vec2.assert(v);\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var w = Vec2.zero();\n  w.x = det * (d * v.x - b * v.y);\n  w.y = det * (a * v.y - c * v.x);\n  return w;\n}\n\n/**\n * Multiply a matrix times a vector. If a rotation matrix is provided, then this\n * transforms the vector from one frame to another.\n */\nMat22.mul = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) {\n    _ASSERT && Vec2.assert(v);\n    var x = mx.ex.x * v.x + mx.ey.x * v.y;\n    var y = mx.ex.y * v.x + mx.ey.y * v.y;\n    return Vec2.neo(x, y);\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n    var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n    var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n    var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n    var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n    return new Mat22(a, b, c, d);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulVec2 = function(mx, v) {\n  _ASSERT && Vec2.assert(v);\n  var x = mx.ex.x * v.x + mx.ey.x * v.y;\n  var y = mx.ex.y * v.x + mx.ey.y * v.y;\n  return Vec2.neo(x, y);\n}\n\nMat22.mulMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(v);\n  // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n  var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n  var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n  var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n  var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n  return new Mat22(a, b, c, d);\n  _ASSERT && common.assert(false);\n}\n\n/**\n * Multiply a matrix transpose times a vector. If a rotation matrix is provided,\n * then this transforms the vector from one frame to another (inverse\n * transform).\n */\nMat22.mulT = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) { // Vec2\n    _ASSERT && Vec2.assert(v);\n    return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n    var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n    return new Mat22(c1, c2);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulTVec2 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n}\n\nMat22.mulTMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Mat22.assert(v);\n  var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n  var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n  return new Mat22(c1, c2);\n}\n\nMat22.abs = function(mx) {\n  _ASSERT && Mat22.assert(mx);\n  return new Mat22(Vec2.abs(mx.ex), Vec2.abs(mx.ey));\n}\n\nMat22.add = function(mx1, mx2) {\n  _ASSERT && Mat22.assert(mx1);\n  _ASSERT && Mat22.assert(mx2);\n  return new Mat22(Vec2.add(mx1.ex, mx2.ex), Vec2.add(mx1.ey, mx2.ey));\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec3;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec3(x, y, z) {\n  if (!(this instanceof Vec3)) {\n    return new Vec3(x, y, z);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0, this.y = 0, this.z = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x, this.y = x.y, this.z = x.z;\n  } else {\n    this.x = x, this.y = y, this.z = z;\n  }\n  _ASSERT && Vec3.assert(this);\n};\n\nVec3.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y,\n    z: this.z\n  };\n};\n\nVec3._deserialize = function(data) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  obj.z = data.z;\n  return obj;\n};\n\nVec3.neo = function(x, y, z) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = x;\n  obj.y = y;\n  obj.z = z;\n  return obj;\n};\n\nVec3.clone = function(v) {\n  _ASSERT && Vec3.assert(v);\n  return Vec3.neo(v.x, v.y, v.z);\n};\n\nVec3.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec3.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y) && Math.isFinite(v.z);\n}\n\nVec3.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec3.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec3!');\n  }\n}\n\nVec3.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  this.z = 0.0;\n  return this;\n}\n\nVec3.prototype.set = function(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  return this;\n}\n\nVec3.prototype.add = function(w) {\n  this.x += w.x;\n  this.y += w.y;\n  this.z += w.z;\n  return this;\n}\n\nVec3.prototype.sub = function(w) {\n  this.x -= w.x;\n  this.y -= w.y;\n  this.z -= w.z;\n  return this;\n}\n\nVec3.prototype.mul = function(m) {\n  this.x *= m;\n  this.y *= m;\n  this.z *= m;\n  return this;\n}\n\nVec3.areEqual = function(v, w) {\n  _ASSERT && Vec3.assert(v);\n  _ASSERT && Vec3.assert(w);\n  return v == w ||\n    typeof v === 'object' && v !== null &&\n    typeof w === 'object' && w !== null &&\n    v.x === w.x && v.y === w.y && v.z === w.z;\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec3.dot = function(v, w) {\n  return v.x * w.x + v.y * w.y + v.z * w.z;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n */\nVec3.cross = function(v, w) {\n  return new Vec3(\n    v.y * w.z - v.z * w.y,\n    v.z * w.x - v.x * w.z,\n    v.x * w.y - v.y * w.x\n  );\n}\n\nVec3.add = function(v, w) {\n  return new Vec3(v.x + w.x, v.y + w.y, v.z + w.z);\n}\n\nVec3.sub = function(v, w) {\n  return new Vec3(v.x - w.x, v.y - w.y, v.z - w.z);\n}\n\nVec3.mul = function(v, m) {\n  return new Vec3(m * v.x, m * v.y, m * v.z);\n}\n\nVec3.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  this.z = -this.z;\n  return this;\n}\n\nVec3.neg = function(v) {\n  return new Vec3(-v.x, -v.y, -v.z);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Joint;\n\nvar common = require('./util/common');\n\n/**\n * A joint edge is used to connect bodies and joints together in a joint graph\n * where each body is a node and each joint is an edge. A joint edge belongs to\n * a doubly linked list maintained in each attached body. Each joint has two\n * joint nodes, one for each attached body.\n * \n * @prop {Body} other provides quick access to the other body attached.\n * @prop {Joint} joint the joint\n * @prop {JointEdge} prev the previous joint edge in the body's joint list\n * @prop {JointEdge} next the next joint edge in the body's joint list\n */\nfunction JointEdge() {\n  this.other = null;\n  this.joint = null;\n  this.prev = null;\n  this.next = null;\n};\n\n/**\n * @typedef {Object} JointDef\n *\n * Joint definitions are used to construct joints.\n * \n * @prop userData Use this to attach application specific data to your joints.\n *       void userData;\n * @prop {boolean} collideConnected Set this flag to true if the attached bodies\n *       should collide.\n *\n * @prop {Body} bodyA The first attached body.\n * @prop {Body} bodyB The second attached body.\n */\n\nvar DEFAULTS = {\n  userData : null,\n  collideConnected : false\n};\n\n/**\n * The base joint class. Joints are used to constraint two bodies together in\n * various fashions. Some joints also feature limits and motors.\n * \n * @param {JointDef} def\n */\nfunction Joint(def, bodyA, bodyB) {\n  bodyA = def.bodyA || bodyA;\n  bodyB = def.bodyB || bodyB;\n\n  _ASSERT && common.assert(bodyA);\n  _ASSERT && common.assert(bodyB);\n  _ASSERT && common.assert(bodyA != bodyB);\n\n  this.m_type = 'unknown-joint';\n\n  this.m_bodyA = bodyA;\n  this.m_bodyB = bodyB;\n\n  this.m_index = 0;\n  this.m_collideConnected = !!def.collideConnected;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_edgeA = new JointEdge();\n  this.m_edgeB = new JointEdge();\n\n  this.m_islandFlag = false;\n  this.m_userData = def.userData;\n};\n\nJoint.TYPES = {};\n\nJoint._deserialize = function(data, context, restore) {\n  var clazz = Joint.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\n/**\n * Short-cut function to determine if either body is inactive.\n * \n * @returns {boolean}\n */\nJoint.prototype.isActive = function() {\n  return this.m_bodyA.isActive() && this.m_bodyB.isActive();\n}\n\n/**\n * Get the type of the concrete joint.\n * \n * @returns JointType\n */\nJoint.prototype.getType = function() {\n  return this.m_type;\n}\n\n/**\n * Get the first body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyA = function() {\n  return this.m_bodyA;\n}\n\n/**\n * Get the second body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyB = function() {\n  return this.m_bodyB;\n}\n\n/**\n * Get the next joint the world joint list.\n * \n * @returns Joint\n */\nJoint.prototype.getNext = function() {\n  return this.m_next;\n}\n\nJoint.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\nJoint.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get collide connected. Note: modifying the collide connect flag won't work\n * correctly because the flag is only checked when fixture AABBs begin to\n * overlap.\n * \n * @returns {boolean}\n */\nJoint.prototype.getCollideConnected = function() {\n  return this.m_collideConnected;\n};\n\n/**\n * Get the anchor point on bodyA in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorA = function() {\n};\n\n/**\n * Get the anchor point on bodyB in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorB = function() {\n};\n\n/**\n * Get the reaction force on bodyB at the joint anchor in Newtons.\n * \n * @param {float} inv_dt\n * @return {Vec2}\n */\nJoint.prototype.getReactionForce = function(inv_dt) {\n};\n\n/**\n * Get the reaction torque on bodyB in N*m.\n * \n * @param {float} inv_dt\n * @return {float}\n */\nJoint.prototype.getReactionTorque = function(inv_dt) {\n};\n\n/**\n * Shift the origin for any points stored in world coordinates.\n * \n * @param {Vec2} newOrigin\n */\nJoint.prototype.shiftOrigin = function(newOrigin) {\n};\n\n/**\n */\nJoint.prototype.initVelocityConstraints = function(step) {\n};\n\n/**\n */\nJoint.prototype.solveVelocityConstraints = function(step) {\n};\n\n/**\n * This returns true if the position errors are within tolerance.\n */\nJoint.prototype.solvePositionConstraints = function(step) {\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Velocity;\n\nvar Vec2 = require('./Vec2');\n\n/**\n * @prop {Vec2} v linear\n * @prop {float} w angular\n */\nfunction Velocity() {\n  this.v = Vec2.zero();\n  this.w = 0;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Position;\n\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n/**\n * @prop {Vec2} c location\n * @prop {float} a angle\n */\nfunction Position() {\n  this.c = Vec2.zero();\n  this.a = 0;\n}\n\nPosition.prototype.getTransform = function(xf, p) {\n  xf.q.set(this.a);\n  xf.p.set(Vec2.sub(this.c, Rot.mulVec2(xf.q, p)));\n  return xf;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat33;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Vec3 = require('./Vec3');\n\n/**\n * A 3-by-3 matrix. Stored in column-major order.\n */\nfunction Mat33(a, b, c) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec3.clone(a);\n    this.ey = Vec3.clone(b);\n    this.ez = Vec3.clone(c);\n  } else {\n    this.ex = Vec3();\n    this.ey = Vec3();\n    this.ez = Vec3();\n  }\n};\n\nMat33.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat33.isValid = function(o) {\n  return o && Vec3.isValid(o.ex) && Vec3.isValid(o.ey) && Vec3.isValid(o.ez);\n};\n\nMat33.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat33.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat33!');\n  }\n};\n\n/**\n * Set this matrix to all zeros.\n */\nMat33.prototype.setZero = function() {\n  this.ex.setZero();\n  this.ey.setZero();\n  this.ez.setZero();\n  return this;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n * \n * @param {Vec3} v\n * @returns {Vec3}\n */\nMat33.prototype.solve33 = function(v) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = new Vec3();\n  r.x = det * Vec3.dot(v, Vec3.cross(this.ey, this.ez));\n  r.y = det * Vec3.dot(this.ex, Vec3.cross(v, this.ez));\n  r.z = det * Vec3.dot(this.ex, Vec3.cross(this.ey, v));\n  return r;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix\n * equation.\n * \n * @param {Vec2} v\n * \n * @returns {Vec2}\n */\nMat33.prototype.solve22 = function(v) {\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a21 = this.ex.y;\n  var a22 = this.ey.y;\n  var det = a11 * a22 - a12 * a21;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = Vec2.zero();\n  r.x = det * (a22 * v.x - a12 * v.y);\n  r.y = det * (a11 * v.y - a21 * v.x);\n  return r;\n}\n\n/**\n * Get the inverse of this matrix as a 2-by-2. Returns the zero matrix if\n * singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getInverse22 = function(M) {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  M.ex.x = det * d;\n  M.ey.x = -det * b;\n  M.ex.z = 0.0;\n  M.ex.y = -det * c;\n  M.ey.y = det * a;\n  M.ey.z = 0.0;\n  M.ez.x = 0.0;\n  M.ez.y = 0.0;\n  M.ez.z = 0.0;\n}\n\n/**\n * Get the symmetric inverse of this matrix as a 3-by-3. Returns the zero matrix\n * if singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getSymInverse33 = function(M) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a13 = this.ez.x;\n  var a22 = this.ey.y;\n  var a23 = this.ez.y;\n  var a33 = this.ez.z;\n\n  M.ex.x = det * (a22 * a33 - a23 * a23);\n  M.ex.y = det * (a13 * a23 - a12 * a33);\n  M.ex.z = det * (a12 * a23 - a13 * a22);\n\n  M.ey.x = M.ex.y;\n  M.ey.y = det * (a11 * a33 - a13 * a13);\n  M.ey.z = det * (a13 * a12 - a11 * a23);\n\n  M.ez.x = M.ex.z;\n  M.ez.y = M.ey.z;\n  M.ez.z = det * (a11 * a22 - a12 * a12);\n}\n\n/**\n * Multiply a matrix times a vector.\n * \n * @param {Mat33} a\n * @param {Vec3|Vec2} b\n * \n * @returns {Vec3|Vec2}\n */\nMat33.mul = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  if (b && 'z' in b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec3.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n    var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n    var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n    return new Vec3(x, y, z);\n\n  } else if (b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y;\n    var y = a.ex.y * b.x + a.ey.y * b.y;\n    return Vec2.neo(x, y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat33.mulVec3 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec3.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n  var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n  var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n  return new Vec3(x, y, z);\n}\n\nMat33.mulVec2 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y;\n  var y = a.ex.y * b.x + a.ey.y * b.y;\n  return Vec2.neo(x, y);\n}\n\nMat33.add = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Mat33.assert(b);\n  return new Mat33(\n    Vec3.add(a.ex, b.ex),\n    Vec3.add(a.ey, b.ey),\n    Vec3.add(a.ez, b.ez)\n  );\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Shape;\n\nvar Math = require('./common/Math');\n\n/**\n * A shape is used for collision detection. You can create a shape however you\n * like. Shapes used for simulation in World are created automatically when a\n * Fixture is created. Shapes may encapsulate one or more child shapes.\n */\nfunction Shape() {\n  this.m_type;\n  this.m_radius;\n}\n\nShape.prototype._reset = function() {\n};\n\nShape.prototype._serialize = function() {\n  return {};\n};\n\nShape.TYPES = {};\n\nShape._deserialize = function(data, context, restore) {\n  var clazz = Shape.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\nShape.isValid = function(shape) {\n  return !!shape;\n};\n\nShape.prototype.getRadius = function() {\n  return this.m_radius;\n};\n\n/**\n * Get the type of this shape. You can use this to down cast to the concrete\n * shape.\n * \n * @return the shape type.\n */\nShape.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * @deprecated Shapes should be treated as immutable.\n *\n * clone the concrete shape.\n */\nShape.prototype._clone = function() {\n};\n\n/**\n * // Get the number of child primitives.\n */\nShape.prototype.getChildCount = function() {\n};\n\n/**\n * Test a point for containment in this shape. This only works for convex\n * shapes.\n * \n * @param {Transform} xf The shape world transform.\n * @param p A point in world coordinates.\n */\nShape.prototype.testPoint = function(xf, p) {\n};\n\n/**\n * Cast a ray against a child shape.\n * \n * @param {RayCastOutput} output The ray-cast results.\n * @param {RayCastInput} input The ray-cast input parameters.\n * @param {Transform} transform The transform to be applied to the shape.\n * @param childIndex The child shape index\n */\nShape.prototype.rayCast = function(output, input, transform, childIndex) {\n};\n\n/**\n * Given a transform, compute the associated axis aligned bounding box for a\n * child shape.\n * \n * @param {AABB} aabb Returns the axis aligned box.\n * @param {Transform} xf The world transform of the shape.\n * @param childIndex The child shape\n */\nShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n};\n\n/**\n * Compute the mass properties of this shape using its dimensions and density.\n * The inertia tensor is computed about the local origin.\n * \n * @param {MassData} massData Returns the mass data for this shape.\n * @param density The density in kilograms per meter squared.\n */\nShape.prototype.computeMass = function(massData, density) {\n};\n\n/**\n * @param {DistanceProxy} proxy\n */\nShape.prototype.computeDistanceProxy = function(proxy) {\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\n\nmodule.exports = AABB;\n\nfunction AABB(lower, upper) {\n  if (!(this instanceof AABB)) {\n    return new AABB(lower, upper);\n  }\n\n  this.lowerBound = Vec2.zero();\n  this.upperBound = Vec2.zero();\n\n  if (typeof lower === 'object') {\n    this.lowerBound.set(lower);\n  }\n  if (typeof upper === 'object') {\n    this.upperBound.set(upper);\n  } else if (typeof lower === 'object') {\n    this.upperBound.set(lower);\n  }\n};\n\n/**\n * Verify that the bounds are sorted.\n */\nAABB.prototype.isValid = function() {\n  return AABB.isValid(this);\n}\n\nAABB.isValid = function(aabb) {\n  var d = Vec2.sub(aabb.upperBound, aabb.lowerBound);\n  var valid = d.x >= 0.0 && d.y >= 0.0 && Vec2.isValid(aabb.lowerBound) && Vec2.isValid(aabb.upperBound);\n  return valid;\n}\n\nAABB.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!AABB.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid AABB!');\n  }\n}\n\n/**\n * Get the center of the AABB.\n */\nAABB.prototype.getCenter = function() {\n  return Vec2.neo((this.lowerBound.x + this.upperBound.x) * 0.5, (this.lowerBound.y + this.upperBound.y) * 0.5);\n}\n\n/**\n * Get the extents of the AABB (half-widths).\n */\nAABB.prototype.getExtents = function() {\n  return Vec2.neo((this.upperBound.x - this.lowerBound.x) * 0.5, (this.upperBound.y - this.lowerBound.y) * 0.5);\n}\n\n/**\n * Get the perimeter length.\n */\nAABB.prototype.getPerimeter = function() {\n  return 2.0 * (this.upperBound.x - this.lowerBound.x + this.upperBound.y - this.lowerBound.y);\n}\n\n/**\n * Combine one or two AABB into this one.\n */\nAABB.prototype.combine = function(a, b) {\n  b = b || this;\n\n  var lowerA = a.lowerBound;\n  var upperA = a.upperBound;\n  var lowerB = b.lowerBound;\n  var upperB = b.upperBound;\n\n  var lowerX = Math.min(lowerA.x, lowerB.x);\n  var lowerY = Math.min(lowerA.y, lowerB.y);\n  var upperX = Math.max(upperB.x, upperA.x);\n  var upperY = Math.max(upperB.y, upperA.y);\n\n  this.lowerBound.set(lowerX, lowerY);\n  this.upperBound.set(upperX, upperY);\n}\n\nAABB.prototype.combinePoints = function(a, b) {\n  this.lowerBound.set(Math.min(a.x, b.x), Math.min(a.y, b.y));\n  this.upperBound.set(Math.max(a.x, b.x), Math.max(a.y, b.y));\n}\n\nAABB.prototype.set = function(aabb) {\n  this.lowerBound.set(aabb.lowerBound.x, aabb.lowerBound.y);\n  this.upperBound.set(aabb.upperBound.x, aabb.upperBound.y);\n}\n\nAABB.prototype.contains = function(aabb) {\n  var result = true;\n  result = result && this.lowerBound.x <= aabb.lowerBound.x;\n  result = result && this.lowerBound.y <= aabb.lowerBound.y;\n  result = result && aabb.upperBound.x <= this.upperBound.x;\n  result = result && aabb.upperBound.y <= this.upperBound.y;\n  return result;\n}\n\nAABB.prototype.extend = function(value) {\n  AABB.extend(this, value);\n  return this;\n}\n\nAABB.extend = function(aabb, value) {\n  aabb.lowerBound.x -= value;\n  aabb.lowerBound.y -= value;\n  aabb.upperBound.x += value;\n  aabb.upperBound.y += value;\n}\n\nAABB.testOverlap = function(a, b) {\n  var d1x = b.lowerBound.x - a.upperBound.x;\n  var d2x = a.lowerBound.x - b.upperBound.x;\n\n  var d1y = b.lowerBound.y - a.upperBound.y;\n  var d2y = a.lowerBound.y - b.upperBound.y;\n\n  if (d1x > 0 || d1y > 0 || d2x > 0 || d2y > 0) {\n    return false;\n  }\n  return true;\n}\n\nAABB.areEqual = function(a, b) {\n  return Vec2.areEqual(a.lowerBound, b.lowerBound) && Vec2.areEqual(a.upperBound, b.upperBound);\n}\n\nAABB.diff = function(a, b) {\n  var wD = Math.max(0, Math.min(a.upperBound.x, b.upperBound.x) - Math.max(b.lowerBound.x, a.lowerBound.x))\n  var hD = Math.max(0, Math.min(a.upperBound.y, b.upperBound.y) - Math.max(b.lowerBound.y, a.lowerBound.y));\n\n  var wA = a.upperBound.x - a.lowerBound.x;\n  var hA = a.upperBound.y - a.lowerBound.y;\n\n  var wB = b.upperBound.x - b.lowerBound.x;\n  var hB = b.upperBound.y - b.lowerBound.y;\n\n  return wA * hA + wB * hB - wD * hD;\n};\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\n *\n * @prop {Vec2} p1\n * @prop {Vec2} p2\n * @prop {number} maxFraction\n */\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and\n * p2 come from RayCastInput.\n *\n * @prop {Vec2} normal\n * @prop {number} fraction\n */\n\n/**\n * @param {RayCastOutput} output\n * @param {RayCastInput} input\n * @returns {boolean}\n */\nAABB.prototype.rayCast = function(output, input) {\n  // From Real-time Collision Detection, p179.\n\n  var tmin = -Infinity;\n  var tmax = Infinity;\n\n  var p = input.p1;\n  var d = Vec2.sub(input.p2, input.p1);\n  var absD = Vec2.abs(d);\n\n  var normal = Vec2.zero();\n\n  for (var f = 'x'; f !== null; f = (f === 'x' ? 'y' : null)) {\n    if (absD.x < Math.EPSILON) {\n      // Parallel.\n      if (p[f] < this.lowerBound[f] || this.upperBound[f] < p[f]) {\n        return false;\n      }\n    } else {\n      var inv_d = 1.0 / d[f];\n      var t1 = (this.lowerBound[f] - p[f]) * inv_d;\n      var t2 = (this.upperBound[f] - p[f]) * inv_d;\n\n      // Sign of the normal vector.\n      var s = -1.0;\n\n      if (t1 > t2) {\n        var temp = t1;\n        t1 = t2, t2 = temp;\n        s = 1.0;\n      }\n\n      // Push the min up\n      if (t1 > tmin) {\n        normal.setZero();\n        normal[f] = s;\n        tmin = t1;\n      }\n\n      // Pull the max down\n      tmax = Math.min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n  }\n\n  // Does the ray start inside the box?\n  // Does the ray intersect beyond the max fraction?\n  if (tmin < 0.0 || input.maxFraction < tmin) {\n    return false;\n  }\n\n  // Intersection.\n  output.fraction = tmin;\n  output.normal = normal;\n  return true;\n}\n\nAABB.prototype.toString = function() {\n  return JSON.stringify(this);\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar DEBUG_SOLVER = false;\n\nvar common = require('./util/common');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Mat22 = require('./common/Mat22');\nvar Rot = require('./common/Rot');\n\nvar Settings = require('./Settings');\nvar Manifold = require('./Manifold');\nvar Distance = require('./collision/Distance');\n\nmodule.exports = Contact;\n\n/**\n * A contact edge is used to connect bodies and contacts together in a contact\n * graph where each body is a node and each contact is an edge. A contact edge\n * belongs to a doubly linked list maintained in each attached body. Each\n * contact has two contact nodes, one for each attached body.\n * \n * @prop {Contact} contact The contact\n * @prop {ContactEdge} prev The previous contact edge in the body's contact list\n * @prop {ContactEdge} next The next contact edge in the body's contact list\n * @prop {Body} other Provides quick access to the other body attached.\n */\nfunction ContactEdge(contact) {\n  this.contact = contact;\n  this.prev;\n  this.next;\n  this.other;\n};\n\n/**\n * @function Contact~evaluate\n * \n * @param manifold\n * @param xfA\n * @param fixtureA\n * @param indexA\n * @param xfB\n * @param fixtureB\n * @param indexB\n */\n\n/**\n * The class manages contact between two shapes. A contact exists for each\n * overlapping AABB in the broad-phase (except if filtered). Therefore a contact\n * object may exist that has no contact points.\n * \n * @param {Fixture} fA\n * @param {int} indexA\n * @param {Fixture} fB\n * @param {int} indexB\n * @param {Contact~evaluate} evaluateFcn\n */\nfunction Contact(fA, indexA, fB, indexB, evaluateFcn) {\n  // Nodes for connecting bodies.\n  this.m_nodeA = new ContactEdge(this);\n  this.m_nodeB = new ContactEdge(this);\n\n  this.m_fixtureA = fA;\n  this.m_fixtureB = fB;\n\n  this.m_indexA = indexA;\n  this.m_indexB = indexB;\n\n  this.m_evaluateFcn = evaluateFcn;\n\n  this.m_manifold = new Manifold();\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_toi = 1.0;\n  this.m_toiCount = 0;\n  // This contact has a valid TOI in m_toi\n  this.m_toiFlag = false;\n\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n\n  this.m_tangentSpeed = 0.0;\n\n  // This contact can be disabled (by user)\n  this.m_enabledFlag = true;\n\n  // Used when crawling contact graph when forming islands.\n  this.m_islandFlag = false;\n\n  // Set when the shapes are touching.\n  this.m_touchingFlag = false;\n\n  // This contact needs filtering because a fixture filter was changed.\n  this.m_filterFlag = false;\n\n  // This bullet contact had a TOI event\n  this.m_bulletHitFlag = false;\n\n  this.v_points = []; // VelocityConstraintPoint[maxManifoldPoints]\n  this.v_normal = Vec2.zero();\n  this.v_normalMass = new Mat22();\n  this.v_K = new Mat22();\n  this.v_pointCount;\n\n  this.v_tangentSpeed;\n  this.v_friction;\n  this.v_restitution;\n\n  this.v_invMassA;\n  this.v_invMassB;\n  this.v_invIA;\n  this.v_invIB;\n\n  this.p_localPoints = [] // Vec2[maxManifoldPoints];\n  this.p_localNormal = Vec2.zero();\n  this.p_localPoint = Vec2.zero();\n  this.p_localCenterA = Vec2.zero();\n  this.p_localCenterB = Vec2.zero();\n  this.p_type; // Manifold.Type\n  this.p_radiusA;\n  this.p_radiusB;\n  this.p_pointCount;\n\n  this.p_invMassA;\n  this.p_invMassB;\n  this.p_invIA;\n  this.p_invIB;\n}\n\nContact.prototype.initConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var manifold = this.getManifold();\n\n  var pointCount = manifold.pointCount;\n  _ASSERT && common.assert(pointCount > 0);\n\n  this.v_invMassA = bodyA.m_invMass;\n  this.v_invMassB = bodyB.m_invMass;\n  this.v_invIA = bodyA.m_invI;\n  this.v_invIB = bodyB.m_invI;\n\n  this.v_friction = this.m_friction;\n  this.v_restitution = this.m_restitution;\n  this.v_tangentSpeed = this.m_tangentSpeed;\n\n  this.v_pointCount = pointCount;\n\n  this.v_K.setZero();\n  this.v_normalMass.setZero();\n\n  this.p_invMassA = bodyA.m_invMass;\n  this.p_invMassB = bodyB.m_invMass;\n  this.p_invIA = bodyA.m_invI;\n  this.p_invIB = bodyB.m_invI;\n  this.p_localCenterA = Vec2.clone(bodyA.m_sweep.localCenter);\n  this.p_localCenterB = Vec2.clone(bodyB.m_sweep.localCenter);\n\n  this.p_radiusA = shapeA.m_radius;\n  this.p_radiusB = shapeB.m_radius;\n\n  this.p_type = manifold.type;\n  this.p_localNormal = Vec2.clone(manifold.localNormal);\n  this.p_localPoint = Vec2.clone(manifold.localPoint);\n  this.p_pointCount = pointCount;\n\n  for (var j = 0; j < pointCount; ++j) {\n    var cp = manifold.points[j]; // ManifoldPoint\n    var vcp = this.v_points[j] = new VelocityConstraintPoint();\n\n    if (step.warmStarting) {\n      vcp.normalImpulse = step.dtRatio * cp.normalImpulse;\n      vcp.tangentImpulse = step.dtRatio * cp.tangentImpulse;\n\n    } else {\n      vcp.normalImpulse = 0.0;\n      vcp.tangentImpulse = 0.0;\n    }\n\n    vcp.rA.setZero();\n    vcp.rB.setZero();\n    vcp.normalMass = 0.0;\n    vcp.tangentMass = 0.0;\n    vcp.velocityBias = 0.0;\n\n    this.p_localPoints[j] = Vec2.clone(cp.localPoint);\n\n  }\n};\n\n/**\n * Get the contact manifold. Do not modify the manifold unless you understand\n * the internals of the library.\n */\nContact.prototype.getManifold = function() {\n  return this.m_manifold;\n}\n\n/**\n * Get the world manifold.\n * \n * @param {WorldManifold} [worldManifold]\n */\nContact.prototype.getWorldManifold = function(worldManifold) {\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var shapeA = this.m_fixtureA.getShape();\n  var shapeB = this.m_fixtureB.getShape();\n\n  return this.m_manifold.getWorldManifold(worldManifold, bodyA.getTransform(),\n      shapeA.m_radius, bodyB.getTransform(), shapeB.m_radius);\n}\n\n/**\n * Enable/disable this contact. This can be used inside the pre-solve contact\n * listener. The contact is only disabled for the current time step (or sub-step\n * in continuous collisions).\n */\nContact.prototype.setEnabled = function(flag) {\n  this.m_enabledFlag = !!flag;\n}\n\n/**\n * Has this contact been disabled?\n */\nContact.prototype.isEnabled = function() {\n  return this.m_enabledFlag;\n}\n\n/**\n * Is this contact touching?\n */\nContact.prototype.isTouching = function() {\n  return this.m_touchingFlag;\n}\n\n/**\n * Get the next contact in the world's contact list.\n */\nContact.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get fixture A in this contact.\n */\nContact.prototype.getFixtureA = function() {\n  return this.m_fixtureA;\n}\n\n/**\n * Get fixture B in this contact.\n */\nContact.prototype.getFixtureB = function() {\n  return this.m_fixtureB;\n}\n\n/**\n * Get the child primitive index for fixture A.\n */\nContact.prototype.getChildIndexA = function() {\n  return this.m_indexA;\n}\n\n/**\n * Get the child primitive index for fixture B.\n */\nContact.prototype.getChildIndexB = function() {\n  return this.m_indexB;\n}\n\n/**\n * Flag this contact for filtering. Filtering will occur the next time step.\n */\nContact.prototype.flagForFiltering = function() {\n  this.m_filterFlag = true;\n}\n\n/**\n * Override the default friction mixture. You can call this in\n * ContactListener.preSolve. This value persists until set or reset.\n */\nContact.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the friction.\n */\nContact.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Reset the friction mixture to the default value.\n */\nContact.prototype.resetFriction = function() {\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n}\n\n/**\n * Override the default restitution mixture. You can call this in\n * ContactListener.preSolve. The value persists until you set or reset.\n */\nContact.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Get the restitution.\n */\nContact.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Reset the restitution to the default value.\n */\nContact.prototype.resetRestitution = function() {\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n}\n\n/**\n * Set the desired tangent speed for a conveyor belt behavior. In meters per\n * second.\n */\nContact.prototype.setTangentSpeed = function(speed) {\n  this.m_tangentSpeed = speed;\n}\n\n/**\n * Get the desired tangent speed. In meters per second.\n */\nContact.prototype.getTangentSpeed = function() {\n  return this.m_tangentSpeed;\n}\n\n/**\n * Called by Update method, and implemented by subclasses.\n */\nContact.prototype.evaluate = function(manifold, xfA, xfB) {\n  this.m_evaluateFcn(manifold, xfA, this.m_fixtureA, this.m_indexA, xfB,\n      this.m_fixtureB, this.m_indexB);\n};\n\n/**\n * Updates the contact manifold and touching status.\n * \n * Note: do not assume the fixture AABBs are overlapping or are valid.\n * \n * @param {function} listener.beginContact\n * @param {function} listener.endContact\n * @param {function} listener.preSolve\n */\nContact.prototype.update = function(listener) {\n\n  // Re-enable this contact.\n  this.m_enabledFlag = true;\n\n  var touching = false;\n  var wasTouching = this.m_touchingFlag;\n\n  var sensorA = this.m_fixtureA.isSensor();\n  var sensorB = this.m_fixtureB.isSensor();\n  var sensor = sensorA || sensorB;\n\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var xfA = bodyA.getTransform();\n  var xfB = bodyB.getTransform();\n\n  // Is this contact a sensor?\n  if (sensor) {\n    var shapeA = this.m_fixtureA.getShape();\n    var shapeB = this.m_fixtureB.getShape();\n    touching = Distance.testOverlap(shapeA, this.m_indexA, shapeB,\n        this.m_indexB, xfA, xfB);\n\n    // Sensors don't generate manifolds.\n    this.m_manifold.pointCount = 0;\n  } else {\n\n    // TODO reuse manifold\n    var oldManifold = this.m_manifold;\n    this.m_manifold = new Manifold();\n\n    this.evaluate(this.m_manifold, xfA, xfB);\n    touching = this.m_manifold.pointCount > 0;\n\n    // Match old contact ids to new contact ids and copy the\n    // stored impulses to warm start the solver.\n    for (var i = 0; i < this.m_manifold.pointCount; ++i) {\n      var nmp = this.m_manifold.points[i];\n      nmp.normalImpulse = 0.0;\n      nmp.tangentImpulse = 0.0;\n\n      for (var j = 0; j < oldManifold.pointCount; ++j) {\n        var omp = oldManifold.points[j];\n        if (omp.id.key == nmp.id.key) { // ContactID.key\n          nmp.normalImpulse = omp.normalImpulse;\n          nmp.tangentImpulse = omp.tangentImpulse;\n          break;\n        }\n      }\n    }\n\n    if (touching != wasTouching) {\n      bodyA.setAwake(true);\n      bodyB.setAwake(true);\n    }\n  }\n\n  this.m_touchingFlag = touching;\n\n  if (wasTouching == false && touching == true && listener) {\n    listener.beginContact(this);\n  }\n\n  if (wasTouching == true && touching == false && listener) {\n    listener.endContact(this);\n  }\n\n  if (sensor == false && touching && listener) {\n    listener.preSolve(this, oldManifold);\n  }\n}\n\nContact.prototype.solvePositionConstraint = function(step) {\n  return this._solvePositionConstraint(step, false);\n}\n\nContact.prototype.solvePositionConstraintTOI = function(step, toiA, toiB) {\n  return this._solvePositionConstraint(step, true, toiA, toiB);\n}\n\nContact.prototype._solvePositionConstraint = function(step, toi, toiA, toiB) {\n\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var mA = 0.0;\n  var iA = 0.0;\n  if (!toi || (bodyA == toiA || bodyA == toiB)) {\n    mA = this.p_invMassA;\n    iA = this.p_invIA;\n  }\n\n  var mB = 0.0;\n  var iB = 0.0;\n  if (!toi || (bodyB == toiA || bodyB == toiB)) {\n    mB = this.p_invMassB;\n    iB = this.p_invIB;\n  }\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n\n  var minSeparation = 0.0;\n\n  // Solve normal constraints\n  for (var j = 0; j < this.p_pointCount; ++j) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    xfA.q.set(aA);\n    xfB.q.set(aB);\n    xfA.p = Vec2.sub(cA, Rot.mulVec2(xfA.q, localCenterA));\n    xfB.p = Vec2.sub(cB, Rot.mulVec2(xfB.q, localCenterB));\n\n    // PositionSolverManifold\n    var normal, point, separation;\n    switch (this.p_type) {\n    case Manifold.e_circles:\n      var pointA = Transform.mulVec2(xfA, this.p_localPoint);\n      var pointB = Transform.mulVec2(xfB, this.p_localPoints[0]);\n      normal = Vec2.sub(pointB, pointA);\n      normal.normalize();\n      point = Vec2.combine(0.5, pointA, 0.5, pointB);\n      separation = Vec2.dot(Vec2.sub(pointB, pointA), normal) - this.p_radiusA\n          - this.p_radiusB;\n      break;\n\n    case Manifold.e_faceA:\n      normal = Rot.mulVec2(xfA.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfA, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfB, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n      break;\n\n    case Manifold.e_faceB:\n      normal = Rot.mulVec2(xfB.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfB, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfA, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n\n      // Ensure normal points from A to B\n      normal.mul(-1);\n      break;\n    }\n\n    var rA = Vec2.sub(point, cA);\n    var rB = Vec2.sub(point, cB);\n\n    // Track max constraint error.\n    minSeparation = Math.min(minSeparation, separation);\n\n    var baumgarte = toi ? Settings.toiBaugarte : Settings.baumgarte;\n    var linearSlop = Settings.linearSlop;\n    var maxLinearCorrection = Settings.maxLinearCorrection;\n\n    // Prevent large corrections and allow slop.\n    var C = Math.clamp(baumgarte * (separation + linearSlop),\n        -maxLinearCorrection, 0.0);\n\n    // Compute the effective mass.\n    var rnA = Vec2.cross(rA, normal);\n    var rnB = Vec2.cross(rB, normal);\n    var K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    // Compute normal impulse\n    var impulse = K > 0.0 ? -C / K : 0.0;\n\n    var P = Vec2.mul(impulse, normal);\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n\n  return minSeparation;\n}\n\n// TODO merge with ManifoldPoint\nfunction VelocityConstraintPoint() {\n  this.rA = Vec2.zero();\n  this.rB = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.normalMass = 0;\n  this.tangentMass = 0;\n  this.velocityBias = 0;\n}\n\nContact.prototype.initVelocityConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var radiusA = this.p_radiusA;\n  var radiusB = this.p_radiusB;\n  var manifold = this.getManifold();\n\n  var mA = this.v_invMassA;\n  var mB = this.v_invMassB;\n  var iA = this.v_invIA;\n  var iB = this.v_invIB;\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  _ASSERT && common.assert(manifold.pointCount > 0);\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  xfA.q.set(aA);\n  xfB.q.set(aB);\n  xfA.p.setCombine(1, cA, -1, Rot.mulVec2(xfA.q, localCenterA));\n  xfB.p.setCombine(1, cB, -1, Rot.mulVec2(xfB.q, localCenterB));\n\n  var worldManifold = manifold.getWorldManifold(null, xfA, radiusA, xfB, radiusB);\n\n  this.v_normal.set(worldManifold.normal);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    vcp.rA.set(Vec2.sub(worldManifold.points[j], cA));\n    vcp.rB.set(Vec2.sub(worldManifold.points[j], cB));\n\n    var rnA = Vec2.cross(vcp.rA, this.v_normal);\n    var rnB = Vec2.cross(vcp.rB, this.v_normal);\n\n    var kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    vcp.normalMass = kNormal > 0.0 ? 1.0 / kNormal : 0.0;\n\n    var tangent = Vec2.cross(this.v_normal, 1.0);\n\n    var rtA = Vec2.cross(vcp.rA, tangent);\n    var rtB = Vec2.cross(vcp.rB, tangent);\n\n    var kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\n\n    vcp.tangentMass = kTangent > 0.0 ? 1.0 / kTangent : 0.0;\n\n    // Setup a velocity bias for restitution.\n    vcp.velocityBias = 0.0;\n    var vRel = Vec2.dot(this.v_normal, vB)\n        + Vec2.dot(this.v_normal, Vec2.cross(wB, vcp.rB))\n        - Vec2.dot(this.v_normal, vA)\n        - Vec2.dot(this.v_normal, Vec2.cross(wA, vcp.rA));\n    if (vRel < -Settings.velocityThreshold) {\n      vcp.velocityBias = -this.v_restitution * vRel;\n    }\n  }\n\n  // If we have two points, then prepare the block solver.\n  if (this.v_pointCount == 2 && step.blockSolve) {\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var rn1A = Vec2.cross(vcp1.rA, this.v_normal);\n    var rn1B = Vec2.cross(vcp1.rB, this.v_normal);\n    var rn2A = Vec2.cross(vcp2.rA, this.v_normal);\n    var rn2B = Vec2.cross(vcp2.rB, this.v_normal);\n\n    var k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\n    var k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\n    var k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\n\n    // Ensure a reasonable condition number.\n    var k_maxConditionNumber = 1000.0;\n    if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n      // K is safe to invert.\n      this.v_K.ex.set(k11, k12);\n      this.v_K.ey.set(k12, k22);\n      this.v_normalMass.set(this.v_K.getInverse());\n    } else {\n      // The constraints are redundant, just use one.\n      // TODO_ERIN use deepest?\n      this.v_pointCount = 1;\n    }\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.warmStartConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    var P = Vec2.combine(vcp.normalImpulse, normal, vcp.tangentImpulse, tangent);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n    vA.subMul(mA, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n    vB.addMul(mB, P);\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.storeConstraintImpulses = function(step) {\n  var manifold = this.m_manifold;\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    manifold.points[j].normalImpulse = this.v_points[j].normalImpulse;\n    manifold.points[j].tangentImpulse = this.v_points[j].tangentImpulse;\n  }\n};\n\nContact.prototype.solveVelocityConstraint = function(step) {\n  var bodyA = this.m_fixtureA.m_body;\n  var bodyB = this.m_fixtureB.m_body;\n\n  var velocityA = bodyA.c_velocity;\n  var positionA = bodyA.c_position;\n\n  var velocityB = bodyB.c_velocity;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n  var friction = this.v_friction;\n\n  _ASSERT && common.assert(this.v_pointCount == 1 || this.v_pointCount == 2);\n\n  // Solve tangent constraints first because non-penetration is more important\n  // than friction.\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    // Relative velocity at contact\n    var dv = Vec2.zero();\n    dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n    dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n    // Compute tangent force\n    var vt = Vec2.dot(dv, tangent) - this.v_tangentSpeed;\n    var lambda = vcp.tangentMass * (-vt);\n\n    // Clamp the accumulated force\n    var maxFriction = friction * vcp.normalImpulse;\n    var newImpulse = Math.clamp(vcp.tangentImpulse + lambda, -maxFriction,\n        maxFriction);\n    lambda = newImpulse - vcp.tangentImpulse;\n    vcp.tangentImpulse = newImpulse;\n\n    // Apply contact impulse\n    var P = Vec2.mul(lambda, tangent);\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n  }\n\n  // Solve normal constraints\n  if (this.v_pointCount == 1 || step.blockSolve == false) {\n    for (var i = 0; i < this.v_pointCount; ++i) {\n      var vcp = this.v_points[i]; // VelocityConstraintPoint\n\n      // Relative velocity at contact\n      var dv = Vec2.zero();\n      dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n      dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n      // Compute normal impulse\n      var vn = Vec2.dot(dv, normal);\n      var lambda = -vcp.normalMass * (vn - vcp.velocityBias);\n\n      // Clamp the accumulated impulse\n      var newImpulse = Math.max(vcp.normalImpulse + lambda, 0.0);\n      lambda = newImpulse - vcp.normalImpulse;\n      vcp.normalImpulse = newImpulse;\n\n      // Apply contact impulse\n      var P = Vec2.mul(lambda, normal);\n\n      vA.subMul(mA, P);\n      wA -= iA * Vec2.cross(vcp.rA, P);\n\n      vB.addMul(mB, P);\n      wB += iB * Vec2.cross(vcp.rB, P);\n    }\n  } else {\n    // Block solver developed in collaboration with Dirk Gregorius (back in\n    // 01/07 on Box2D_Lite).\n    // Build the mini LCP for this contact patch\n    //\n    // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i =\n    // 1..2\n    //\n    // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\n    // b = vn0 - velocityBias\n    //\n    // The system is solved using the \"Total enumeration method\" (s. Murty).\n    // The complementary constraint vn_i * x_i\n    // implies that we must have in any solution either vn_i = 0 or x_i = 0.\n    // So for the 2D contact problem the cases\n    // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and\n    // vn1 = 0 need to be tested. The first valid\n    // solution that satisfies the problem is chosen.\n    // \n    // In order to account of the accumulated impulse 'a' (because of the\n    // iterative nature of the solver which only requires\n    // that the accumulated impulse is clamped and not the incremental\n    // impulse) we change the impulse variable (x_i).\n    //\n    // Substitute:\n    // \n    // x = a + d\n    // \n    // a := old total impulse\n    // x := new total impulse\n    // d := incremental impulse\n    //\n    // For the current iteration we extend the formula for the incremental\n    // impulse\n    // to compute the new total impulse:\n    //\n    // vn = A * d + b\n    // = A * (x - a) + b\n    // = A * x + b - A * a\n    // = A * x + b'\n    // b' = b - A * a;\n\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var a = Vec2.neo(vcp1.normalImpulse, vcp2.normalImpulse);\n    _ASSERT && common.assert(a.x >= 0.0 && a.y >= 0.0);\n\n    // Relative velocity at contact\n    var dv1 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp1.rB)).sub(vA).sub(Vec2.cross(wA, vcp1.rA));\n    var dv2 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp2.rB)).sub(vA).sub(Vec2.cross(wA, vcp2.rA));\n\n    // Compute normal velocity\n    var vn1 = Vec2.dot(dv1, normal);\n    var vn2 = Vec2.dot(dv2, normal);\n\n    var b = Vec2.neo(vn1 - vcp1.velocityBias, vn2 - vcp2.velocityBias);\n\n    // Compute b'\n    b.sub(Mat22.mulVec2(this.v_K, a));\n\n    var k_errorTol = 1e-3;\n    // NOT_USED(k_errorTol);\n\n    for (;;) {\n      //\n      // Case 1: vn = 0\n      //\n      // 0 = A * x + b'\n      //\n      // Solve for x:\n      //\n      // x = - inv(A) * b'\n      //\n      var x = Mat22.mulVec2(this.v_normalMass, b).neg();\n\n      if (x.x >= 0.0 && x.y >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          dv1 = vB + Vec2.cross(wB, vcp1.rB) - vA - Vec2.cross(wA, vcp1.rA);\n          dv2 = vB + Vec2.cross(wB, vcp2.rB) - vA - Vec2.cross(wA, vcp2.rA);\n\n          // Compute normal velocity\n          vn1 = Dot(dv1, normal);\n          vn2 = Dot(dv2, normal);\n\n          _ASSERT && common.assert(Abs(vn1 - vcp1.velocityBias) < k_errorTol);\n          _ASSERT && common.assert(Abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 2: vn1 = 0 and x2 = 0\n      //\n      // 0 = a11 * x1 + a12 * 0 + b1'\n      // vn2 = a21 * x1 + a22 * 0 + b2'\n      //\n      x.x = -vcp1.normalMass * b.x;\n      x.y = 0.0;\n      vn1 = 0.0;\n      vn2 = this.v_K.ex.y * x.x + b.y;\n\n      if (x.x >= 0.0 && vn2 >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv1B = Vec2.add(vB, Vec2.cross(wB, vcp1.rB));\n          var dv1A = Vec2.add(vA, Vec2.cross(wA, vcp1.rA));\n          var dv1 = Vec2.sub(dv1B, dv1A);\n\n          // Compute normal velocity\n          vn1 = Vec2.dot(dv1, normal);\n\n          _ASSERT && common.assert(Math.abs(vn1 - vcp1.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 3: vn2 = 0 and x1 = 0\n      //\n      // vn1 = a11 * 0 + a12 * x2 + b1'\n      // 0 = a21 * 0 + a22 * x2 + b2'\n      //\n      x.x = 0.0;\n      x.y = -vcp2.normalMass * b.y;\n      vn1 = this.v_K.ey.x * x.y + b.x;\n      vn2 = 0.0;\n\n      if (x.y >= 0.0 && vn1 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv2B = Vec2.add(vB, Vec2.cross(wB, vcp2.rB));\n          var dv2A = Vec2.add(vA, Vec2.cross(wA, vcp2.rA));\n          var dv1 = Vec2.sub(dv2B, dv2A);\n\n          // Compute normal velocity\n          vn2 = Vec2.dot(dv2, normal);\n\n          _ASSERT && common.assert(Math.abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 4: x1 = 0 and x2 = 0\n      // \n      // vn1 = b1\n      // vn2 = b2;\n      //\n      x.x = 0.0;\n      x.y = 0.0;\n      vn1 = b.x;\n      vn2 = b.y;\n\n      if (vn1 >= 0.0 && vn2 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        break;\n      }\n\n      // No solution, give up. This is hit sometimes, but it doesn't seem to\n      // matter.\n      break;\n    }\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\n/**\n * Friction mixing law. The idea is to allow either fixture to drive the\n * restitution to zero. For example, anything slides on ice.\n */\nfunction mixFriction(friction1, friction2) {\n  return Math.sqrt(friction1 * friction2);\n}\n\n/**\n * Restitution mixing law. The idea is allow for anything to bounce off an\n * inelastic surface. For example, a superball bounces on anything.\n */\nfunction mixRestitution(restitution1, restitution2) {\n  return restitution1 > restitution2 ? restitution1 : restitution2;\n}\n\nvar s_registers = [];\n\n/**\n * @param fn function(fixtureA, indexA, fixtureB, indexB) Contact\n */\nContact.addType = function(type1, type2, callback) {\n\n  s_registers[type1] = s_registers[type1] || {};\n  s_registers[type1][type2] = callback;\n}\n\nContact.create = function(fixtureA, indexA, fixtureB, indexB) {\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  // TODO: pool contacts\n  var contact, evaluateFcn;\n  if (evaluateFcn = s_registers[typeA] && s_registers[typeA][typeB]) {\n    contact = new Contact(fixtureA, indexA, fixtureB, indexB, evaluateFcn);\n  } else if (evaluateFcn = s_registers[typeB] && s_registers[typeB][typeA]) {\n    contact = new Contact(fixtureB, indexB, fixtureA, indexA, evaluateFcn);\n  } else {\n    return null;\n  }\n\n  // Contact creation may swap fixtures.\n  fixtureA = contact.getFixtureA();\n  fixtureB = contact.getFixtureB();\n  indexA = contact.getChildIndexA();\n  indexB = contact.getChildIndexB();\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Connect to body A\n  contact.m_nodeA.contact = contact;\n  contact.m_nodeA.other = bodyB;\n\n  contact.m_nodeA.prev = null;\n  contact.m_nodeA.next = bodyA.m_contactList;\n  if (bodyA.m_contactList != null) {\n    bodyA.m_contactList.prev = contact.m_nodeA;\n  }\n  bodyA.m_contactList = contact.m_nodeA;\n\n  // Connect to body B\n  contact.m_nodeB.contact = contact;\n  contact.m_nodeB.other = bodyA;\n\n  contact.m_nodeB.prev = null;\n  contact.m_nodeB.next = bodyB.m_contactList;\n  if (bodyB.m_contactList != null) {\n    bodyB.m_contactList.prev = contact.m_nodeB;\n  }\n  bodyB.m_contactList = contact.m_nodeB;\n\n  // Wake up the bodies\n  if (fixtureA.isSensor() == false && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  return contact;\n}\n\nContact.destroy = function(contact, listener) {\n  var fixtureA = contact.m_fixtureA;\n  var fixtureB = contact.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  if (contact.isTouching()) {\n    listener.endContact(contact);\n  }\n\n  // Remove from body 1\n  if (contact.m_nodeA.prev) {\n    contact.m_nodeA.prev.next = contact.m_nodeA.next;\n  }\n\n  if (contact.m_nodeA.next) {\n    contact.m_nodeA.next.prev = contact.m_nodeA.prev;\n  }\n\n  if (contact.m_nodeA == bodyA.m_contactList) {\n    bodyA.m_contactList = contact.m_nodeA.next;\n  }\n\n  // Remove from body 2\n  if (contact.m_nodeB.prev) {\n    contact.m_nodeB.prev.next = contact.m_nodeB.next;\n  }\n\n  if (contact.m_nodeB.next) {\n    contact.m_nodeB.next.prev = contact.m_nodeB.prev;\n  }\n\n  if (contact.m_nodeB == bodyB.m_contactList) {\n    bodyB.m_contactList = contact.m_nodeB.next;\n  }\n\n  if (contact.m_manifold.pointCount > 0 && fixtureA.isSensor() == false\n      && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  var destroyFcn = s_registers[typeA][typeB].destroyFcn;\n  if (typeof destroyFcn === 'function') {\n    destroyFcn(contact);\n  }\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Body;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Vec2 = require('./common/Vec2');\nvar Rot = require('./common/Rot');\nvar Math = require('./common/Math');\nvar Sweep = require('./common/Sweep');\nvar Transform = require('./common/Transform');\nvar Velocity = require('./common/Velocity');\nvar Position = require('./common/Position');\n\nvar Fixture = require('./Fixture');\nvar Shape = require('./Shape');\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop angularVelocity\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\nvar BodyDef = {\n  type : staticBody,\n  position : Vec2.zero(),\n  angle : 0.0,\n\n  linearVelocity : Vec2.zero(),\n  angularVelocity : 0.0,\n\n  linearDamping : 0.0,\n  angularDamping : 0.0,\n\n  fixedRotation : false,\n  bullet : false,\n  gravityScale : 1.0,\n\n  allowSleep : true,\n  awake : true,\n  active : true,\n\n  userData : null\n};\n\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {World} world\n * @param {BodyDef} def\n */\nfunction Body(world, def) {\n\n  def = options(def, BodyDef);\n\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n\n  this.m_world = world;\n\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  }\n\n  // Rotational inertia about the center of mass.\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  // the body origin transform\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle);\n\n  // the swept motion for CCD\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf);\n\n  // position and velocity correction\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n\n  this.m_sleepTime = 0.0;\n\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_destroyed = false;\n}\n\nBody.prototype._serialize = function() {\n  var fixtures = [];\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    fixtures.push(f);\n  }\n  return {\n    type: this.m_type,\n    position: this.m_xf.p,\n    angle: this.m_xf.q.getAngle(),\n    linearVelocity: this.m_linearVelocity,\n    angularVelocity: this.m_angularVelocity,\n    fixtures: fixtures,\n  };\n};\n\nBody._deserialize = function(data, world, restore) {\n  var body = new Body(world, data);\n\n  data.fixtures.forEach(function(data) {\n    var fixture = restore(Fixture, data, body);\n    body._addFixture(fixture);\n  });\n\n  return body;\n};\n\nBody.prototype.isWorldLocked = function() {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function() {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function() {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function(data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function() {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function() {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function() {\n  return this.m_jointList;\n};\n\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\nBody.prototype.getContactList = function() {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function() {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function() {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function() {\n  return this.m_type == kinematicBody;\n};\n\n/**\n * This will alter the mass and velocity.\n */\nBody.prototype.setStatic = function() {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function() {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function() {\n  this.setType(kinematicBody);\n  return this;\n};\n\n/**\n * @private\n */\nBody.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * \n * @private\n */\nBody.prototype.setType = function(type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n\n  this.m_force.setZero();\n  this.m_torque = 0.0;\n\n  // Delete the attached contacts.\n  var ce = this.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n  this.m_contactList = null;\n\n  // Touch the proxies so that new contacts will be created (when appropriate)\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function() {\n  return this.m_bulletFlag;\n};\n\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\nBody.prototype.setBullet = function(flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function() {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function(flag) {\n  this.m_autoSleepFlag = !!flag;\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function() {\n  return this.m_awakeFlag;\n};\n\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\nBody.prototype.setAwake = function(flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function() {\n  return this.m_activeFlag;\n};\n\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\nBody.prototype.setActive = function(flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    }\n    // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    }\n\n    // Destroy the attached contacts.\n    var ce = this.m_contactList;\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function() {\n  return this.m_fixedRotationFlag;\n};\n\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\nBody.prototype.setFixedRotation = function(flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n\n  this.m_angularVelocity = 0.0;\n\n  this.resetMassData();\n};\n\n/**\n * Get the world transform for the body's origin.\n */\nBody.prototype.getTransform = function() {\n  return this.m_xf;\n};\n\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\nBody.prototype.setTransform = function(position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function() {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Update fixtures in broad-phase.\n */\nBody.prototype.synchronizeFixtures = function() {\n  var xf = Transform.identity();\n\n  this.m_sweep.getTransform(xf, 0);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n\n/**\n * Used in TOI.\n */\nBody.prototype.advance = function(alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Get the world position for the body's origin.\n */\nBody.prototype.getPosition = function() {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function(p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n\n/**\n * Get the current world rotation angle in radians.\n */\nBody.prototype.getAngle = function() {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function(angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n\n/**\n * Get the world position of the center of mass.\n */\nBody.prototype.getWorldCenter = function() {\n  return this.m_sweep.c;\n};\n\n/**\n * Get the local position of the center of mass.\n */\nBody.prototype.getLocalCenter = function() {\n  return this.m_sweep.localCenter;\n};\n\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\nBody.prototype.getLinearVelocity = function() {\n  return this.m_linearVelocity;\n};\n\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\nBody.prototype.getLinearVelocityFromWorldPoint = function(worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity,\n      localCenter));\n};\n\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\nBody.prototype.getLinearVelocityFromLocalPoint = function(localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\nBody.prototype.setLinearVelocity = function(v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_linearVelocity.set(v);\n};\n\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\nBody.prototype.getAngularVelocity = function() {\n  return this.m_angularVelocity;\n};\n\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\nBody.prototype.setAngularVelocity = function(w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function() {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function(linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function() {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function(angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function() {\n  return this.m_gravityScale;\n};\n\n/**\n * Scale the gravity applied to this body.\n */\nBody.prototype.setGravityScale = function(scale) {\n  this.m_gravityScale = scale;\n};\n\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\nBody.prototype.getMass = function() {\n  return this.m_mass;\n};\n\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\nBody.prototype.getInertia = function() {\n  return this.m_I + this.m_mass\n      * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n};\n\n/**\n * Copy the mass data of the body to data.\n */\nBody.prototype.getMassData = function(data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\nBody.prototype.resetMassData = function() {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero();\n\n  // Static and kinematic bodies have zero mass.\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic());\n\n  // Accumulate mass over all fixtures.\n  var localCenter = Vec2.zero();\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.addMul(massData.mass, massData.center);\n    this.m_I += massData.I;\n  }\n\n  // Compute center of mass.\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\nBody.prototype.setMassData = function(massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  this.m_mass = massData.mass;\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass\n        * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyForce = function(force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping.\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\nBody.prototype.applyForceToCenter = function(force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\nBody.prototype.applyTorque = function(torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyLinearImpulse = function(impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.addMul(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\nBody.prototype.applyAngularImpulse = function(impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\nBody.prototype.shouldCollide = function(that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  }\n  // Does a joint prevent collision?\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nBody.prototype._addFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture;\n\n  // Adjust mass properties if needed.\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  }\n\n  // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n  this.m_world.m_newFixture = true;\n\n  return fixture\n};\n\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\nBody.prototype.createFixture = function(shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n  this._addFixture(fixture);\n  return fixture\n};\n\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\nBody.prototype.destroyFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this);\n\n  // Remove the fixture from this body's singly linked list.\n  var found = false;\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n\n  } else {\n    var node = this.m_fixtureList;\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n      node = node.m_next;\n    }\n  }\n\n  // You tried to remove a shape that is not attached to this body.\n  _ASSERT && common.assert(found);\n\n  // Destroy any contacts associated with the fixture.\n  var edge = this.m_contactList;\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n\n  this.m_world.publish('remove-fixture', fixture);\n\n  // Reset the mass data.\n  this.resetMassData();\n};\n\n/**\n * Get the corresponding world point of a local point.\n */\nBody.prototype.getWorldPoint = function(localPoint) {\n  return Transform.mulVec2(this.m_xf, localPoint);\n};\n\n/**\n * Get the corresponding world vector of a local vector.\n */\nBody.prototype.getWorldVector = function(localVector) {\n  return Rot.mulVec2(this.m_xf.q, localVector);\n};\n\n/**\n * Gets the corresponding local point of a world point.\n */\nBody.prototype.getLocalPoint = function(worldPoint) {\n  return Transform.mulTVec2(this.m_xf, worldPoint);\n};\n\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\nBody.prototype.getLocalVector = function(worldVector) {\n  return Rot.mulTVec2(this.m_xf.q, worldVector);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Math = require('./common/Math');\nvar Rot = require('./common/Rot');\n\nmodule.exports = Manifold;\nmodule.exports.clipSegmentToLine = clipSegmentToLine;\nmodule.exports.clipVertex = ClipVertex;\nmodule.exports.getPointStates = getPointStates;\nmodule.exports.PointState = PointState;\n\n// Manifold Type\nManifold.e_circles = 0;\nManifold.e_faceA = 1;\nManifold.e_faceB = 2;\n\n// ContactFeature Type\nManifold.e_vertex = 0;\nManifold.e_face = 1;\n\n/**\n * A manifold for two touching convex shapes. Manifolds are created in `evaluate`\n * method of Contact subclasses.\n * \n * Supported manifold types are e_faceA or e_faceB for clip point versus plane\n * with radius and e_circles point versus point with radius.\n * \n * We store contacts in this way so that position correction can account for\n * movement, which is critical for continuous physics. All contact scenarios\n * must be expressed in one of these types. This structure is stored across time\n * steps, so we keep it small.\n * \n * @prop type e_circle, e_faceA, e_faceB\n * @prop localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleA <br>\n *       e_faceA: the center of faceA <br>\n *       e_faceB: the center of faceB\n * @prop localNormal Usage depends on manifold type:<br>\n *       e_circles: not used <br>\n *       e_faceA: the normal on polygonA <br>\n *       e_faceB: the normal on polygonB\n * @prop points The points of contact {ManifoldPoint[]}\n * @prop pointCount The number of manifold points\n */\nfunction Manifold() {\n  this.type;\n  this.localNormal = Vec2.zero();\n  this.localPoint = Vec2.zero();\n  this.points = [ new ManifoldPoint(), new ManifoldPoint() ];\n  this.pointCount = 0;\n};\n\n/**\n * A manifold point is a contact point belonging to a contact manifold. It holds\n * details related to the geometry and dynamics of the contact points.\n * \n * This structure is stored across time steps, so we keep it small.\n * \n * Note: impulses are used for internal caching and may not provide reliable\n * contact forces, especially for high speed collisions.\n * \n * @prop {Vec2} localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleB<br>\n *       e_faceA: the local center of cirlceB or the clip point of polygonB<br>\n *       e_faceB: the clip point of polygonA.\n * @prop normalImpulse The non-penetration impulse\n * @prop tangentImpulse The friction impulse\n * @prop {ContactID} id Uniquely identifies a contact point between two shapes\n *       to facilatate warm starting\n */\nfunction ManifoldPoint() {\n  this.localPoint = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.id = new ContactID();\n};\n\n/**\n * Contact ids to facilitate warm starting.\n * \n * @prop {ContactFeature} cf\n * @prop key Used to quickly compare contact ids.\n * \n */\nfunction ContactID() {\n  this.cf = new ContactFeature();\n};\n\nObject.defineProperty(ContactID.prototype, 'key', {\n  get: function() {\n    return this.cf.indexA + this.cf.indexB * 4 + this.cf.typeA * 16 + this.cf.typeB * 64;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nContactID.prototype.set = function(o) {\n  // this.key = o.key;\n  this.cf.set(o.cf);\n};\n\n/**\n * The features that intersect to form the contact point.\n * \n * @prop indexA Feature index on shapeA\n * @prop indexB Feature index on shapeB\n * @prop typeA The feature type on shapeA\n * @prop typeB The feature type on shapeB\n */\nfunction ContactFeature() {\n  this.indexA;\n  this.indexB;\n  this.typeA;\n  this.typeB;\n};\n\nContactFeature.prototype.set = function(o) {\n  this.indexA = o.indexA;\n  this.indexB = o.indexB;\n  this.typeA = o.typeA;\n  this.typeB = o.typeB;\n};\n\n/**\n * This is used to compute the current state of a contact manifold.\n * \n * @prop normal World vector pointing from A to B\n * @prop points World contact point (point of intersection)\n * @prop separations A negative value indicates overlap, in meters\n */\nfunction WorldManifold() {\n  this.normal;\n  this.points = []; // [maxManifoldPoints]\n  this.separations = []; // float[maxManifoldPoints]\n};\n\n/**\n * Evaluate the manifold with supplied transforms. This assumes modest motion\n * from the original state. This does not change the point count, impulses, etc.\n * The radii must come from the shapes that generated the manifold.\n * \n * @param {WorldManifold} [wm]\n */\nManifold.prototype.getWorldManifold = function(wm, xfA, radiusA, xfB, radiusB) {\n  if (this.pointCount == 0) {\n    return;\n  }\n\n  wm = wm || new WorldManifold();\n\n  var normal = wm.normal;\n  var points = wm.points;\n  var separations = wm.separations;\n\n  // TODO: improve\n  switch (this.type) {\n  case Manifold.e_circles:\n    normal = Vec2.neo(1.0, 0.0);\n    var pointA = Transform.mulVec2(xfA, this.localPoint);\n    var pointB = Transform.mulVec2(xfB, this.points[0].localPoint);\n    var dist = Vec2.sub(pointB, pointA);\n    if (Vec2.lengthSquared(dist) > Math.EPSILON * Math.EPSILON) {\n      normal.set(dist);\n      normal.normalize();\n    }\n    var cA = pointA.clone().addMul(radiusA, normal);\n    var cB = pointB.clone().addMul(-radiusB, normal);\n    points[0] = Vec2.mid(cA, cB);\n    separations[0] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    points.length = 1;\n    separations.length = 1;\n    break;\n\n  case Manifold.e_faceA:\n    normal = Rot.mulVec2(xfA.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfA, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfB, this.points[i].localPoint);\n      var cA = Vec2.clone(clipPoint).addMul(radiusA - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cB = Vec2.clone(clipPoint).subMul(radiusB, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    break;\n\n  case Manifold.e_faceB:\n    normal = Rot.mulVec2(xfB.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfB, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfA, this.points[i].localPoint);\n      var cB = Vec2.combine(1, clipPoint, radiusB - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cA = Vec2.combine(1, clipPoint, -radiusA, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cA, cB), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    // Ensure normal points from A to B.\n    normal.mul(-1);\n    break;\n  }\n\n  wm.normal = normal;\n  wm.points = points;\n  wm.separations = separations;\n  return wm;\n}\n\n/**\n * This is used for determining the state of contact points.\n * \n * @prop {0} nullState Point does not exist\n * @prop {1} addState Point was added in the update\n * @prop {2} persistState Point persisted across the update\n * @prop {3} removeState Point was removed in the update\n */\nvar PointState = {\n  // TODO: use constants\n  nullState : 0,\n  addState : 1,\n  persistState : 2,\n  removeState : 3\n};\n\n/**\n * Compute the point states given two manifolds. The states pertain to the\n * transition from manifold1 to manifold2. So state1 is either persist or remove\n * while state2 is either add or persist.\n * \n * @param {PointState[Settings.maxManifoldPoints]} state1\n * @param {PointState[Settings.maxManifoldPoints]} state2\n */\nfunction getPointStates(state1, state2, manifold1, manifold2) {\n  // for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n  // state1[i] = PointState.nullState;\n  // state2[i] = PointState.nullState;\n  // }\n\n  // Detect persists and removes.\n  for (var i = 0; i < manifold1.pointCount; ++i) {\n    var id = manifold1.points[i].id;// ContactID\n\n    state1[i] = PointState.removeState;\n\n    for (var j = 0; j < manifold2.pointCount; ++j) {\n      if (manifold2.points[j].id.key == id.key) {\n        state1[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n\n  // Detect persists and adds.\n  for (var i = 0; i < manifold2.pointCount; ++i) {\n    var id = manifold2.points[i].id;// ContactID\n\n    state2[i] = PointState.addState;\n\n    for (var j = 0; j < manifold1.pointCount; ++j) {\n      if (manifold1.points[j].id.key == id.key) {\n        state2[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Used for computing contact manifolds.\n * \n * @prop {Vec2} v\n * @prop {ContactID} id\n */\nfunction ClipVertex() {\n  this.v = Vec2.zero();\n  this.id = new ContactID();\n};\n\nClipVertex.prototype.set = function(o) {\n  this.v.set(o.v);\n  this.id.set(o.id);\n};\n\n/**\n * Clipping for contact manifolds. Sutherland-Hodgman clipping.\n * \n * @param {ClipVertex[2]} vOut\n * @param {ClipVertex[2]} vIn\n */\nfunction clipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\n  // Start with no output points\n  var numOut = 0;\n\n  // Calculate the distance of end points to the line\n  var distance0 = Vec2.dot(normal, vIn[0].v) - offset;\n  var distance1 = Vec2.dot(normal, vIn[1].v) - offset;\n\n  // If the points are behind the plane\n  if (distance0 <= 0.0)\n    vOut[numOut++].set(vIn[0]);\n  if (distance1 <= 0.0)\n    vOut[numOut++].set(vIn[1]);\n\n  // If the points are on different sides of the plane\n  if (distance0 * distance1 < 0.0) {\n    // Find intersection point of edge and plane\n    var interp = distance0 / (distance0 - distance1);\n    vOut[numOut].v.setCombine(1 - interp, vIn[0].v, interp, vIn[1].v);\n\n    // VertexA is hitting edgeB.\n    vOut[numOut].id.cf.indexA = vertexIndexA;\n    vOut[numOut].id.cf.indexB = vIn[0].id.cf.indexB;\n    vOut[numOut].id.cf.typeA = Manifold.e_vertex;\n    vOut[numOut].id.cf.typeB = Manifold.e_face;\n    ++numOut;\n  }\n\n  return numOut;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PolygonShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = create(PolygonShape._super.prototype);\n\nPolygonShape.TYPE = 'polygon';\nShape.TYPES[PolygonShape.TYPE] = PolygonShape;\n\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n  };\n};\n\nPolygonShape._deserialize = function(data) {\n  var shape = new PolygonShape(data.vertices);\n  return shape;\n};\n\nPolygonShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * @deprecated\n */\nPolygonShape.prototype._clone = function() {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n  return clone;\n}\n\nPolygonShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n\n  var c = Vec2.zero();\n  var area = 0.0;\n\n  // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var pRef = Vec2.zero();\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    c.addMul(triangleArea * inv3, p1);\n    c.addMul(triangleArea * inv3, p2);\n    c.addMul(triangleArea * inv3, p3);\n  }\n\n  // Centroid\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\nPolygonShape.prototype._reset = function() {\n  this._set(this.m_vertices)\n}\n\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n *\n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\nPolygonShape.prototype._set = function(vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices);\n\n  // Perform welding and copy vertices into local buffer.\n  var ps = [];// [Settings.maxPolygonVertices];\n  var tempCount = 0;\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n\n    var unique = true;\n    for (var j = 0; j < tempCount; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps[tempCount++] = v;\n    }\n  }\n\n  n = tempCount;\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n  // Find the right most point on the hull (in case of multiple points bottom most is used)\n  var i0 = 0;\n  var x0 = ps[0].x;\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n    if (x > x0 || (x == x0 && ps[i].y < ps[i0].y)) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = [];// [Settings.maxPolygonVertices];\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n\n    var ie = 0;\n    for (var j = 1; j < n; ++j) {\n      if (ie == ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v);\n      // c < 0 means counter-clockwise wrapping, c > 0 means clockwise wrapping\n      if (c < 0.0) {\n        ie = j;\n      }\n\n      // Collinearity check\n      if (c == 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie == i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  this.m_count = m;\n\n  // Copy vertices.\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  }\n\n  // Compute normals. Ensure the edges have non-zero length.\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  }\n\n  // Compute the polygon centroid.\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n}\n\n/**\n * @private\n */\nPolygonShape.prototype._setAsBox = function(hx, hy, center, angle) {\n  // start with right-bottom, counter-clockwise, as in Gift wrapping algorithm in PolygonShape._set()\n  this.m_vertices[0] = Vec2.neo(hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, hy);\n  this.m_vertices[2] = Vec2.neo(-hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, -hy);\n\n  this.m_normals[0] = Vec2.neo(1.0, 0.0);\n  this.m_normals[1] = Vec2.neo(0.0, 1.0);\n  this.m_normals[2] = Vec2.neo(-1.0, 0.0);\n  this.m_normals[3] = Vec2.neo(0.0, -1.0);\n\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n\n    this.m_centroid.set(center);\n\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle);\n\n    // Transform vertices and normals.\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mulVec2(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mulVec2(xf.q, this.m_normals[i]);\n    }\n  }\n}\n\nPolygonShape.prototype.testPoint = function(xf, p) {\n  var pLocal = Rot.mulTVec2(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var lower = 0.0;\n  var upper = input.maxFraction;\n\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    }\n\n    // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mulVec2(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mulVec2(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n}\n\nPolygonShape.prototype.computeMass = function(massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n\n  _ASSERT && common.assert(this.m_count >= 3);\n\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0;\n\n  // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var s = Vec2.zero();\n\n  // This code would put the reference point inside the polygon.\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n  s.mul(1.0 / this.m_count);\n\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2\n        .sub(this.m_vertices[0], s);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    center.addCombine(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n    I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n  }\n\n  // Total mass\n  massData.mass = density * area;\n\n  // Center of mass\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.setCombine(1, center, 1, s);\n\n  // Inertia tensor relative to the local origin (point s).\n  massData.I = density * I;\n\n  // Shift to center of mass then to original body origin.\n  massData.I += massData.mass\n      * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}\n\n// Validate convexity. This is a very time consuming operation.\n// @returns true if valid\nPolygonShape.prototype.validate = function() {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Distance;\n\nmodule.exports.Input = DistanceInput;\nmodule.exports.Output = DistanceOutput;\nmodule.exports.Proxy = DistanceProxy;\nmodule.exports.Cache = SimplexCache;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\n/**\n * GJK using Voronoi regions (Christer Ericson) and Barycentric coordinates.\n */\n\nstats.gjkCalls = 0;\nstats.gjkIters = 0;\nstats.gjkMaxIters = 0;\n\n/**\n * Input for Distance. You have to option to use the shape radii in the\n * computation. Even\n */\nfunction DistanceInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.transformA = null;\n  this.transformB = null;\n  this.useRadii = false;\n};\n\n/**\n * Output for Distance.\n *\n * @prop {Vec2} pointA closest point on shapeA\n * @prop {Vec2} pointB closest point on shapeB\n * @prop distance\n * @prop iterations number of GJK iterations used\n */\nfunction DistanceOutput() {\n  this.pointA = Vec2.zero();\n  this.pointB = Vec2.zero();\n  this.distance;\n  this.iterations;\n}\n\n/**\n * Used to warm start Distance. Set count to zero on first call.\n *\n * @prop {number} metric length or area\n * @prop {array} indexA vertices on shape A\n * @prop {array} indexB vertices on shape B\n * @prop {number} count\n */\nfunction SimplexCache() {\n  this.metric = 0;\n  this.indexA = [];\n  this.indexB = [];\n  this.count = 0;\n};\n\n/**\n * Compute the closest points between two shapes. Supports any combination of:\n * CircleShape, PolygonShape, EdgeShape. The simplex cache is input/output. On\n * the first call set SimplexCache.count to zero.\n *\n * @param {DistanceOutput} output\n * @param {SimplexCache} cache\n * @param {DistanceInput} input\n */\nfunction Distance(output, cache, input) {\n  ++stats.gjkCalls;\n\n  var proxyA = input.proxyA;\n  var proxyB = input.proxyB;\n  var xfA = input.transformA;\n  var xfB = input.transformB;\n\n  // Initialize the simplex.\n  var simplex = new Simplex();\n  simplex.readCache(cache, proxyA, xfA, proxyB, xfB);\n\n  // Get simplex vertices as an array.\n  var vertices = simplex.m_v;// SimplexVertex\n  var k_maxIters = Settings.maxDistnceIterations;\n\n  // These store the vertices of the last simplex so that we\n  // can check for duplicates and prevent cycling.\n  var saveA = [];\n  var saveB = []; // int[3]\n  var saveCount = 0;\n\n  var distanceSqr1 = Infinity;\n  var distanceSqr2 = Infinity;\n\n  // Main iteration loop.\n  var iter = 0;\n  while (iter < k_maxIters) {\n    // Copy simplex so we can identify duplicates.\n    saveCount = simplex.m_count;\n    for (var i = 0; i < saveCount; ++i) {\n      saveA[i] = vertices[i].indexA;\n      saveB[i] = vertices[i].indexB;\n    }\n\n    simplex.solve();\n\n    // If we have 3 points, then the origin is in the corresponding triangle.\n    if (simplex.m_count == 3) {\n      break;\n    }\n\n    // Compute closest point.\n    var p = simplex.getClosestPoint();\n    distanceSqr2 = p.lengthSquared();\n\n    // Ensure progress\n    if (distanceSqr2 >= distanceSqr1) {\n      // break;\n    }\n    distanceSqr1 = distanceSqr2;\n\n    // Get search direction.\n    var d = simplex.getSearchDirection();\n\n    // Ensure the search direction is numerically fit.\n    if (d.lengthSquared() < Math.EPSILON * Math.EPSILON) {\n      // The origin is probably contained by a line segment\n      // or triangle. Thus the shapes are overlapped.\n\n      // We can't return zero here even though there may be overlap.\n      // In case the simplex is a point, segment, or triangle it is difficult\n      // to determine if the origin is contained in the CSO or very close to it.\n      break;\n    }\n\n    // Compute a tentative new simplex vertex using support points.\n    var vertex = vertices[simplex.m_count]; // SimplexVertex\n\n    vertex.indexA = proxyA.getSupport(Rot.mulTVec2(xfA.q, Vec2.neg(d)));\n    vertex.wA = Transform.mulVec2(xfA, proxyA.getVertex(vertex.indexA));\n\n    vertex.indexB = proxyB.getSupport(Rot.mulTVec2(xfB.q, d));\n    vertex.wB = Transform.mulVec2(xfB, proxyB.getVertex(vertex.indexB));\n\n    vertex.w = Vec2.sub(vertex.wB, vertex.wA);\n\n    // Iteration count is equated to the number of support point calls.\n    ++iter;\n    ++stats.gjkIters;\n\n    // Check for duplicate support points. This is the main termination\n    // criteria.\n    var duplicate = false;\n    for (var i = 0; i < saveCount; ++i) {\n      if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\n        duplicate = true;\n        break;\n      }\n    }\n\n    // If we found a duplicate support point we must exit to avoid cycling.\n    if (duplicate) {\n      break;\n    }\n\n    // New vertex is ok and needed.\n    ++simplex.m_count;\n  }\n\n  stats.gjkMaxIters = Math.max(stats.gjkMaxIters, iter);\n\n  // Prepare output.\n  simplex.getWitnessPoints(output.pointA, output.pointB);\n  output.distance = Vec2.distance(output.pointA, output.pointB);\n  output.iterations = iter;\n\n  // Cache the simplex.\n  simplex.writeCache(cache);\n\n  // Apply radii if requested.\n  if (input.useRadii) {\n    var rA = proxyA.m_radius;\n    var rB = proxyB.m_radius;\n\n    if (output.distance > rA + rB && output.distance > Math.EPSILON) {\n      // Shapes are still no overlapped.\n      // Move the witness points to the outer surface.\n      output.distance -= rA + rB;\n      var normal = Vec2.sub(output.pointB, output.pointA);\n      normal.normalize();\n      output.pointA.addMul(rA, normal);\n      output.pointB.subMul(rB, normal);\n    } else {\n      // Shapes are overlapped when radii are considered.\n      // Move the witness points to the middle.\n      var p = Vec2.mid(output.pointA, output.pointB);\n      output.pointA.set(p);\n      output.pointB.set(p);\n      output.distance = 0.0;\n    }\n  }\n}\n\n/**\n * A distance proxy is used by the GJK algorithm. It encapsulates any shape.\n */\nfunction DistanceProxy() {\n  this.m_buffer = []; // Vec2[2]\n  this.m_vertices = []; // Vec2[]\n  this.m_count = 0;\n  this.m_radius = 0;\n};\n\n/**\n * Get the vertex count.\n */\nDistanceProxy.prototype.getVertexCount = function() {\n  return this.m_count;\n}\n\n/**\n * Get a vertex by index. Used by Distance.\n */\nDistanceProxy.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * Get the supporting vertex index in the given direction.\n */\nDistanceProxy.prototype.getSupport = function(d) {\n  var bestIndex = 0;\n  var bestValue = Vec2.dot(this.m_vertices[0], d);\n  for (var i = 0; i < this.m_count; ++i) {\n    var value = Vec2.dot(this.m_vertices[i], d);\n    if (value > bestValue) {\n      bestIndex = i;\n      bestValue = value;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Get the supporting vertex in the given direction.\n */\nDistanceProxy.prototype.getSupportVertex = function(d) {\n  return this.m_vertices[this.getSupport(d)];\n}\n\n/**\n * Initialize the proxy using the given shape. The shape must remain in scope\n * while the proxy is in use.\n */\nDistanceProxy.prototype.set = function(shape, index) {\n  // TODO remove, use shape instead\n  _ASSERT && common.assert(typeof shape.computeDistanceProxy === 'function');\n  shape.computeDistanceProxy(this, index);\n}\n\nfunction SimplexVertex() {\n  this.indexA; // wA index\n  this.indexB; // wB index\n  this.wA = Vec2.zero(); // support point in proxyA\n  this.wB = Vec2.zero(); // support point in proxyB\n  this.w = Vec2.zero(); // wB - wA\n  this.a; // barycentric coordinate for closest point\n};\n\nSimplexVertex.prototype.set = function(v) {\n  this.indexA = v.indexA;\n  this.indexB = v.indexB;\n  this.wA = Vec2.clone(v.wA);\n  this.wB = Vec2.clone(v.wB);\n  this.w = Vec2.clone(v.w);\n  this.a = v.a;\n};\n\nfunction Simplex() {\n  this.m_v1 = new SimplexVertex();\n  this.m_v2 = new SimplexVertex();\n  this.m_v3 = new SimplexVertex();\n  this.m_v = [ this.m_v1, this.m_v2, this.m_v3 ];\n  this.m_count;\n};\n\nSimplex.prototype.print = function() {\n  if (this.m_count == 3) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y,\n      this.m_v3.a, this.m_v3.wA.x, this.m_v3.wA.y, this.m_v3.wB.x, this.m_v3.wB.y\n    ].toString();\n\n  } else if (this.m_count == 2) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y\n    ].toString();\n\n  } else if (this.m_count == 1) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y\n    ].toString();\n\n  } else {\n    return \"+\" + this.m_count;\n  }\n};\n\n// (SimplexCache, DistanceProxy, ...)\nSimplex.prototype.readCache = function(cache, proxyA, transformA, proxyB, transformB) {\n  _ASSERT && common.assert(cache.count <= 3);\n\n  // Copy data from cache.\n  this.m_count = cache.count;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = this.m_v[i];\n    v.indexA = cache.indexA[i];\n    v.indexB = cache.indexB[i];\n    var wALocal = proxyA.getVertex(v.indexA);\n    var wBLocal = proxyB.getVertex(v.indexB);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 0.0;\n  }\n\n  // Compute the new simplex metric, if it is substantially different than\n  // old metric then flush the simplex.\n  if (this.m_count > 1) {\n    var metric1 = cache.metric;\n    var metric2 = this.getMetric();\n    if (metric2 < 0.5 * metric1 || 2.0 * metric1 < metric2\n        || metric2 < Math.EPSILON) {\n      // Reset the simplex.\n      this.m_count = 0;\n    }\n  }\n\n  // If the cache is empty or invalid...\n  if (this.m_count == 0) {\n    var v = this.m_v[0];// SimplexVertex\n    v.indexA = 0;\n    v.indexB = 0;\n    var wALocal = proxyA.getVertex(0);\n    var wBLocal = proxyB.getVertex(0);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 1.0;\n    this.m_count = 1;\n  }\n}\n\n// (SimplexCache)\nSimplex.prototype.writeCache = function(cache) {\n  cache.metric = this.getMetric();\n  cache.count = this.m_count;\n  for (var i = 0; i < this.m_count; ++i) {\n    cache.indexA[i] = this.m_v[i].indexA;\n    cache.indexB[i] = this.m_v[i].indexB;\n  }\n}\n\nSimplex.prototype.getSearchDirection = function() {\n  switch (this.m_count) {\n  case 1:\n    return Vec2.neg(this.m_v1.w);\n\n  case 2: {\n    var e12 = Vec2.sub(this.m_v2.w, this.m_v1.w);\n    var sgn = Vec2.cross(e12, Vec2.neg(this.m_v1.w));\n    if (sgn > 0.0) {\n      // Origin is left of e12.\n      return Vec2.cross(1.0, e12);\n    } else {\n      // Origin is right of e12.\n      return Vec2.cross(e12, 1.0);\n    }\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getClosestPoint = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n\n  case 1:\n    return Vec2.clone(this.m_v1.w);\n\n  case 2:\n    return Vec2.combine(this.m_v1.a, this.m_v1.w, this.m_v2.a, this.m_v2.w);\n\n  case 3:\n    return Vec2.zero();\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getWitnessPoints = function(pA, pB) {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    break;\n\n  case 1:\n    pA.set(this.m_v1.wA);\n    pB.set(this.m_v1.wB);\n    break;\n\n  case 2:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pB.setCombine(this.m_v1.a, this.m_v1.wB, this.m_v2.a, this.m_v2.wB);\n    break;\n\n  case 3:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pA.addMul(this.m_v3.a, this.m_v3.wA);\n    pB.set(pA);\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n    break;\n  }\n}\n\nSimplex.prototype.getMetric = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return 0.0;\n\n  case 1:\n    return 0.0;\n\n  case 2:\n    return Vec2.distance(this.m_v1.w, this.m_v2.w);\n\n  case 3:\n    return Vec2.cross(Vec2.sub(this.m_v2.w, this.m_v1.w), Vec2.sub(this.m_v3.w,\n        this.m_v1.w));\n\n  default:\n    _ASSERT && common.assert(false);\n    return 0.0;\n  }\n}\n\nSimplex.prototype.solve = function() {\n  switch (this.m_count) {\n  case 1:\n    break;\n\n  case 2:\n    this.solve2();\n    break;\n\n  case 3:\n    this.solve3();\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n  }\n}\n\n// Solve a line segment using barycentric coordinates.\n//\n// p = a1 * w1 + a2 * w2\n// a1 + a2 = 1\n//\n// The vector from the origin to the closest point on the line is\n// perpendicular to the line.\n// e12 = w2 - w1\n// dot(p, e) = 0\n// a1 * dot(w1, e) + a2 * dot(w2, e) = 0\n//\n// 2-by-2 linear system\n// [1 1 ][a1] = [1]\n// [w1.e12 w2.e12][a2] = [0]\n//\n// Define\n// d12_1 = dot(w2, e12)\n// d12_2 = -dot(w1, e12)\n// d12 = d12_1 + d12_2\n//\n// Solution\n// a1 = d12_1 / d12\n// a2 = d12_2 / d12\nSimplex.prototype.solve2 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var e12 = Vec2.sub(w2, w1);\n\n  // w1 region\n  var d12_2 = -Vec2.dot(w1, e12);\n  if (d12_2 <= 0.0) {\n    // a2 <= 0, so we clamp it to 0\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // w2 region\n  var d12_1 = Vec2.dot(w2, e12);\n  if (d12_1 <= 0.0) {\n    // a1 <= 0, so we clamp it to 0\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // Must be in e12 region.\n  var inv_d12 = 1.0 / (d12_1 + d12_2);\n  this.m_v1.a = d12_1 * inv_d12;\n  this.m_v2.a = d12_2 * inv_d12;\n  this.m_count = 2;\n}\n\n// Possible regions:\n// - points[2]\n// - edge points[0]-points[2]\n// - edge points[1]-points[2]\n// - inside the triangle\nSimplex.prototype.solve3 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var w3 = this.m_v3.w;\n\n  // Edge12\n  // [1 1 ][a1] = [1]\n  // [w1.e12 w2.e12][a2] = [0]\n  // a3 = 0\n  var e12 = Vec2.sub(w2, w1);\n  var w1e12 = Vec2.dot(w1, e12);\n  var w2e12 = Vec2.dot(w2, e12);\n  var d12_1 = w2e12;\n  var d12_2 = -w1e12;\n\n  // Edge13\n  // [1 1 ][a1] = [1]\n  // [w1.e13 w3.e13][a3] = [0]\n  // a2 = 0\n  var e13 = Vec2.sub(w3, w1);\n  var w1e13 = Vec2.dot(w1, e13);\n  var w3e13 = Vec2.dot(w3, e13);\n  var d13_1 = w3e13;\n  var d13_2 = -w1e13;\n\n  // Edge23\n  // [1 1 ][a2] = [1]\n  // [w2.e23 w3.e23][a3] = [0]\n  // a1 = 0\n  var e23 = Vec2.sub(w3, w2);// Vec2\n  var w2e23 = Vec2.dot(w2, e23);\n  var w3e23 = Vec2.dot(w3, e23);\n  var d23_1 = w3e23;\n  var d23_2 = -w2e23;\n\n  // Triangle123\n  var n123 = Vec2.cross(e12, e13);\n\n  var d123_1 = n123 * Vec2.cross(w2, w3);\n  var d123_2 = n123 * Vec2.cross(w3, w1);\n  var d123_3 = n123 * Vec2.cross(w1, w2);\n\n  // w1 region\n  if (d12_2 <= 0.0 && d13_2 <= 0.0) {\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // e12\n  if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\n    var inv_d12 = 1.0 / (d12_1 + d12_2);\n    this.m_v1.a = d12_1 * inv_d12;\n    this.m_v2.a = d12_2 * inv_d12;\n    this.m_count = 2;\n    return;\n  }\n\n  // e13\n  if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\n    var inv_d13 = 1.0 / (d13_1 + d13_2);\n    this.m_v1.a = d13_1 * inv_d13;\n    this.m_v3.a = d13_2 * inv_d13;\n    this.m_count = 2;\n    this.m_v2.set(this.m_v3);\n    return;\n  }\n\n  // w2 region\n  if (d12_1 <= 0.0 && d23_2 <= 0.0) {\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // w3 region\n  if (d13_1 <= 0.0 && d23_1 <= 0.0) {\n    this.m_v3.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // e23\n  if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\n    var inv_d23 = 1.0 / (d23_1 + d23_2);\n    this.m_v2.a = d23_1 * inv_d23;\n    this.m_v3.a = d23_2 * inv_d23;\n    this.m_count = 2;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // Must be in triangle123\n  var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\n  this.m_v1.a = d123_1 * inv_d123;\n  this.m_v2.a = d123_2 * inv_d123;\n  this.m_v3.a = d123_3 * inv_d123;\n  this.m_count = 3;\n}\n\n/**\n * Determine if two generic shapes overlap.\n */\nDistance.testOverlap = function(shapeA, indexA, shapeB, indexB, xfA, xfB) {\n  var input = new DistanceInput();\n  input.proxyA.set(shapeA, indexA);\n  input.proxyB.set(shapeB, indexB);\n  input.transformA = xfA;\n  input.transformB = xfB;\n  input.useRadii = true;\n\n  var cache = new SimplexCache();\n\n  var output = new DistanceOutput();\n  Distance(output, cache, input);\n\n  return output.distance < 10.0 * Math.EPSILON;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = CircleShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nCircleShape._super = Shape;\nCircleShape.prototype = create(CircleShape._super.prototype);\n\nCircleShape.TYPE = 'circle';\nShape.TYPES[CircleShape.TYPE] = CircleShape;\n\nfunction CircleShape(a, b) {\n  if (!(this instanceof CircleShape)) {\n    return new CircleShape(a, b);\n  }\n\n  CircleShape._super.call(this);\n\n  this.m_type = CircleShape.TYPE;\n  this.m_p = Vec2.zero();\n  this.m_radius = 1;\n\n  if (typeof a === 'object' && Vec2.isValid(a)) {\n    this.m_p.set(a);\n\n    if (typeof b === 'number') {\n      this.m_radius = b;\n    }\n\n  } else if (typeof a === 'number') {\n    this.m_radius = a;\n  }\n}\n\nCircleShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    p: this.m_p,\n    radius: this.m_radius,\n  };\n};\n\nCircleShape._deserialize = function(data) {\n  return new CircleShape(data.p, data.radius);\n};\n\nCircleShape.prototype.getRadius = function() {\n  return this.m_radius;\n}\n\nCircleShape.prototype.getCenter = function() {\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(index == 0);\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertexCount = function(index) {\n  return 1;\n}\n\n/**\n * @deprecated\n */\nCircleShape.prototype._clone = function() {\n  var clone = new CircleShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_p = this.m_p.clone();\n  return clone;\n}\n\nCircleShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nCircleShape.prototype.testPoint = function(xf, p) {\n  var center = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var d = Vec2.sub(p, center);\n  return Vec2.dot(d, d) <= this.m_radius * this.m_radius;\n}\n\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\n// From Section 3.1.2\n// x = s + a * r\n// norm(x) = radius\nCircleShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  var position = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var s = Vec2.sub(input.p1, position);\n  var b = Vec2.dot(s, s) - this.m_radius * this.m_radius;\n\n  // Solve quadratic equation.\n  var r = Vec2.sub(input.p2, input.p1);\n  var c = Vec2.dot(s, r);\n  var rr = Vec2.dot(r, r);\n  var sigma = c * c - rr * b;\n\n  // Check for negative discriminant and short segment.\n  if (sigma < 0.0 || rr < Math.EPSILON) {\n    return false;\n  }\n\n  // Find the point of intersection of the line with the circle.\n  var a = -(c + Math.sqrt(sigma));\n\n  // Is the intersection point on the segment?\n  if (0.0 <= a && a <= input.maxFraction * rr) {\n    a /= rr;\n    output.fraction = a;\n    output.normal = Vec2.add(s, Vec2.mul(a, r));\n    output.normal.normalize();\n    return true;\n  }\n\n  return false;\n}\n\nCircleShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var p = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  aabb.lowerBound.set(p.x - this.m_radius, p.y - this.m_radius);\n  aabb.upperBound.set(p.x + this.m_radius, p.y + this.m_radius);\n}\n\nCircleShape.prototype.computeMass = function(massData, density) {\n  massData.mass = density * Math.PI * this.m_radius * this.m_radius;\n  massData.center = this.m_p;\n  // inertia about the local origin\n  massData.I = massData.mass\n      * (0.5 * this.m_radius * this.m_radius + Vec2.dot(this.m_p, this.m_p));\n}\n\nCircleShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_p);\n  proxy.m_count = 1;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = EdgeShape;\n\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\n\nEdgeShape._super = Shape;\nEdgeShape.prototype = create(EdgeShape._super.prototype);\n\nEdgeShape.TYPE = 'edge';\nShape.TYPES[EdgeShape.TYPE] = EdgeShape;\n\n/**\n * A line segment (edge) shape. These can be connected in chains or loops to\n * other edge shapes. The connectivity information is used to ensure correct\n * contact normals.\n */\nfunction EdgeShape(v1, v2) {\n  if (!(this instanceof EdgeShape)) {\n    return new EdgeShape(v1, v2);\n  }\n\n  EdgeShape._super.call(this);\n\n  this.m_type = EdgeShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n\n  // These are the edge vertices\n  this.m_vertex1 = v1 ? Vec2.clone(v1) : Vec2.zero();\n  this.m_vertex2 = v2 ? Vec2.clone(v2) : Vec2.zero();\n\n  // Optional adjacent vertices. These are used for smooth collision.\n  // Used by chain shape.\n  this.m_vertex0 = Vec2.zero();\n  this.m_vertex3 = Vec2.zero();\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n}\n\nEdgeShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertex1: this.m_vertex1,\n    vertex2: this.m_vertex2,\n\n    vertex0: this.m_vertex0,\n    vertex3: this.m_vertex3,\n    hasVertex0: this.m_hasVertex0,\n    hasVertex3: this.m_hasVertex3,\n  };\n};\n\nEdgeShape._deserialize = function(data) {\n  var shape = new EdgeShape(data.vertex1, data.vertex2);\n  if (shape.hasVertex0) {\n    shape.setPrev(data.vertex0);\n  }\n  if (shape.hasVertex3) {\n    shape.setNext(data.vertex3);\n  }\n  return shape;\n};\n\nEdgeShape.prototype.setNext = function(v3) {\n  if (v3) {\n    this.m_vertex3.set(v3);\n    this.m_hasVertex3 = true;\n  } else {\n    this.m_vertex3.setZero();\n    this.m_hasVertex3 = false;\n  }\n  return this;\n};\n\nEdgeShape.prototype.setPrev = function(v0) {\n  if (v0) {\n    this.m_vertex0.set(v0);\n    this.m_hasVertex0 = true;\n  } else {\n    this.m_vertex0.setZero();\n    this.m_hasVertex0 = false;\n  }\n  return this;\n};\n\n/**\n * Set this as an isolated edge.\n */\nEdgeShape.prototype._set = function(v1, v2) {\n  this.m_vertex1.set(v1);\n  this.m_vertex2.set(v2);\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n  return this;\n}\n\n/**\n * @deprecated\n */\nEdgeShape.prototype._clone = function() {\n  var clone = new EdgeShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_vertex1.set(this.m_vertex1);\n  clone.m_vertex2.set(this.m_vertex2);\n  clone.m_vertex0.set(this.m_vertex0);\n  clone.m_vertex3.set(this.m_vertex3);\n  clone.m_hasVertex0 = this.m_hasVertex0;\n  clone.m_hasVertex3 = this.m_hasVertex3;\n  return clone;\n}\n\nEdgeShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nEdgeShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\n// p = p1 + t * d\n// v = v1 + s * e\n// p1 + t * d = v1 + s * e\n// s * e - t * d = p1 - v1\nEdgeShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  // NOT_USED(childIndex);\n\n  // Put the ray into the edge's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var v1 = this.m_vertex1;\n  var v2 = this.m_vertex2;\n  var e = Vec2.sub(v2, v1);\n  var normal = Vec2.neo(e.y, -e.x);\n  normal.normalize();\n\n  // q = p1 + t * d\n  // dot(normal, q - v1) = 0\n  // dot(normal, p1 - v1) + t * dot(normal, d) = 0\n  var numerator = Vec2.dot(normal, Vec2.sub(v1, p1));\n  var denominator = Vec2.dot(normal, d);\n\n  if (denominator == 0.0) {\n    return false;\n  }\n\n  var t = numerator / denominator;\n  if (t < 0.0 || input.maxFraction < t) {\n    return false;\n  }\n\n  var q = Vec2.add(p1, Vec2.mul(t, d));\n\n  // q = v1 + s * r\n  // s = dot(q - v1, r) / dot(r, r)\n  var r = Vec2.sub(v2, v1);\n  var rr = Vec2.dot(r, r);\n  if (rr == 0.0) {\n    return false;\n  }\n\n  var s = Vec2.dot(Vec2.sub(q, v1), r) / rr;\n  if (s < 0.0 || 1.0 < s) {\n    return false;\n  }\n\n  output.fraction = t;\n  if (numerator > 0.0) {\n    output.normal = Rot.mulVec2(xf.q, normal).neg();\n  } else {\n    output.normal = Rot.mulVec2(xf.q, normal);\n  }\n  return true;\n}\n\nEdgeShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var v1 = Transform.mulVec2(xf, this.m_vertex1);\n  var v2 = Transform.mulVec2(xf, this.m_vertex2);\n\n  aabb.combinePoints(v1, v2);\n  aabb.extend(this.m_radius)\n}\n\nEdgeShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center.setCombine(0.5, this.m_vertex1, 0.5, this.m_vertex2);\n  massData.I = 0.0;\n}\n\nEdgeShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_vertex1);\n  proxy.m_vertices.push(this.m_vertex2);\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.toString = function(newline) {\n  newline = typeof newline === 'string' ? newline : '\\n';\n  var string = \"\";\n  for (var name in this) {\n    if (typeof this[name] !== 'function' && typeof this[name] !== 'object') {\n      string += name + ': ' + this[name] + newline;\n    }\n  }\n  return string;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = ChainShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar EdgeShape = require('./EdgeShape');\n\nChainShape._super = Shape;\nChainShape.prototype = create(ChainShape._super.prototype);\n\nChainShape.TYPE = 'chain';\nShape.TYPES[ChainShape.TYPE] = ChainShape;\n\n/**\n * A chain shape is a free form sequence of line segments. The chain has\n * two-sided collision, so you can use inside and outside collision. Therefore,\n * you may use any winding order. Connectivity information is used to create\n * smooth collisions.\n *\n * WARNING: The chain will not collide properly if there are self-intersections.\n */\nfunction ChainShape(vertices, loop) {\n  if (!(this instanceof ChainShape)) {\n    return new ChainShape(vertices, loop);\n  }\n\n  ChainShape._super.call(this);\n\n  this.m_type = ChainShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_vertices = [];\n  this.m_count = 0;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n\n  this.m_isLoop = loop;\n\n  if (vertices && vertices.length) {\n    if (loop) {\n      this._createLoop(vertices);\n    } else {\n      this._createChain(vertices);\n    }\n  }\n}\n\nChainShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n    isLoop: this.m_isLoop,\n    ...(this.m_prevVertex ? {prevVertex: this.m_prevVertex} : undefined),\n    ...(this.m_nextVertex ? {nextVertex: this.m_nextVertex} : undefined),\n    hasPrevVertex: this.m_hasPrevVertex,\n    hasNextVertex: this.m_hasNextVertex,\n  };\n};\n\nChainShape._deserialize = function(data) {\n  var shape = new ChainShape(data.vertices.map(Vec2._deserialize), data.isLoop);\n  if (data.prevVertex) {\n    shape._setPrevVertex(data.prevVertex);\n  }\n  if (data.nextVertex) {\n    shape._setNextVertex(data.nextVertex);\n  }\n  return shape;\n};\n\n// ChainShape.clear = function() {\n// this.m_vertices.length = 0;\n// this.m_count = 0;\n// }\n\n/**\n * Create a loop. This automatically adjusts connectivity.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createLoop = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 3);\n  for (var i = 1; i < vertices.length; ++i) {\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    // If the code crashes here, it means your vertices are too close together.\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_vertices.length = 0;\n  this.m_count = vertices.length + 1;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = vertices[i].clone();\n  }\n  this.m_vertices[vertices.length] = vertices[0].clone();\n\n  this.m_prevVertex = this.m_vertices[this.m_count - 2];\n  this.m_nextVertex = this.m_vertices[1];\n  this.m_hasPrevVertex = true;\n  this.m_hasNextVertex = true;\n  return this;\n}\n\n/**\n * Create a chain with isolated end vertices.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createChain = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 2);\n  for (var i = 1; i < vertices.length; ++i) {\n    // If the code crashes here, it means your vertices are too close together.\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_count = vertices.length;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = vertices[i].clone();\n  }\n\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  return this;\n}\n\n/**\n * Establish connectivity to a vertex that precedes the first vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setPrevVertex = function(prevVertex) {\n  this.m_prevVertex = prevVertex;\n  this.m_hasPrevVertex = true;\n}\n\n/**\n * Establish connectivity to a vertex that follows the last vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setNextVertex = function(nextVertex) {\n  this.m_nextVertex = nextVertex;\n  this.m_hasNextVertex = true;\n}\n\n/**\n * @deprecated\n */\nChainShape.prototype._clone = function() {\n  var clone = new ChainShape();\n  clone.createChain(this.m_vertices);\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_prevVertex = this.m_prevVertex;\n  clone.m_nextVertex = this.m_nextVertex;\n  clone.m_hasPrevVertex = this.m_hasPrevVertex;\n  clone.m_hasNextVertex = this.m_hasNextVertex;\n  return clone;\n}\n\nChainShape.prototype.getChildCount = function() {\n  // edge count = vertex count - 1\n  return this.m_count - 1;\n}\n\n// Get a child edge.\nChainShape.prototype.getChildEdge = function(edge, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count - 1);\n  edge.m_type = EdgeShape.TYPE;\n  edge.m_radius = this.m_radius;\n\n  edge.m_vertex1 = this.m_vertices[childIndex];\n  edge.m_vertex2 = this.m_vertices[childIndex + 1];\n\n  if (childIndex > 0) {\n    edge.m_vertex0 = this.m_vertices[childIndex - 1];\n    edge.m_hasVertex0 = true;\n  } else {\n    edge.m_vertex0 = this.m_prevVertex;\n    edge.m_hasVertex0 = this.m_hasPrevVertex;\n  }\n\n  if (childIndex < this.m_count - 2) {\n    edge.m_vertex3 = this.m_vertices[childIndex + 2];\n    edge.m_hasVertex3 = true;\n  } else {\n    edge.m_vertex3 = this.m_nextVertex;\n    edge.m_hasVertex3 = this.m_hasNextVertex;\n  }\n}\n\nChainShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index <= this.m_count);\n  if (index < this.m_count) {\n    return this.m_vertices[index];\n  } else {\n    return this.m_vertices[0];\n  }\n}\n\n/**\n * This always return false.\n */\nChainShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\nChainShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var edgeShape = new EdgeShape(this.getVertex(childIndex), this.getVertex(childIndex + 1));\n  return edgeShape.rayCast(output, input, xf, 0);\n}\n\nChainShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var v1 = Transform.mulVec2(xf, this.getVertex(childIndex));\n  var v2 = Transform.mulVec2(xf, this.getVertex(childIndex + 1));\n\n  aabb.combinePoints(v1, v2);\n}\n\n/**\n * Chains have zero mass.\n */\nChainShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center = Vec2.neo();\n  massData.I = 0.0;\n}\n\nChainShape.prototype.computeDistanceProxy = function(proxy, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  proxy.m_buffer[0] = this.getVertex(childIndex);\n  proxy.m_buffer[1] = this.getVertex(childIndex + 1);\n  proxy.m_vertices = proxy.m_buffer;\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = World;\n\nvar options = require('./util/options');\nvar common = require('./util/common');\nvar Vec2 = require('./common/Vec2');\nvar BroadPhase = require('./collision/BroadPhase');\nvar Solver = require('./Solver');\nvar Body = require('./Body');\nvar Joint = require('./Joint');\nvar Contact = require('./Contact');\n\n/**\n * @typedef {Object} WorldDef\n *\n * @prop {Vec2} [gravity = { x : 0, y : 0}]\n * @prop {boolean} [allowSleep = true]\n * @prop {boolean} [warmStarting = false]\n * @prop {boolean} [continuousPhysics = false]\n * @prop {boolean} [subStepping = false]\n * @prop {boolean} [blockSolve = true]\n * @prop {int} [velocityIterations = 8] For the velocity constraint solver.\n * @prop {int} [positionIterations = 3] For the position constraint solver.\n */\nvar WorldDef = {\n  gravity : Vec2.zero(),\n  allowSleep : true,\n  warmStarting : true,\n  continuousPhysics : true,\n  subStepping : false,\n  blockSolve : true,\n  velocityIterations : 8,\n  positionIterations : 3\n};\n\n/**\n * @param {WordDef|Vec2} def World definition or gravity vector.\n */\nfunction World(def) {\n  if (!(this instanceof World)) {\n    return new World(def);\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {gravity : def};\n  }\n\n  def = options(def, WorldDef);\n\n  this.m_solver = new Solver(this);\n\n  this.m_broadPhase = new BroadPhase();\n\n  this.m_contactList = null;\n  this.m_contactCount = 0;\n\n  this.m_bodyList = null;\n  this.m_bodyCount = 0;\n\n  this.m_jointList = null;\n  this.m_jointCount = 0;\n\n  this.m_stepComplete = true;\n\n  this.m_allowSleep = def.allowSleep;\n  this.m_gravity = Vec2.clone(def.gravity);\n\n  this.m_clearForces = true;\n  this.m_newFixture = false;\n  this.m_locked = false;\n\n  // These are for debugging the solver.\n  this.m_warmStarting = def.warmStarting;\n  this.m_continuousPhysics = def.continuousPhysics;\n  this.m_subStepping = def.subStepping;\n\n  this.m_blockSolve = def.blockSolve;\n  this.m_velocityIterations = def.velocityIterations;\n  this.m_positionIterations = def.positionIterations;\n\n  this.m_t = 0;\n\n  this.m_stepCount = 0;\n\n  // Broad-phase callback.\n  this.addPair = this.createContact.bind(this);\n}\n\nWorld.prototype._serialize = function() {\n  var bodies = [];\n  var joints = [];\n\n  for (var b = this.getBodyList(); b; b = b.getNext()) {\n    bodies.push(b);\n  }\n\n  for (var j = this.getJointList(); j; j = j.getNext()) {\n    if (typeof j._serialize === 'function') {\n      joints.push(j);\n    }\n  }\n\n  return {\n    gravity: this.m_gravity,\n    bodies: bodies,\n    joints: joints,\n  };\n};\n\nWorld._deserialize = function(data, context, restore) {\n  if (!data) {\n    return new World();\n  }\n\n  var world = new World(data.gravity);\n\n  data.bodies && data.bodies.reverse().forEach(function(data) {\n    world._addBody(restore(Body, data, world));\n  });\n\n  data.joints && data.joints.reverse().forEach(function(data) {\n    world.createJoint(restore(Joint, data, world));\n  });\n\n  return world;\n};\n\n/**\n * Get the world body list. With the returned body, use Body.getNext to get the\n * next body in the world list. A null body indicates the end of the list.\n *\n * @return the head of the world body list.\n */\nWorld.prototype.getBodyList = function() {\n  return this.m_bodyList;\n}\n\n/**\n * Get the world joint list. With the returned joint, use Joint.getNext to get\n * the next joint in the world list. A null joint indicates the end of the list.\n *\n * @return the head of the world joint list.\n */\nWorld.prototype.getJointList = function() {\n  return this.m_jointList;\n}\n\n/**\n * Get the world contact list. With the returned contact, use Contact.getNext to\n * get the next contact in the world list. A null contact indicates the end of\n * the list.\n *\n * @return the head of the world contact list. Warning: contacts are created and\n *         destroyed in the middle of a time step. Use ContactListener to avoid\n *         missing contacts.\n */\nWorld.prototype.getContactList = function() {\n  return this.m_contactList;\n}\n\nWorld.prototype.getBodyCount = function() {\n  return this.m_bodyCount;\n}\n\nWorld.prototype.getJointCount = function() {\n  return this.m_jointCount;\n}\n\n/**\n * Get the number of contacts (each may have 0 or more contact points).\n */\nWorld.prototype.getContactCount = function() {\n  return this.m_contactCount;\n}\n\n/**\n * Change the global gravity vector.\n */\nWorld.prototype.setGravity = function(gravity) {\n  this.m_gravity = gravity;\n}\n\n/**\n * Get the global gravity vector.\n */\nWorld.prototype.getGravity = function() {\n  return this.m_gravity;\n}\n\n/**\n * Is the world locked (in the middle of a time step).\n */\nWorld.prototype.isLocked = function() {\n  return this.m_locked;\n}\n\n/**\n * Enable/disable sleep.\n */\nWorld.prototype.setAllowSleeping = function(flag) {\n  if (flag == this.m_allowSleep) {\n    return;\n  }\n\n  this.m_allowSleep = flag;\n  if (this.m_allowSleep == false) {\n    for (var b = this.m_bodyList; b; b = b.m_next) {\n      b.setAwake(true);\n    }\n  }\n}\n\nWorld.prototype.getAllowSleeping = function() {\n  return this.m_allowSleep;\n}\n\n/**\n * Enable/disable warm starting. For testing.\n */\nWorld.prototype.setWarmStarting = function(flag) {\n  this.m_warmStarting = flag;\n}\n\nWorld.prototype.getWarmStarting = function() {\n  return this.m_warmStarting;\n}\n\n/**\n * Enable/disable continuous physics. For testing.\n */\nWorld.prototype.setContinuousPhysics = function(flag) {\n  this.m_continuousPhysics = flag;\n}\n\nWorld.prototype.getContinuousPhysics = function() {\n  return this.m_continuousPhysics;\n}\n\n/**\n * Enable/disable single stepped continuous physics. For testing.\n */\nWorld.prototype.setSubStepping = function(flag) {\n  this.m_subStepping = flag;\n}\n\nWorld.prototype.getSubStepping = function() {\n  return this.m_subStepping;\n}\n\n/**\n * Set flag to control automatic clearing of forces after each time step.\n */\nWorld.prototype.setAutoClearForces = function(flag) {\n  this.m_clearForces = flag;\n}\n\n/**\n * Get the flag that controls automatic clearing of forces after each time step.\n */\nWorld.prototype.getAutoClearForces = function() {\n  return this.m_clearForces;\n}\n\n/**\n * Manually clear the force buffer on all bodies. By default, forces are cleared\n * automatically after each call to step. The default behavior is modified by\n * calling setAutoClearForces. The purpose of this function is to support\n * sub-stepping. Sub-stepping is often used to maintain a fixed sized time step\n * under a variable frame-rate. When you perform sub-stepping you will disable\n * auto clearing of forces and instead call clearForces after all sub-steps are\n * complete in one pass of your game loop.\n *\n * @see setAutoClearForces\n */\nWorld.prototype.clearForces = function() {\n  for (var body = this.m_bodyList; body; body = body.getNext()) {\n    body.m_force.setZero();\n    body.m_torque = 0.0;\n  }\n}\n\n/**\n * @function World~rayCastCallback\n *\n * @param fixture\n */\n\n/**\n * Query the world for all fixtures that potentially overlap the provided AABB.\n *\n * @param {World~queryCallback} queryCallback Called for each fixture\n *          found in the query AABB. It may return `false` to terminate the\n *          query.\n *\n * @param aabb The query box.\n */\nWorld.prototype.queryAABB = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n  this.m_broadPhase.query(aabb, function(proxyId) { //TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    return queryCallback(proxy.fixture);\n  });\n}\n\n/**\n * @function World~rayCastCallback\n *\n * Callback class for ray casts. See World.rayCast\n *\n * Called for each fixture found in the query. You control how the ray cast\n * proceeds by returning a float: return -1: ignore this fixture and continue\n * return 0: terminate the ray cast return fraction: clip the ray to this point\n * return 1: don't clip the ray and continue\n *\n * @param fixture The fixture hit by the ray\n * @param point The point of initial intersection\n * @param normal The normal vector at the point of intersection\n * @param fraction\n *\n * @return {float} -1 to filter, 0 to terminate, fraction to clip the ray for\n *         closest hit, 1 to continue\n */\n\n/**\n *\n * Ray-cast the world for all fixtures in the path of the ray. Your callback\n * controls whether you get the closest point, any point, or n-points. The\n * ray-cast ignores shapes that contain the starting point.\n *\n * @param {World~RayCastCallback} reportFixtureCallback A user implemented\n *          callback function.\n * @param point1 The ray starting point\n * @param point2 The ray ending point\n */\nWorld.prototype.rayCast = function(point1, point2, reportFixtureCallback) {\n  _ASSERT && common.assert(typeof reportFixtureCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n\n  this.m_broadPhase.rayCast({\n    maxFraction : 1.0,\n    p1 : point1,\n    p2 : point2\n  }, function(input, proxyId) { // TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    var fixture = proxy.fixture;\n    var index = proxy.childIndex;\n    var output = {}; // TODO GC\n    var hit = fixture.rayCast(output, input, index);\n    if (hit) {\n      var fraction = output.fraction;\n      var point = Vec2.add(Vec2.mul((1.0 - fraction), input.p1), Vec2.mul(fraction, input.p2));\n      return reportFixtureCallback(fixture, point, output.normal, fraction);\n    }\n    return input.maxFraction;\n  });\n}\n\n/**\n * Get the number of broad-phase proxies.\n */\nWorld.prototype.getProxyCount = function() {\n  return this.m_broadPhase.getProxyCount();\n}\n\n/**\n * Get the height of broad-phase dynamic tree.\n */\nWorld.prototype.getTreeHeight = function() {\n  return this.m_broadPhase.getTreeHeight();\n}\n\n/**\n * Get the balance of broad-phase dynamic tree.\n *\n * @returns {int}\n */\nWorld.prototype.getTreeBalance = function() {\n  return this.m_broadPhase.getTreeBalance();\n}\n\n/**\n * Get the quality metric of broad-phase dynamic tree. The smaller the better.\n * The minimum is 1.\n *\n * @returns {float}\n */\nWorld.prototype.getTreeQuality = function() {\n  return this.m_broadPhase.getTreeQuality();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The body shift formula is:\n * position -= newOrigin\n *\n * @param {Vec2} newOrigin The new origin with respect to the old origin\n */\nWorld.prototype.shiftOrigin = function(newOrigin) {\n  _ASSERT && common.assert(this.m_locked == false);\n  if (this.m_locked) {\n    return;\n  }\n\n  for (var b = this.m_bodyList; b; b = b.m_next) {\n    b.m_xf.p.sub(newOrigin);\n    b.m_sweep.c0.sub(newOrigin);\n    b.m_sweep.c.sub(newOrigin);\n  }\n\n  for (var j = this.m_jointList; j; j = j.m_next) {\n    j.shiftOrigin(newOrigin);\n  }\n\n  this.m_broadPhase.shiftOrigin(newOrigin);\n}\n\n/**\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} body\n */\nWorld.prototype._addBody = function(body) {\n  _ASSERT && common.assert(this.isLocked() === false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Add to world doubly linked list.\n  body.m_prev = null;\n  body.m_next = this.m_bodyList;\n  if (this.m_bodyList) {\n    this.m_bodyList.m_prev = body;\n  }\n  this.m_bodyList = body;\n  ++this.m_bodyCount;\n}\n\n/**\n * Create a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {BodyDef|Vec2} def Body definition or position.\n * @param {float} angle Body angle if def is position.\n */\nWorld.prototype.createBody = function(def, angle) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {\n      position : def,\n      angle : angle\n    };\n  }\n\n  var body = new Body(this, def);\n\n  this._addBody(body);\n\n  return body;\n}\n\nWorld.prototype.createDynamicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'dynamic';\n  return this.createBody(def);\n}\n\nWorld.prototype.createKinematicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'kinematic';\n  return this.createBody(def);\n}\n\n/**\n * Destroy a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This automatically deletes all associated shapes and joints.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} b\n */\nWorld.prototype.destroyBody = function(b) {\n  _ASSERT && common.assert(this.m_bodyCount > 0);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  if (b.m_destroyed) {\n    return false;\n  }\n\n  // Delete the attached joints.\n  var je = b.m_jointList;\n  while (je) {\n    var je0 = je;\n    je = je.next;\n\n    this.publish('remove-joint', je0.joint);\n    this.destroyJoint(je0.joint);\n\n    b.m_jointList = je;\n  }\n  b.m_jointList = null;\n\n  // Delete the attached contacts.\n  var ce = b.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n\n    this.destroyContact(ce0.contact);\n\n    b.m_contactList = ce;\n  }\n  b.m_contactList = null;\n\n  // Delete the attached fixtures. This destroys broad-phase proxies.\n  var f = b.m_fixtureList;\n  while (f) {\n    var f0 = f;\n    f = f.m_next;\n\n    this.publish('remove-fixture', f0);\n    f0.destroyProxies(this.m_broadPhase);\n\n    b.m_fixtureList = f;\n  }\n  b.m_fixtureList = null;\n\n  // Remove world body list.\n  if (b.m_prev) {\n    b.m_prev.m_next = b.m_next;\n  }\n\n  if (b.m_next) {\n    b.m_next.m_prev = b.m_prev;\n  }\n\n  if (b == this.m_bodyList) {\n    this.m_bodyList = b.m_next;\n  }\n\n  b.m_destroyed = true;\n\n  --this.m_bodyCount;\n\n  this.publish('remove-body', b);\n\n  return true;\n}\n\n/**\n * Create a joint to constrain bodies together. No reference to the definition\n * is retained. This may cause the connected bodies to cease colliding.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n * @param {Body} bodyB\n * @param {Body} bodyA\n */\nWorld.prototype.createJoint = function(joint) {\n  _ASSERT && common.assert(!!joint.m_bodyA);\n  _ASSERT && common.assert(!!joint.m_bodyB);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  // Connect to the world list.\n  joint.m_prev = null;\n  joint.m_next = this.m_jointList;\n  if (this.m_jointList) {\n    this.m_jointList.m_prev = joint;\n  }\n  this.m_jointList = joint;\n  ++this.m_jointCount;\n\n  // Connect to the bodies' doubly linked lists.\n  joint.m_edgeA.joint = joint;\n  joint.m_edgeA.other = joint.m_bodyB;\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = joint.m_bodyA.m_jointList;\n  if (joint.m_bodyA.m_jointList)\n    joint.m_bodyA.m_jointList.prev = joint.m_edgeA;\n  joint.m_bodyA.m_jointList = joint.m_edgeA;\n\n  joint.m_edgeB.joint = joint;\n  joint.m_edgeB.other = joint.m_bodyA;\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = joint.m_bodyB.m_jointList;\n  if (joint.m_bodyB.m_jointList)\n    joint.m_bodyB.m_jointList.prev = joint.m_edgeB;\n  joint.m_bodyB.m_jointList = joint.m_edgeB;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    for (var edge = joint.m_bodyB.getContactList(); edge; edge = edge.next) {\n      if (edge.other == joint.m_bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n    }\n  }\n\n  // Note: creating a joint doesn't wake the bodies.\n\n  return joint;\n}\n\n/**\n * Destroy a joint. This may cause the connected bodies to begin colliding.\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n */\nWorld.prototype.destroyJoint = function(joint) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Remove from the doubly linked list.\n  if (joint.m_prev) {\n    joint.m_prev.m_next = joint.m_next;\n  }\n\n  if (joint.m_next) {\n    joint.m_next.m_prev = joint.m_prev;\n  }\n\n  if (joint == this.m_jointList) {\n    this.m_jointList = joint.m_next;\n  }\n\n  // Disconnect from bodies.\n  var bodyA = joint.m_bodyA;\n  var bodyB = joint.m_bodyB;\n\n  // Wake up connected bodies.\n  bodyA.setAwake(true);\n  bodyB.setAwake(true);\n\n  // Remove from body 1.\n  if (joint.m_edgeA.prev) {\n    joint.m_edgeA.prev.next = joint.m_edgeA.next;\n  }\n\n  if (joint.m_edgeA.next) {\n    joint.m_edgeA.next.prev = joint.m_edgeA.prev;\n  }\n\n  if (joint.m_edgeA == bodyA.m_jointList) {\n    bodyA.m_jointList = joint.m_edgeA.next;\n  }\n\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = null;\n\n  // Remove from body 2\n  if (joint.m_edgeB.prev) {\n    joint.m_edgeB.prev.next = joint.m_edgeB.next;\n  }\n\n  if (joint.m_edgeB.next) {\n    joint.m_edgeB.next.prev = joint.m_edgeB.prev;\n  }\n\n  if (joint.m_edgeB == bodyB.m_jointList) {\n    bodyB.m_jointList = joint.m_edgeB.next;\n  }\n\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = null;\n\n  _ASSERT && common.assert(this.m_jointCount > 0);\n  --this.m_jointCount;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    var edge = bodyB.getContactList();\n    while (edge) {\n      if (edge.other == bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n\n      edge = edge.next;\n    }\n  }\n\n  this.publish('remove-joint', joint);\n}\n\nvar s_step = new Solver.TimeStep(); // reuse\n\n/**\n * Take a time step. This performs collision detection, integration, and\n * constraint solution.\n *\n * Broad-phase, narrow-phase, solve and solve time of impacts.\n *\n * @param {float} timeStep Time step, this should not vary.\n * @param {int} velocityIterations\n * @param {int} positionIterations\n */\nWorld.prototype.step = function(timeStep, velocityIterations, positionIterations) {\n\n  if ((velocityIterations | 0) !== velocityIterations) {\n    // TODO: remove this in future\n    velocityIterations = 0;\n  }\n\n  velocityIterations = velocityIterations || this.m_velocityIterations;\n  positionIterations = positionIterations || this.m_positionIterations;\n\n  // TODO: move this to testbed\n  this.m_stepCount++;\n\n  // If new fixtures were added, we need to find the new contacts.\n  if (this.m_newFixture) {\n    this.findNewContacts();\n    this.m_newFixture = false;\n  }\n\n  this.m_locked = true;\n\n  s_step.reset(timeStep);\n  s_step.velocityIterations = velocityIterations;\n  s_step.positionIterations = positionIterations;\n  s_step.warmStarting = this.m_warmStarting;\n  s_step.blockSolve = this.m_blockSolve;\n\n  // Update contacts. This is where some contacts are destroyed.\n  this.updateContacts();\n\n  // Integrate velocities, solve velocity constraints, and integrate positions.\n  if (this.m_stepComplete && timeStep > 0.0) {\n    this.m_solver.solveWorld(s_step);\n\n    // Synchronize fixtures, check for out of range bodies.\n    for (var b = this.m_bodyList; b; b = b.getNext()) {\n      // If a body was not in an island then it did not move.\n      if (b.m_islandFlag == false) {\n        continue;\n      }\n\n      if (b.isStatic()) {\n        continue;\n      }\n\n      // Update fixtures (for broad-phase).\n      b.synchronizeFixtures();\n    }\n    // Look for new contacts.\n    this.findNewContacts();\n  }\n\n  // Handle TOI events.\n  if (this.m_continuousPhysics && timeStep > 0.0) {\n    this.m_solver.solveWorldTOI(s_step);\n  }\n\n  if (this.m_clearForces) {\n    this.clearForces();\n  }\n\n  this.m_locked = false;\n}\n\n/**\n * Call this method to find new contacts.\n */\nWorld.prototype.findNewContacts = function() {\n  this.m_broadPhase.updatePairs(this.addPair);\n}\n\n/**\n * @private\n *\n * @param {FixtureProxy} proxyA\n * @param {FixtureProxy} proxyB\n */\nWorld.prototype.createContact = function(proxyA, proxyB) {\n  var fixtureA = proxyA.fixture;\n  var fixtureB = proxyB.fixture;\n\n  var indexA = proxyA.childIndex;\n  var indexB = proxyB.childIndex;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Are the fixtures on the same body?\n  if (bodyA == bodyB) {\n    return;\n  }\n\n  // TODO_ERIN use a hash table to remove a potential bottleneck when both\n  // bodies have a lot of contacts.\n  // Does a contact already exist?\n  var edge = bodyB.getContactList(); // ContactEdge\n  while (edge) {\n    if (edge.other == bodyA) {\n      var fA = edge.contact.getFixtureA();\n      var fB = edge.contact.getFixtureB();\n      var iA = edge.contact.getChildIndexA();\n      var iB = edge.contact.getChildIndexB();\n\n      if (fA == fixtureA && fB == fixtureB && iA == indexA && iB == indexB) {\n        // A contact already exists.\n        return;\n      }\n\n      if (fA == fixtureB && fB == fixtureA && iA == indexB && iB == indexA) {\n        // A contact already exists.\n        return;\n      }\n    }\n\n    edge = edge.next;\n  }\n\n  if (bodyB.shouldCollide(bodyA) == false) {\n    return;\n  }\n  if (fixtureB.shouldCollide(fixtureA) == false) {\n    return;\n  }\n\n  // Call the factory.\n  var contact = Contact.create(fixtureA, indexA, fixtureB, indexB);\n  if (contact == null) {\n    return;\n  }\n\n  // Insert into the world.\n  contact.m_prev = null;\n  if (this.m_contactList != null) {\n    contact.m_next = this.m_contactList;\n    this.m_contactList.m_prev = contact;\n  }\n  this.m_contactList = contact;\n\n  ++this.m_contactCount;\n}\n\n/**\n * Removes old non-overlapping contacts, applies filters and updates contacts.\n */\nWorld.prototype.updateContacts = function() {\n  // Update awake contacts.\n  var c, next_c = this.m_contactList;\n  while (c = next_c) {\n    next_c = c.getNext()\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n    var indexA = c.getChildIndexA();\n    var indexB = c.getChildIndexB();\n    var bodyA = fixtureA.getBody();\n    var bodyB = fixtureB.getBody();\n\n    // Is this contact flagged for filtering?\n    if (c.m_filterFlag) {\n      if (bodyB.shouldCollide(bodyA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      if (fixtureB.shouldCollide(fixtureA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      // Clear the filtering flag.\n      c.m_filterFlag = false;\n    }\n\n    var activeA = bodyA.isAwake() && !bodyA.isStatic();\n    var activeB = bodyB.isAwake() && !bodyB.isStatic();\n\n    // At least one body must be awake and it must be dynamic or kinematic.\n    if (activeA == false && activeB == false) {\n      continue;\n    }\n\n    var proxyIdA = fixtureA.m_proxies[indexA].proxyId;\n    var proxyIdB = fixtureB.m_proxies[indexB].proxyId;\n    var overlap = this.m_broadPhase.testOverlap(proxyIdA, proxyIdB);\n\n    // Here we destroy contacts that cease to overlap in the broad-phase.\n    if (overlap == false) {\n      this.destroyContact(c);\n      continue;\n    }\n\n    // The contact persists.\n    c.update(this);\n  }\n}\n\n/**\n * @param {Contact} contact\n */\nWorld.prototype.destroyContact = function(contact) {\n  Contact.destroy(contact, this);\n\n  // Remove from the world.\n  if (contact.m_prev) {\n    contact.m_prev.m_next = contact.m_next;\n  }\n  if (contact.m_next) {\n    contact.m_next.m_prev = contact.m_prev;\n  }\n  if (contact == this.m_contactList) {\n    this.m_contactList = contact.m_next;\n  }\n\n  --this.m_contactCount;\n}\n\nWorld.prototype._listeners = null;\n\n/**\n * Register an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.on = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  if (!this._listeners) {\n    this._listeners = {};\n  }\n  if (!this._listeners[name]) {\n    this._listeners[name] = [];\n  }\n  this._listeners[name].push(listener);\n  return this;\n};\n\n/**\n * Remove an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.off = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return this;\n  }\n  var index = listeners.indexOf(listener);\n  if (index >= 0) {\n    listeners.splice(index, 1);\n  }\n  return this;\n};\n\nWorld.prototype.publish = function(name, arg1, arg2, arg3) {\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return 0;\n  }\n  for (var l = 0; l < listeners.length; l++) {\n    listeners[l].call(this, arg1, arg2, arg3);\n  }\n  return listeners.length;\n};\n\n/**\n * @event World#remove-body\n * @event World#remove-joint\n * @event World#remove-fixture\n *\n * Joints and fixtures are destroyed when their associated body is destroyed.\n * Register a destruction listener so that you may nullify references to these\n * joints and shapes.\n *\n * `function(object)` is called when any joint or fixture is about to\n * be destroyed due to the destruction of one of its attached or parent bodies.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.beginContact = function(contact) {\n  this.publish('begin-contact', contact);\n};\n\n/**\n * @event World#begin-contact\n *\n * Called when two fixtures begin to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.endContact = function(contact) {\n  this.publish('end-contact', contact);\n};\n\n/**\n * @event World#end-contact\n *\n * Called when two fixtures cease to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {Manifold} oldManifold\n */\nWorld.prototype.preSolve = function(contact, oldManifold) {\n  this.publish('pre-solve', contact, oldManifold);\n};\n\n/**\n * @event World#pre-solve\n *\n * This is called after a contact is updated. This allows you to inspect a\n * contact before it goes to the solver. If you are careful, you can modify the\n * contact manifold (e.g. disable contact). A copy of the old manifold is\n * provided so that you can detect changes. Note: this is called only for awake\n * bodies. Note: this is called even when the number of contact points is zero.\n * Note: this is not called for sensors. Note: if you set the number of contact\n * points to zero, you will not get an endContact callback. However, you may get\n * a beginContact callback the next step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {ContactImpulse} impulse\n */\nWorld.prototype.postSolve = function(contact, impulse) {\n  this.publish('post-solve', contact, impulse);\n};\n\n/**\n * @event World#post-solve\n *\n * This lets you inspect a contact after the solver is finished. This is useful\n * for inspecting impulses. Note: the contact manifold does not include time of\n * impact impulses, which can be arbitrarily large if the sub-step is small.\n * Hence the impulse is provided explicitly in a separate data structure. Note:\n * this is only called for contacts that are touching, solid, and awake.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * Register a contact filter to provide specific control over collision.\n * Otherwise the default filter is used (defaultFilter). The listener is owned\n * by you and must remain in scope.\n *\n * Moved to Fixture.\n */\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Pool = require('../util/Pool');\nvar Vec2 = require('../common/Vec2');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\n\nmodule.exports = DynamicTree;\n\n/**\n * A node in the dynamic tree. The client does not interact with this directly.\n * \n * @prop {AABB} aabb Enlarged AABB\n * @prop {integer} height 0: leaf, -1: free node\n */\nfunction TreeNode(id) {\n  this.id = id;\n  this.aabb = new AABB();\n  this.userData = null;\n  this.parent = null;\n  this.child1 = null;\n  this.child2 = null;\n  this.height = -1;\n\n  this.toString = function() {\n    return this.id + \": \" + this.userData;\n  }\n};\n\nTreeNode.prototype.isLeaf = function() {\n  return this.child1 == null;\n}\n/**\n * A dynamic AABB tree broad-phase, inspired by Nathanael Presson's btDbvt. A\n * dynamic tree arranges data in a binary tree to accelerate queries such as\n * volume queries and ray casts. Leafs are proxies with an AABB. In the tree we\n * expand the proxy AABB by `aabbExtension` so that the proxy AABB is bigger\n * than the client object. This allows the client object to move by small\n * amounts without triggering a tree update.\n * \n * Nodes are pooled and relocatable, so we use node indices rather than\n * pointers.\n */\nfunction DynamicTree() {\n  this.m_root = null;\n  this.m_nodes = {}\n  this.m_lastProxyId = 0;\n\n  this.m_pool = new Pool({\n    create : function() {\n      return new TreeNode();\n    }\n  });\n};\n\n/**\n * Get proxy user data.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getUserData = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.userData;\n}\n\n/**\n * Get the fat AABB for a node id.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getFatAABB = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.aabb;\n}\n\nDynamicTree.prototype.allocateNode = function() {\n  var node = this.m_pool.allocate();\n  node.id = ++this.m_lastProxyId;\n  node.userData = null;\n  node.parent = null;\n  node.child1 = null;\n  node.child2 = null;\n  node.height = -1;\n  this.m_nodes[node.id] = node;\n  return node;\n}\n\nDynamicTree.prototype.freeNode = function(node) {\n  this.m_pool.release(node);\n  node.height = -1;\n  delete this.m_nodes[node.id];\n}\n\n/**\n * Create a proxy in the tree as a leaf node. We return the index of the node\n * instead of a pointer so that we can grow the node pool.\n * \n * Create a proxy. Provide a tight fitting AABB and a userData pointer.\n */\nDynamicTree.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb))\n\n  var node = this.allocateNode()\n\n  node.aabb.set(aabb);\n\n  // Fatten the aabb.\n  AABB.extend(node.aabb, Settings.aabbExtension);\n\n  node.userData = userData;\n  node.height = 0;\n\n  this.insertLeaf(node);\n\n  return node.id;\n}\n\n/**\n * Destroy a proxy. This asserts if the id is invalid.\n */\nDynamicTree.prototype.destroyProxy = function(id) {\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  this.removeLeaf(node);\n  this.freeNode(node);\n}\n\n/**\n * Move a proxy with a swepted AABB. If the proxy has moved outside of its\n * fattened AABB, then the proxy is removed from the tree and re-inserted.\n * Otherwise the function returns immediately.\n * \n * @param id\n * @param aabb\n * @param {Vec2} d Displacement\n * \n * @return true if the proxy was re-inserted.\n */\nDynamicTree.prototype.moveProxy = function(id, aabb, d) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  _ASSERT && common.assert(!d || Vec2.isValid(d));\n\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  if (node.aabb.contains(aabb)) {\n    return false;\n  }\n\n  this.removeLeaf(node);\n\n  node.aabb.set(aabb)\n\n  // Extend AABB.\n  aabb = node.aabb;\n  AABB.extend(aabb, Settings.aabbExtension);\n\n  // Predict AABB displacement.\n  // var d = Vec2.mul(Settings.aabbMultiplier, displacement);\n\n  if (d.x < 0.0) {\n    aabb.lowerBound.x += d.x * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.x += d.x * Settings.aabbMultiplier;\n  }\n\n  if (d.y < 0.0) {\n    aabb.lowerBound.y += d.y * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.y += d.y * Settings.aabbMultiplier;\n  }\n\n  this.insertLeaf(node);\n\n  return true;\n}\n\nDynamicTree.prototype.insertLeaf = function(leaf) {\n  _ASSERT && common.assert(AABB.isValid(leaf.aabb));\n\n  if (this.m_root == null) {\n    this.m_root = leaf;\n    this.m_root.parent = null;\n    return;\n  }\n\n  // Find the best sibling for this node\n  var leafAABB = leaf.aabb;\n  var index = this.m_root;\n  while (index.isLeaf() == false) {\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    var area = index.aabb.getPerimeter();\n\n    var combinedAABB = new AABB();\n    combinedAABB.combine(index.aabb, leafAABB);\n    var combinedArea = combinedAABB.getPerimeter();\n\n    // Cost of creating a new parent for this node and the new leaf\n    var cost = 2.0 * combinedArea;\n\n    // Minimum cost of pushing the leaf further down the tree\n    var inheritanceCost = 2.0 * (combinedArea - area);\n\n    // Cost of descending into child1\n    var cost1;\n    if (child1.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      cost1 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      var oldArea = child1.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost1 = (newArea - oldArea) + inheritanceCost;\n    }\n\n    // Cost of descending into child2\n    var cost2;\n    if (child2.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      cost2 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      var oldArea = child2.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost2 = newArea - oldArea + inheritanceCost;\n    }\n\n    // Descend according to the minimum cost.\n    if (cost < cost1 && cost < cost2) {\n      break;\n    }\n\n    // Descend\n    if (cost1 < cost2) {\n      index = child1;\n    } else {\n      index = child2;\n    }\n  }\n\n  var sibling = index;\n\n  // Create a new parent.\n  var oldParent = sibling.parent;\n  var newParent = this.allocateNode();\n  newParent.parent = oldParent;\n  newParent.userData = null;\n  newParent.aabb.combine(leafAABB, sibling.aabb);\n  newParent.height = sibling.height + 1;\n\n  if (oldParent != null) {\n    // The sibling was not the root.\n    if (oldParent.child1 == sibling) {\n      oldParent.child1 = newParent;\n    } else {\n      oldParent.child2 = newParent;\n    }\n\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n  } else {\n    // The sibling was the root.\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n    this.m_root = newParent;\n  }\n\n  // Walk back up the tree fixing heights and AABBs\n  index = leaf.parent;\n  while (index != null) {\n    index = this.balance(index);\n\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    _ASSERT && common.assert(child1 != null);\n    _ASSERT && common.assert(child2 != null);\n\n    index.height = 1 + Math.max(child1.height, child2.height);\n    index.aabb.combine(child1.aabb, child2.aabb);\n\n    index = index.parent;\n  }\n\n  // validate();\n}\n\nDynamicTree.prototype.removeLeaf = function(leaf) {\n  if (leaf == this.m_root) {\n    this.m_root = null;\n    return;\n  }\n\n  var parent = leaf.parent;\n  var grandParent = parent.parent;\n  var sibling;\n  if (parent.child1 == leaf) {\n    sibling = parent.child2;\n  } else {\n    sibling = parent.child1;\n  }\n\n  if (grandParent != null) {\n    // Destroy parent and connect sibling to grandParent.\n    if (grandParent.child1 == parent) {\n      grandParent.child1 = sibling;\n    } else {\n      grandParent.child2 = sibling;\n    }\n    sibling.parent = grandParent;\n    this.freeNode(parent);\n\n    // Adjust ancestor bounds.\n    var index = grandParent;\n    while (index != null) {\n      index = this.balance(index);\n\n      var child1 = index.child1;\n      var child2 = index.child2;\n\n      index.aabb.combine(child1.aabb, child2.aabb);\n      index.height = 1 + Math.max(child1.height, child2.height);\n\n      index = index.parent;\n    }\n  } else {\n    this.m_root = sibling;\n    sibling.parent = null;\n    this.freeNode(parent);\n  }\n\n  // validate();\n}\n\n/**\n * Perform a left or right rotation if node A is imbalanced. Returns the new\n * root index.\n */\nDynamicTree.prototype.balance = function(iA) {\n  _ASSERT && common.assert(iA != null);\n\n  var A = iA;\n  if (A.isLeaf() || A.height < 2) {\n    return iA;\n  }\n\n  var B = A.child1;\n  var C = A.child2;\n\n  var balance = C.height - B.height;\n\n  // Rotate C up\n  if (balance > 1) {\n    var F = C.child1;\n    var G = C.child2;\n\n    // Swap A and C\n    C.child1 = A;\n    C.parent = A.parent;\n    A.parent = C;\n\n    // A's old parent should point to C\n    if (C.parent != null) {\n      if (C.parent.child1 == iA) {\n        C.parent.child1 = C;\n      } else {\n        C.parent.child2 = C;\n      }\n    } else {\n      this.m_root = C;\n    }\n\n    // Rotate\n    if (F.height > G.height) {\n      C.child2 = F;\n      A.child2 = G;\n      G.parent = A;\n      A.aabb.combine(B.aabb, G.aabb);\n      C.aabb.combine(A.aabb, F.aabb);\n\n      A.height = 1 + Math.max(B.height, G.height);\n      C.height = 1 + Math.max(A.height, F.height);\n    } else {\n      C.child2 = G;\n      A.child2 = F;\n      F.parent = A;\n      A.aabb.combine(B.aabb, F.aabb);\n      C.aabb.combine(A.aabb, G.aabb);\n\n      A.height = 1 + Math.max(B.height, F.height);\n      C.height = 1 + Math.max(A.height, G.height);\n    }\n\n    return C;\n  }\n\n  // Rotate B up\n  if (balance < -1) {\n    var D = B.child1;\n    var E = B.child2;\n\n    // Swap A and B\n    B.child1 = A;\n    B.parent = A.parent;\n    A.parent = B;\n\n    // A's old parent should point to B\n    if (B.parent != null) {\n      if (B.parent.child1 == A) {\n        B.parent.child1 = B;\n      } else {\n        B.parent.child2 = B;\n      }\n    } else {\n      this.m_root = B;\n    }\n\n    // Rotate\n    if (D.height > E.height) {\n      B.child2 = D;\n      A.child1 = E;\n      E.parent = A;\n      A.aabb.combine(C.aabb, E.aabb);\n      B.aabb.combine(A.aabb, D.aabb);\n\n      A.height = 1 + Math.max(C.height, E.height);\n      B.height = 1 + Math.max(A.height, D.height);\n    } else {\n      B.child2 = E;\n      A.child1 = D;\n      D.parent = A;\n      A.aabb.combine(C.aabb, D.aabb);\n      B.aabb.combine(A.aabb, E.aabb);\n\n      A.height = 1 + Math.max(C.height, D.height);\n      B.height = 1 + Math.max(A.height, E.height);\n    }\n\n    return B;\n  }\n\n  return A;\n}\n\n/**\n * Compute the height of the binary tree in O(N) time. Should not be called\n * often.\n */\nDynamicTree.prototype.getHeight = function() {\n  if (this.m_root == null) {\n    return 0;\n  }\n\n  return this.m_root.height;\n}\n\n/**\n * Get the ratio of the sum of the node areas to the root area.\n */\nDynamicTree.prototype.getAreaRatio = function() {\n  if (this.m_root == null) {\n    return 0.0;\n  }\n\n  var root = this.m_root;\n  var rootArea = root.aabb.getPerimeter();\n\n  var totalArea = 0.0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // Free node in pool\n      continue;\n    }\n\n    totalArea += node.aabb.getPerimeter();\n  }\n\n  iteratorPool.release(it);\n\n  return totalArea / rootArea;\n}\n\n/**\n * Compute the height of a sub-tree.\n */\nDynamicTree.prototype.computeHeight = function(id) {\n  var node;\n  if (typeof id !== 'undefined') {\n    node = this.m_nodes[id];\n  } else {\n    node = this.m_root;\n  }\n\n  // _ASSERT && common.assert(0 <= id && id < this.m_nodeCapacity);\n\n  if (node.isLeaf()) {\n    return 0;\n  }\n\n  var height1 = this.computeHeight(node.child1.id);\n  var height2 = this.computeHeight(node.child2.id);\n  return 1 + Math.max(height1, height2);\n}\n\nDynamicTree.prototype.validateStructure = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  if (node == this.m_root) {\n    _ASSERT && common.assert(node.parent == null);\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  _ASSERT && common.assert(child1.parent == node);\n  _ASSERT && common.assert(child2.parent == node);\n\n  this.validateStructure(child1);\n  this.validateStructure(child2);\n}\n\nDynamicTree.prototype.validateMetrics = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  var height1 = child1.height;\n  var height2 = child2.height;\n  var height = 1 + Math.max(height1, height2);\n  _ASSERT && common.assert(node.height == height);\n\n  var aabb = new AABB();\n  aabb.combine(child1.aabb, child2.aabb);\n\n  _ASSERT && common.assert(AABB.areEqual(aabb, node.aabb));\n\n  this.validateMetrics(child1);\n  this.validateMetrics(child2);\n}\n\n// Validate this tree. For testing.\nDynamicTree.prototype.validate = function() {\n  this.validateStructure(this.m_root);\n  this.validateMetrics(this.m_root);\n\n  _ASSERT && common.assert(this.getHeight() == this.computeHeight());\n}\n\n/**\n * Get the maximum balance of an node in the tree. The balance is the difference\n * in height of the two children of a node.\n */\nDynamicTree.prototype.getMaxBalance = function() {\n  var maxBalance = 0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height <= 1) {\n      continue;\n    }\n\n    _ASSERT && common.assert(node.isLeaf() == false);\n\n    var balance = Math.abs(node.child2.height - node.child1.height);\n    maxBalance = Math.max(maxBalance, balance);\n  }\n  iteratorPool.release(it);\n\n  return maxBalance;\n}\n\n/**\n * Build an optimal tree. Very expensive. For testing.\n */\nDynamicTree.prototype.rebuildBottomUp = function() {\n  var nodes = [];\n  var count = 0;\n\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // free node in pool\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      node.parent = null;\n      nodes[count] = node;\n      ++count;\n    } else {\n      this.freeNode(node);\n    }\n  }\n  iteratorPool.release(it);\n\n  while (count > 1) {\n    var minCost = Infinity;\n    var iMin = -1, jMin = -1;\n    for (var i = 0; i < count; ++i) {\n      var aabbi = nodes[i].aabb;\n      for (var j = i + 1; j < count; ++j) {\n        var aabbj = nodes[j].aabb;\n        var b = new AABB();\n        b.combine(aabbi, aabbj);\n        var cost = b.getPerimeter();\n        if (cost < minCost) {\n          iMin = i;\n          jMin = j;\n          minCost = cost;\n        }\n      }\n    }\n\n    var child1 = nodes[iMin];\n    var child2 = nodes[jMin];\n\n    var parent = this.allocateNode();\n    parent.child1 = child1;\n    parent.child2 = child2;\n    parent.height = 1 + Math.max(child1.height, child2.height);\n    parent.aabb.combine(child1.aabb, child2.aabb);\n    parent.parent = null;\n\n    child1.parent = parent;\n    child2.parent = parent;\n\n    nodes[jMin] = nodes[count - 1];\n    nodes[iMin] = parent;\n    --count;\n  }\n\n  this.m_root = nodes[0];\n\n  this.validate();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nDynamicTree.prototype.shiftOrigin = function(newOrigin) {\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    var aabb = node.aabb;\n    aabb.lowerBound.x -= newOrigin.x;\n    aabb.lowerBound.y -= newOrigin.y;\n    aabb.upperBound.x -= newOrigin.x;\n    aabb.upperBound.y -= newOrigin.y;\n  }\n  iteratorPool.release(it);\n}\n\n/**\n * @function {DynamicTree~queryCallback}\n * \n * @param id Node id.\n */\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n * \n * @param {DynamicTree~queryCallback} queryCallback\n */\nDynamicTree.prototype.query = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function')\n  var stack = stackPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, aabb)) {\n      if (node.isLeaf()) {\n        var proceed = queryCallback(node.id);\n        if (proceed == false) {\n          return;\n        }\n      } else {\n        stack.push(node.child1);\n        stack.push(node.child2);\n      }\n    }\n  }\n\n  stackPool.release(stack);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nDynamicTree.prototype.rayCast = function(input, rayCastCallback) { // TODO GC\n  _ASSERT && common.assert(typeof rayCastCallback === 'function')\n  var p1 = input.p1;\n  var p2 = input.p2;\n  var r = Vec2.sub(p2, p1);\n  _ASSERT && common.assert(r.lengthSquared() > 0.0);\n  r.normalize();\n\n  // v is perpendicular to the segment.\n  var v = Vec2.cross(1.0, r);\n  var abs_v = Vec2.abs(v);\n\n  // Separating axis for segment (Gino, p80).\n  // |dot(v, p1 - c)| > dot(|v|, h)\n\n  var maxFraction = input.maxFraction;\n\n  // Build a bounding box for the segment.\n  var segmentAABB = new AABB();\n  var t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n  segmentAABB.combinePoints(p1, t);\n\n  var stack = stackPool.allocate();\n  var subInput = inputPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, segmentAABB) == false) {\n      continue;\n    }\n\n    // Separating axis for segment (Gino, p80).\n    // |dot(v, p1 - c)| > dot(|v|, h)\n    var c = node.aabb.getCenter();\n    var h = node.aabb.getExtents();\n    var separation = Math.abs(Vec2.dot(v, Vec2.sub(p1, c)))\n        - Vec2.dot(abs_v, h);\n    if (separation > 0.0) {\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      subInput.p1 = Vec2.clone(input.p1);\n      subInput.p2 = Vec2.clone(input.p2);\n      subInput.maxFraction = maxFraction;\n\n      var value = rayCastCallback(subInput, node.id);\n\n      if (value == 0.0) {\n        // The client has terminated the ray cast.\n        return;\n      }\n\n      if (value > 0.0) {\n        // update segment bounding box.\n        maxFraction = value;\n        t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n        segmentAABB.combinePoints(p1, t);\n      }\n    } else {\n      stack.push(node.child1);\n      stack.push(node.child2);\n    }\n  }\n\n  stackPool.release(stack);\n  inputPool.release(subInput);\n}\n\nvar inputPool = new Pool({\n  create : function() {\n    return {};\n  },\n  release : function(stack) {\n  }\n});\n\nvar stackPool = new Pool({\n  create : function() {\n    return [];\n  },\n  release : function(stack) {\n    stack.length = 0;\n  }\n});\n\nvar iteratorPool = new Pool({\n  create : function() {\n    return new Iterator();\n  },\n  release : function(iterator) {\n    iterator.close();\n  }\n});\n\nfunction Iterator() {\n  var parents = [];\n  var states = [];\n  return {\n    preorder : function(root) {\n      parents.length = 0;\n      parents.push(root);\n      states.length = 0;\n      states.push(0);\n      return this;\n    },\n    next : function() {\n      while (parents.length > 0) {\n        var i = parents.length - 1;\n        var node = parents[i];\n        if (states[i] === 0) {\n          states[i] = 1;\n          return node;\n        }\n        if (states[i] === 1) {\n          states[i] = 2;\n          if (node.child1) {\n            parents.push(node.child1);\n            states.push(1);\n            return node.child1;\n          }\n        }\n        if (states[i] === 2) {\n          states[i] = 3;\n          if (node.child2) {\n            parents.push(node.child2);\n            states.push(1);\n            return node.child2;\n          }\n        }\n        parents.pop();\n        states.pop();\n      }\n    },\n    close : function() {\n      parents.length = 0;\n    }\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Fixture;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\n\nvar AABB = require('./collision/AABB');\n\nvar Shape = require('./Shape');\n\n/**\n * @typedef {Object} FixtureDef\n *\n * A fixture definition is used to create a fixture. This class defines an\n * abstract fixture definition. You can reuse fixture definitions safely.\n * \n * @prop friction The friction coefficient, usually in the range [0,1]\n * @prop restitution The restitution (elasticity) usually in the range [0,1]\n * @prop density The density, usually in kg/m^2\n * @prop isSensor A sensor shape collects contact information but never\n *       generates a collision response\n * @prop userData\n * @prop filterGroupIndex Zero, positive or negative collision group. Fixtures with same positive groupIndex always collide and fixtures with same\n * negative groupIndex never collide.\n * @prop filterCategoryBits Collision category bit or bits that this fixture belongs\n *       to. If groupIndex is zero or not matching, then at least one bit in this fixture\n * categoryBits should match other fixture maskBits and vice versa.\n * @prop filterMaskBits Collision category bit or bits that this fixture accept for\n *       collision.\n */\nvar FixtureDef = {\n  userData : null,\n  friction : 0.2,\n  restitution : 0.0,\n  density : 0.0,\n  isSensor : false,\n\n  filterGroupIndex : 0,\n  filterCategoryBits : 0x0001,\n  filterMaskBits : 0xFFFF\n};\n\n/**\n * This proxy is used internally to connect shape children to the broad-phase.\n */\nfunction FixtureProxy(fixture, childIndex) {\n  this.aabb = new AABB();\n  this.fixture = fixture;\n  this.childIndex = childIndex;\n  this.proxyId;\n};\n\n/**\n * A fixture is used to attach a shape to a body for collision detection. A\n * fixture inherits its transform from its parent. Fixtures hold additional\n * non-geometric data such as friction, collision filters, etc. Fixtures are\n * created via Body.createFixture.\n * \n * @param {Body} body\n * @param {Shape|FixtureDef} shape Shape of fixture definition.\n * @param {FixtureDef|number} def Fixture definition or number.\n */\nfunction Fixture(body, shape, def) {\n  if (shape.shape) {\n    def = shape;\n    shape = shape.shape;\n\n  } else if (typeof def === 'number') {\n    def = {density : def};\n  }\n\n  def = options(def, FixtureDef);\n\n  this.m_body = body;\n\n  this.m_friction = def.friction;\n  this.m_restitution = def.restitution;\n  this.m_density = def.density;\n  this.m_isSensor = def.isSensor;\n\n  this.m_filterGroupIndex = def.filterGroupIndex;\n  this.m_filterCategoryBits = def.filterCategoryBits;\n  this.m_filterMaskBits = def.filterMaskBits;\n\n  // TODO validate shape\n  this.m_shape = shape; //.clone();\n\n  this.m_next = null;\n\n  this.m_proxies = [];\n  this.m_proxyCount = 0;\n\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n\n  this.m_userData = def.userData;\n};\n\n/**\n * Re-setup fixture.\n * @private\n */\nFixture.prototype._reset = function() {\n  var body = this.getBody();\n  var broadPhase = body.m_world.m_broadPhase;\n  this.destroyProxies(broadPhase);\n  if (this.m_shape._reset) {\n    this.m_shape._reset();\n  }\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n  this.createProxies(broadPhase, body.m_xf);\n  body.resetMassData();\n};\n\nFixture.prototype._serialize = function() {\n  return {\n    friction: this.m_friction,\n    restitution: this.m_restitution,\n    density: this.m_density,\n    isSensor: this.m_isSensor,\n\n    filterGroupIndex: this.m_filterGroupIndex,\n    filterCategoryBits: this.m_filterCategoryBits,\n    filterMaskBits: this.m_filterMaskBits,\n\n    shape: this.m_shape,\n  };\n};\n\nFixture._deserialize = function(data, body, restore) {\n  var shape = restore(Shape, data.shape);\n  var fixture = shape && new Fixture(body, shape, data);\n  return fixture;\n};\n\n/**\n * Get the type of the child shape. You can use this to down cast to the\n * concrete shape.\n */\nFixture.prototype.getType = function() {\n  return this.m_shape.getType();\n}\n\n/**\n * Get the child shape. You can modify the child shape, however you should not\n * change the number of vertices because this will crash some collision caching\n * mechanisms. Manipulating the shape may lead to non-physical behavior.\n */\nFixture.prototype.getShape = function() {\n  return this.m_shape;\n}\n/**\n * A sensor shape collects contact information but never generates a collision\n * response.\n */\nFixture.prototype.isSensor = function() {\n  return this.m_isSensor;\n}\n\n/**\n * Set if this fixture is a sensor.\n */\nFixture.prototype.setSensor = function(sensor) {\n  if (sensor != this.m_isSensor) {\n    this.m_body.setAwake(true);\n    this.m_isSensor = sensor;\n  }\n}\n\n/**\n * Get the contact filtering data.\n */\n// Fixture.prototype.getFilterData = function() {\n//   return this.m_filter;\n// }\n\n/**\n * Get the user data that was assigned in the fixture definition. Use this to\n * store your application specific data.\n */\nFixture.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\n/**\n * Set the user data. Use this to store your application specific data.\n */\nFixture.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get the parent body of this fixture. This is null if the fixture is not\n * attached.\n */\nFixture.prototype.getBody = function() {\n  return this.m_body;\n}\n\n/**\n * Get the next fixture in the parent body's fixture list.\n */\nFixture.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get the density of this fixture.\n */\nFixture.prototype.getDensity = function() {\n  return this.m_density;\n}\n\n/**\n * Set the density of this fixture. This will _not_ automatically adjust the\n * mass of the body. You must call Body.resetMassData to update the body's mass.\n */\nFixture.prototype.setDensity = function(density) {\n  _ASSERT && common.assert(Math.isFinite(density) && density >= 0.0);\n  this.m_density = density;\n}\n\n/**\n * Get the coefficient of friction, usually in the range [0,1].\n */\nFixture.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Set the coefficient of friction. This will not change the friction of\n * existing contacts.\n */\nFixture.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the coefficient of restitution.\n */\nFixture.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Set the coefficient of restitution. This will not change the restitution of\n * existing contacts.\n */\nFixture.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Test a point in world coordinates for containment in this fixture.\n */\nFixture.prototype.testPoint = function(p) {\n  return this.m_shape.testPoint(this.m_body.getTransform(), p);\n}\n\n/**\n * Cast a ray against this shape.\n */\nFixture.prototype.rayCast = function(output, input, childIndex) {\n  return this.m_shape.rayCast(output, input, this.m_body.getTransform(), childIndex);\n}\n\n/**\n * Get the mass data for this fixture. The mass data is based on the density and\n * the shape. The rotational inertia is about the shape's origin. This operation\n * may be expensive.\n */\nFixture.prototype.getMassData = function(massData) {\n  this.m_shape.computeMass(massData, this.m_density);\n}\n\n/**\n * Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a\n * more accurate AABB, compute it using the shape and the body transform.\n */\nFixture.prototype.getAABB = function(childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_proxyCount);\n  return this.m_proxies[childIndex].aabb;\n}\n\n/**\n * These support body activation/deactivation.\n */\nFixture.prototype.createProxies = function(broadPhase, xf) {\n  _ASSERT && common.assert(this.m_proxyCount == 0);\n\n  // Create proxies in the broad-phase.\n  this.m_proxyCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    this.m_shape.computeAABB(proxy.aabb, xf, i);\n    proxy.proxyId = broadPhase.createProxy(proxy.aabb, proxy);\n  }\n}\n\nFixture.prototype.destroyProxies = function(broadPhase) {\n  // Destroy proxies in the broad-phase.\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    broadPhase.destroyProxy(proxy.proxyId);\n    proxy.proxyId = null;\n  }\n\n  this.m_proxyCount = 0;\n}\n\n/**\n * Updates this fixture proxy in broad-phase (with combined AABB of current and\n * next transformation).\n */\nFixture.prototype.synchronize = function(broadPhase, xf1, xf2) {\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    // Compute an AABB that covers the swept shape (may miss some rotation\n    // effect).\n    var aabb1 = new AABB();\n    var aabb2 = new AABB();\n    this.m_shape.computeAABB(aabb1, xf1, proxy.childIndex);\n    this.m_shape.computeAABB(aabb2, xf2, proxy.childIndex);\n\n    proxy.aabb.combine(aabb1, aabb2);\n\n    var displacement = Vec2.sub(xf2.p, xf1.p);\n\n    broadPhase.moveProxy(proxy.proxyId, proxy.aabb, displacement);\n  }\n}\n\n/**\n * Set the contact filtering data. This will not update contacts until the next\n * time step when either parent body is active and awake. This automatically\n * calls refilter.\n */\nFixture.prototype.setFilterData = function(filter) {\n  this.m_filterGroupIndex = filter.groupIndex;\n  this.m_filterCategoryBits = filter.categoryBits;\n  this.m_filterMaskBits = filter.maskBits;\n  this.refilter();\n}\n\nFixture.prototype.getFilterGroupIndex = function() {\n  return this.m_filterGroupIndex;\n}\n\nFixture.prototype.getFilterCategoryBits = function() {\n  return this.m_filterCategoryBits;\n}\n\nFixture.prototype.getFilterMaskBits = function() {\n  return this.m_filterMaskBits;\n}\n\n/**\n * Call this if you want to establish collision that was previously disabled by\n * ContactFilter.\n */\nFixture.prototype.refilter = function() {\n  if (this.m_body == null) {\n    return;\n  }\n\n  // Flag associated contacts for filtering.\n  var edge = this.m_body.getContactList();\n  while (edge) {\n    var contact = edge.contact;\n    var fixtureA = contact.getFixtureA();\n    var fixtureB = contact.getFixtureB();\n    if (fixtureA == this || fixtureB == this) {\n      contact.flagForFiltering();\n    }\n\n    edge = edge.next;\n  }\n\n  var world = this.m_body.getWorld();\n\n  if (world == null) {\n    return;\n  }\n\n  // Touch each proxy so that new pairs may be created\n  var broadPhase = world.m_broadPhase;\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    broadPhase.touchProxy(this.m_proxies[i].proxyId);\n  }\n}\n\n/**\n * Implement this method to provide collision filtering, if you want finer\n * control over contact creation.\n * \n * Return true if contact calculations should be performed between these two\n * fixtures.\n * \n * Warning: for performance reasons this is only called when the AABBs begin to\n * overlap.\n * \n * @param {Fixture} fixtureA\n * @param {Fixture} fixtureB\n */\nFixture.prototype.shouldCollide = function(that) {\n\n  if (that.m_filterGroupIndex == this.m_filterGroupIndex && that.m_filterGroupIndex != 0) {\n    return that.m_filterGroupIndex > 0;\n  }\n\n  var collide = (that.m_filterMaskBits & this.m_filterCategoryBits) != 0\n      && (that.m_filterCategoryBits & this.m_filterMaskBits) != 0;\n  return collide;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = TimeOfImpact;\nmodule.exports.Input = TOIInput;\nmodule.exports.Output = TOIOutput;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\nvar Timer = require('../util/Timer');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Distance = require('./Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\n/**\n * Input parameters for TimeOfImpact.\n * \n * @prop {DistanceProxy} proxyA\n * @prop {DistanceProxy} proxyB\n * @prop {Sweep} sweepA\n * @prop {Sweep} sweepB\n * @prop tMax defines sweep interval [0, tMax]\n */\nfunction TOIInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.sweepA = new Sweep();\n  this.sweepB = new Sweep();\n  this.tMax;\n};\n\n// TOIOutput State\nTOIOutput.e_unknown = 0;\nTOIOutput.e_failed = 1;\nTOIOutput.e_overlapped = 2;\nTOIOutput.e_touching = 3;\nTOIOutput.e_separated = 4;\n\n/**\n * Output parameters for TimeOfImpact.\n * \n * @prop state\n * @prop t\n */\nfunction TOIOutput() {\n  this.state;\n  this.t;\n};\n\nstats.toiTime = 0;\nstats.toiMaxTime = 0;\nstats.toiCalls = 0;\nstats.toiIters = 0;\nstats.toiMaxIters = 0;\nstats.toiRootIters = 0;\nstats.toiMaxRootIters = 0;\n\n/**\n * Compute the upper bound on time before two shapes penetrate. Time is\n * represented as a fraction between [0,tMax]. This uses a swept separating axis\n * and may miss some intermediate, non-tunneling collision. If you change the\n * time interval, you should call this function again.\n * \n * Note: use Distance to compute the contact point and normal at the time of\n * impact.\n * \n * CCD via the local separating axis method. This seeks progression by computing\n * the largest time at which separation is maintained.\n */\nfunction TimeOfImpact(output, input) {\n  var timer = Timer.now();\n\n  ++stats.toiCalls;\n\n  output.state = TOIOutput.e_unknown;\n  output.t = input.tMax;\n\n  var proxyA = input.proxyA; // DistanceProxy\n  var proxyB = input.proxyB; // DistanceProxy\n\n  var sweepA = input.sweepA; // Sweep\n  var sweepB = input.sweepB; // Sweep\n\n  // Large rotations can make the root finder fail, so we normalize the\n  // sweep angles.\n  sweepA.normalize();\n  sweepB.normalize();\n\n  var tMax = input.tMax;\n\n  var totalRadius = proxyA.m_radius + proxyB.m_radius;\n  var target = Math.max(Settings.linearSlop, totalRadius - 3.0 * Settings.linearSlop);\n  var tolerance = 0.25 * Settings.linearSlop;\n  _ASSERT && common.assert(target > tolerance);\n\n  var t1 = 0.0;\n  var k_maxIterations = Settings.maxTOIIterations;\n  var iter = 0;\n\n  // Prepare input for distance query.\n  var cache = new SimplexCache();\n\n  var distanceInput = new DistanceInput();\n  distanceInput.proxyA = input.proxyA;\n  distanceInput.proxyB = input.proxyB;\n  distanceInput.useRadii = false;\n\n  // The outer loop progressively attempts to compute new separating axes.\n  // This loop terminates when an axis is repeated (no progress is made).\n  for (;;) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    sweepA.getTransform(xfA, t1);\n    sweepB.getTransform(xfB, t1);\n\n    // Get the distance between shapes. We can also use the results\n    // to get a separating axis.\n    distanceInput.transformA = xfA;\n    distanceInput.transformB = xfB;\n    var distanceOutput = new DistanceOutput();\n    Distance(distanceOutput, cache, distanceInput);\n\n    // If the shapes are overlapped, we give up on continuous collision.\n    if (distanceOutput.distance <= 0.0) {\n      // Failure!\n      output.state = TOIOutput.e_overlapped;\n      output.t = 0.0;\n      break;\n    }\n\n    if (distanceOutput.distance < target + tolerance) {\n      // Victory!\n      output.state = TOIOutput.e_touching;\n      output.t = t1;\n      break;\n    }\n\n    // Initialize the separating axis.\n    var fcn = new SeparationFunction();\n    fcn.initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\n\n    // if (false) {\n    //   // Dump the curve seen by the root finder\n    //   var N = 100;\n    //   var dx = 1.0 / N;\n    //   var xs = []; // [ N + 1 ];\n    //   var fs = []; // [ N + 1 ];\n    //   var x = 0.0;\n    //   for (var i = 0; i <= N; ++i) {\n    //     sweepA.getTransform(xfA, x);\n    //     sweepB.getTransform(xfB, x);\n    //     var f = fcn.evaluate(xfA, xfB) - target;\n    //     printf(\"%g %g\\n\", x, f);\n    //     xs[i] = x;\n    //     fs[i] = f;\n    //     x += dx;\n    //   }\n    // }\n\n    // Compute the TOI on the separating axis. We do this by successively\n    // resolving the deepest point. This loop is bounded by the number of\n    // vertices.\n    var done = false;\n    var t2 = tMax;\n    var pushBackIter = 0;\n    for (;;) {\n      // Find the deepest point at t2. Store the witness point indices.\n      var s2 = fcn.findMinSeparation(t2);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Is the final configuration separated?\n      if (s2 > target + tolerance) {\n        // Victory!\n        output.state = TOIOutput.e_separated;\n        output.t = tMax;\n        done = true;\n        break;\n      }\n\n      // Has the separation reached tolerance?\n      if (s2 > target - tolerance) {\n        // Advance the sweeps\n        t1 = t2;\n        break;\n      }\n\n      // Compute the initial separation of the witness points.\n      var s1 = fcn.evaluate(t1);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Check for initial overlap. This might happen if the root finder\n      // runs out of iterations.\n      if (s1 < target - tolerance) {\n        output.state = TOIOutput.e_failed;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Check for touching\n      if (s1 <= target + tolerance) {\n        // Victory! t1 should hold the TOI (could be 0.0).\n        output.state = TOIOutput.e_touching;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Compute 1D root of: f(x) - target = 0\n      var rootIterCount = 0;\n      var a1 = t1, a2 = t2;\n      for (;;) {\n        // Use a mix of the secant rule and bisection.\n        var t;\n        if (rootIterCount & 1) {\n          // Secant rule to improve convergence.\n          t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\n        } else {\n          // Bisection to guarantee progress.\n          t = 0.5 * (a1 + a2);\n        }\n\n        ++rootIterCount;\n        ++stats.toiRootIters;\n\n        var s = fcn.evaluate(t);\n        var indexA = fcn.indexA;\n        var indexB = fcn.indexB;\n\n        if (Math.abs(s - target) < tolerance) {\n          // t2 holds a tentative value for t1\n          t2 = t;\n          break;\n        }\n\n        // Ensure we continue to bracket the root.\n        if (s > target) {\n          a1 = t;\n          s1 = s;\n        } else {\n          a2 = t;\n          s2 = s;\n        }\n\n        if (rootIterCount == 50) {\n          break;\n        }\n      }\n\n      stats.toiMaxRootIters = Math.max(stats.toiMaxRootIters, rootIterCount);\n\n      ++pushBackIter;\n\n      if (pushBackIter == Settings.maxPolygonVertices) {\n        break;\n      }\n    }\n\n    ++iter;\n    ++stats.toiIters;\n\n    if (done) {\n      break;\n    }\n\n    if (iter == k_maxIterations) {\n      // Root finder got stuck. Semi-victory.\n      output.state = TOIOutput.e_failed;\n      output.t = t1;\n      break;\n    }\n  }\n\n  stats.toiMaxIters = Math.max(stats.toiMaxIters, iter);\n\n  var time = Timer.diff(timer);\n  stats.toiMaxTime = Math.max(stats.toiMaxTime, time);\n  stats.toiTime += time;\n}\n\n// SeparationFunction Type\nvar e_points = 1;\nvar e_faceA = 2;\nvar e_faceB = 3;\n\nfunction SeparationFunction() {\n  this.m_proxyA = new DistanceProxy();\n  this.m_proxyB = new DistanceProxy();\n  this.m_sweepA;// Sweep\n  this.m_sweepB;// Sweep\n  this.indexA;// integer\n  this.indexB;// integer\n  this.m_type;\n  this.m_localPoint = Vec2.zero();\n  this.m_axis = Vec2.zero();\n};\n\n// TODO_ERIN might not need to return the separation\n\n/**\n * @param {SimplexCache} cache\n * @param {DistanceProxy} proxyA\n * @param {Sweep} sweepA\n * @param {DistanceProxy} proxyB\n * @param {Sweep} sweepB\n * @param {float} t1\n */\nSeparationFunction.prototype.initialize = function(cache, proxyA, sweepA, proxyB, sweepB, t1) {\n  this.m_proxyA = proxyA;\n  this.m_proxyB = proxyB;\n  var count = cache.count;\n  _ASSERT && common.assert(0 < count && count < 3);\n\n  this.m_sweepA = sweepA;\n  this.m_sweepB = sweepB;\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t1);\n  this.m_sweepB.getTransform(xfB, t1);\n\n  if (count == 1) {\n    this.m_type = e_points;\n    var localPointA = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n    this.m_axis.setCombine(1, pointB, -1, pointA);\n    var s = this.m_axis.normalize();\n    return s;\n\n  } else if (cache.indexA[0] == cache.indexA[1]) {\n    // Two points on B and one on A.\n    this.m_type = e_faceB;\n    var localPointB1 = proxyB.getVertex(cache.indexB[0]);\n    var localPointB2 = proxyB.getVertex(cache.indexB[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointB2, localPointB1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointB1, localPointB2);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    var localPointA = proxyA.getVertex(cache.indexA[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var s = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n\n  } else {\n    // Two points on A and one or two points on B.\n    this.m_type = e_faceA;\n    var localPointA1 = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointA2 = this.m_proxyA.getVertex(cache.indexA[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointA2, localPointA1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointA1, localPointA2);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var s = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n  }\n};\n\nSeparationFunction.prototype.compute = function(find, t) {\n  // It was findMinSeparation and evaluate\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t);\n  this.m_sweepB.getTransform(xfB, t);\n\n  switch (this.m_type) {\n  case e_points: {\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, this.m_axis);\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(this.m_axis));\n\n      this.indexA = this.m_proxyA.getSupport(axisA);\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, this.m_axis) - Vec2.dot(pointA, this.m_axis);\n    return sep;\n  }\n\n  case e_faceA: {\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    if (find) {\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(normal));\n\n      this.indexA = -1;\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    return sep;\n  }\n\n  case e_faceB: {\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, Vec2.neg(normal));\n\n      this.indexB = -1;\n      this.indexA = this.m_proxyA.getSupport(axisA);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var sep = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    return sep;\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    if (find) {\n      this.indexA = -1;\n      this.indexB = -1;\n    }\n    return 0.0;\n  }\n};\n\nSeparationFunction.prototype.findMinSeparation = function(t) {\n  return this.compute(true, t);\n};\n\nSeparationFunction.prototype.evaluate = function(t) {\n  return this.compute(false, t);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RevoluteJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRevoluteJoint.TYPE = 'revolute-joint';\nJoint.TYPES[RevoluteJoint.TYPE] = RevoluteJoint;\n\nRevoluteJoint._super = Joint;\nRevoluteJoint.prototype = create(RevoluteJoint._super.prototype);\n\n/**\n * @typedef {Object} RevoluteJointDef\n *\n * Revolute joint definition. This requires defining an anchor point where the\n * bodies are joined. The definition uses local anchor points so that the\n * initial configuration can violate the constraint slightly. You also need to\n * specify the initial relative angle for joint limits. This helps when saving\n * and loading a game.\n *\n * The local anchor points are measured from the body's origin rather than the\n * center of mass because: 1. you might not know where the center of mass will\n * be. 2. if you add/remove shapes from a body and recompute the mass, the\n * joints will be broken.\n *\n * @prop {bool} enableLimit A flag to enable joint limits.\n * @prop {bool} enableMotor A flag to enable the joint motor.\n * @prop {float} lowerAngle The lower angle for the joint limit (radians).\n * @prop {float} upperAngle The upper angle for the joint limit (radians).\n * @prop {float} motorSpeed The desired motor speed. Usually in radians per\n *       second.\n * @prop {float} maxMotorTorque The maximum motor torque used to achieve the\n *       desired motor speed. Usually in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\n\nvar DEFAULTS = {\n  lowerAngle : 0.0,\n  upperAngle : 0.0,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  enableLimit : false,\n  enableMotor : false\n};\n\n/**\n * A revolute joint constrains two bodies to share a common point while they are\n * free to rotate about the point. The relative rotation about the shared point\n * is the joint angle. You can limit the relative rotation with a joint limit\n * that specifies a lower and upper angle. You can use a motor to drive the\n * relative rotation about the shared point. A maximum motor torque is provided\n * so that infinite forces are not generated.\n *\n * @param {RevoluteJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RevoluteJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RevoluteJoint)) {\n    return new RevoluteJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RevoluteJoint.TYPE;\n\n  this.m_localAnchorA =  anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB =  anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerAngle = def.lowerAngle;\n  this.m_upperAngle = def.upperAngle;\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  // effective mass for point-to-point constraint.\n  this.m_mass = new Mat33();\n  // effective mass for motor/limit angular constraint.\n  this.m_motorMass; // float\n  this.m_limitState = inactiveLimit;\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Motor constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nRevoluteJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    lowerAngle: this.m_lowerAngle,\n    upperAngle: this.m_upperAngle,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nRevoluteJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RevoluteJoint(data);\n  return joint;\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Get the reference angle.\n */\nRevoluteJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle in radians.\n */\nRevoluteJoint.prototype.getJointAngle = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle speed in radians per second.\n */\nRevoluteJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_angularVelocity - bA.m_angularVelocity;\n}\n\n/**\n * Is the joint motor enabled?\n */\nRevoluteJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nRevoluteJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Get the current motor torque given the inverse time step. Unit is N*m.\n */\nRevoluteJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set the motor speed in radians per second.\n */\nRevoluteJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed in radians per second.\n */\nRevoluteJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set the maximum motor torque, usually in N-m.\n */\nRevoluteJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\n/**\n * Is the joint limit enabled?\n */\nRevoluteJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nRevoluteJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit in radians.\n */\nRevoluteJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerAngle;\n}\n\n/**\n * Get the upper joint limit in radians.\n */\nRevoluteJoint.prototype.getUpperLimit = function() {\n  return this.m_upperAngle;\n}\n\n/**\n * Set the joint limits in radians.\n */\nRevoluteJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n\n  if (lower != this.m_lowerAngle || upper != this.m_upperAngle) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_impulse.z = 0.0;\n    this.m_lowerAngle = lower;\n    this.m_upperAngle = upper;\n  }\n}\n\nRevoluteJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRevoluteJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\n/**\n * Get the reaction force given the inverse time step. Unit is N.\n */\nRevoluteJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n}\n\n/**\n * Get the reaction torque due to the joint limit given the inverse time step.\n * Unit is N*m.\n */\nRevoluteJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n}\n\nRevoluteJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y\n      * this.m_rB.y * iB;\n  this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y\n      * this.m_rB.x * iB;\n  this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  this.m_mass.ex.y = this.m_mass.ey.x;\n  this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x\n      * this.m_rB.x * iB;\n  this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  this.m_mass.ex.z = this.m_mass.ez.x;\n  this.m_mass.ey.z = this.m_mass.ez.y;\n  this.m_mass.ez.z = iA + iB;\n\n  this.m_motorMass = iA + iB;\n  if (this.m_motorMass > 0.0) {\n    this.m_motorMass = 1.0 / this.m_motorMass;\n  }\n\n  if (this.m_enableMotor == false || fixedRotation) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (this.m_enableLimit && fixedRotation == false) {\n    var jointAngle = aB - aA - this.m_referenceAngle; // float\n\n    if (Math.abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * Settings.angularSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointAngle <= this.m_lowerAngle) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atLowerLimit;\n\n    } else if (jointAngle >= this.m_upperAngle) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atUpperLimit;\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  // Solve motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits\n      && fixedRotation == false) {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var impulse = Vec3.neg(this.m_mass.solve33(Cdot)); // Vec3\n\n    if (this.m_limitState == equalLimits) {\n      this.m_impulse.add(impulse);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse < 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse > 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n\n  } else {\n    // Solve point-to-point constraint\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var impulse = this.m_mass.solve22(Vec2.neg(Cdot)); // Vec2\n\n    this.m_impulse.x += impulse.x;\n    this.m_impulse.y += impulse.y;\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var angularError = 0.0; // float\n  var positionError = 0.0; // float\n\n  var fixedRotation = (this.m_invIA + this.m_invIB == 0.0); // bool\n\n  // Solve angular limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var angle = aB - aA - this.m_referenceAngle; // float\n    var limitImpulse = 0.0; // float\n\n    if (this.m_limitState == equalLimits) {\n      // Prevent large angular corrections\n      var C = Math.clamp(angle - this.m_lowerAngle,\n          -Settings.maxAngularCorrection, Settings.maxAngularCorrection); // float\n      limitImpulse = -this.m_motorMass * C;\n      angularError = Math.abs(C);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var C = angle - this.m_lowerAngle; // float\n      angularError = -C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C + Settings.angularSlop, -Settings.maxAngularCorrection,\n          0.0);\n      limitImpulse = -this.m_motorMass * C;\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var C = angle - this.m_upperAngle; // float\n      angularError = C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C - Settings.angularSlop, 0.0,\n          Settings.maxAngularCorrection);\n      limitImpulse = -this.m_motorMass * C;\n    }\n\n    aA -= this.m_invIA * limitImpulse;\n    aB += this.m_invIB * limitImpulse;\n  }\n\n  // Solve point-to-point constraint.\n  {\n    qA.set(aA);\n    qB.set(aB);\n    var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n    var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n\n    var C = Vec2.zero();\n    C.addCombine(1, cB, 1, rB);\n    C.subCombine(1, cA, 1, rA);\n    positionError = C.length();\n\n    var mA = this.m_invMassA;\n    var mB = this.m_invMassB; // float\n    var iA = this.m_invIA;\n    var iB = this.m_invIB; // float\n\n    var K = new Mat22();\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n    var impulse = Vec2.neg(K.solve(C)); // Vec2\n\n    cA.subMul(mA, impulse);\n    aA -= iA * Vec2.cross(rA, impulse);\n\n    cB.addMul(mB, impulse);\n    aB += iB * Vec2.cross(rB, impulse);\n  }\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PrismaticJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nPrismaticJoint.TYPE = 'prismatic-joint';\n\nPrismaticJoint._super = Joint;\nPrismaticJoint.prototype = create(PrismaticJoint._super.prototype);\n\n/**\n * @typedef {Object} PrismaticJointDef\n *\n * Prismatic joint definition. This requires defining a line of motion using an\n * axis and an anchor point. The definition uses local anchor points and a local\n * axis so that the initial configuration can violate the constraint slightly.\n * The joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableLimit Enable/disable the joint limit.\n * @prop {float} lowerTranslation The lower translation limit, usually in\n *       meters.\n * @prop {float} upperTranslation The upper translation limit, usually in\n *       meters.\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorForce The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation unit axis in bodyA.\n * @prop {float} referenceAngle The constrained angle between the bodies:\n *       bodyB_angle - bodyA_angle.\n */\n\nvar DEFAULTS = {\n  enableLimit : false,\n  lowerTranslation : 0.0,\n  upperTranslation : 0.0,\n  enableMotor : false,\n  maxMotorForce : 0.0,\n  motorSpeed : 0.0\n};\n\n/**\n * A prismatic joint. This joint provides one degree of freedom: translation\n * along an axis fixed in bodyA. Relative rotation is prevented. You can use a\n * joint limit to restrict the range of motion and a joint motor to drive the\n * motion or to model joint friction.\n *\n * @param {PrismaticJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PrismaticJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof PrismaticJoint)) {\n    return new PrismaticJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PrismaticJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_localXAxisA = axis ? bodyA.getLocalVector(axis) : def.localAxisA || Vec2.neo(1.0, 0.0);\n  this.m_localXAxisA.normalize();\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerTranslation = def.lowerTranslation;\n  this.m_upperTranslation = def.upperTranslation;\n  this.m_maxMotorForce = def.maxMotorForce;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n  this.m_limitState = inactiveLimit;\n\n  this.m_axis = Vec2.zero();\n  this.m_perp = Vec2.zero();\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_axis, this.m_perp; // Vec2\n  this.m_s1, this.m_s2; // float\n  this.m_a1, this.m_a2; // float\n  this.m_K = new Mat33();\n  this.m_motorMass; // float\n\n  // Linear constraint (point-to-line)\n  // d = p2 - p1 = x2 + r2 - x1 - r1\n  // C = dot(perp, d)\n  // Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 -\n  // cross(w1, r1))\n  // = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) +\n  // dot(cross(r2, perp), v2)\n  // J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]\n  //\n  // Angular constraint\n  // C = a2 - a1 + a_initial\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  //\n  // K = J * invM * JT\n  //\n  // J = [-a -s1 a s2]\n  // [0 -1 0 1]\n  // a = perp\n  // s1 = cross(d + r1, a) = cross(p2 - x1, a)\n  // s2 = cross(r2, a) = cross(p2 - x2, a)\n\n  // Motor/Limit linear constraint\n  // C = dot(ax1, d)\n  // Cdot = = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) +\n  // dot(cross(r2, ax1), v2)\n  // J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]\n\n  // Block Solver\n  // We develop a block solver that includes the joint limit. This makes the\n  // limit stiff (inelastic) even\n  // when the mass has poor distribution (leading to large torques about the\n  // joint anchor points).\n  //\n  // The Jacobian has 3 rows:\n  // J = [-uT -s1 uT s2] // linear\n  // [0 -1 0 1] // angular\n  // [-vT -a1 vT a2] // limit\n  //\n  // u = perp\n  // v = axis\n  // s1 = cross(d + r1, u), s2 = cross(r2, u)\n  // a1 = cross(d + r1, v), a2 = cross(r2, v)\n\n  // M * (v2 - v1) = JT * df\n  // J * v2 = bias\n  //\n  // v2 = v1 + invM * JT * df\n  // J * (v1 + invM * JT * df) = bias\n  // K * df = bias - J * v1 = -Cdot\n  // K = J * invM * JT\n  // Cdot = J * v1 - bias\n  //\n  // Now solve for f2.\n  // df = f2 - f1\n  // K * (f2 - f1) = -Cdot\n  // f2 = invK * (-Cdot) + f1\n  //\n  // Clamp accumulated limit impulse.\n  // lower: f2(3) = max(f2(3), 0)\n  // upper: f2(3) = min(f2(3), 0)\n  //\n  // Solve for correct f2(1:2)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:3) * f1\n  // = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:2) * f1(1:2) + K(1:2,3) * f1(3)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3)) +\n  // K(1:2,1:2) * f1(1:2)\n  // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n  // f1(1:2)\n  //\n  // Now compute impulse to be applied:\n  // df = f2 - f1\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nPrismaticJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the reference angle.\n */\nPrismaticJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nPrismaticJoint.prototype.getJointTranslation = function() {\n  var pA = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var pB = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var d = Vec2.sub(pB, pA);\n  var axis = this.m_bodyA.getWorldVector(this.m_localXAxisA);\n\n  var translation = Vec2.dot(d, axis);\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var rA = Rot.mulVec2(bA.m_xf.q, Vec2.sub(this.m_localAnchorA, bA.m_sweep.localCenter)); // Vec2\n  var rB = Rot.mulVec2(bB.m_xf.q, Vec2.sub(this.m_localAnchorB, bB.m_sweep.localCenter)); // Vec2\n  var p1 = Vec2.add(bA.m_sweep.c, rA); // Vec2\n  var p2 = Vec2.add(bB.m_sweep.c, rB); // Vec2\n  var d = Vec2.sub(p2, p1); // Vec2\n  var axis = Rot.mulVec2(bA.m_xf.q, this.m_localXAxisA); // Vec2\n\n  var vA = bA.m_linearVelocity; // Vec2\n  var vB = bB.m_linearVelocity; // Vec2\n  var wA = bA.m_angularVelocity; // float\n  var wB = bB.m_angularVelocity; // float\n\n  var speed = Vec2.dot(d, Vec2.cross(wA, axis))\n      + Vec2.dot(axis, Vec2.sub(Vec2.addCross(vB, wB, rB), Vec2.addCross(vA, wA, rA))); // float\n  return speed;\n}\n\n/**\n * Is the joint limit enabled?\n */\nPrismaticJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nPrismaticJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerTranslation;\n}\n\n/**\n * Get the upper joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getUpperLimit = function() {\n  return this.m_upperTranslation;\n}\n\n/**\n * Set the joint limits, usually in meters.\n */\nPrismaticJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n  if (lower != this.m_lowerTranslation || upper != this.m_upperTranslation) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_lowerTranslation = lower;\n    this.m_upperTranslation = upper;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Is the joint motor enabled?\n */\nPrismaticJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nPrismaticJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Set the maximum motor force, usually in N.\n */\nPrismaticJoint.prototype.setMaxMotorForce = function(force) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorForce = force;\n}\n\n/**\n * Get the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Get the current motor force given the inverse time step, usually in N.\n */\nPrismaticJoint.prototype.getMotorForce = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nPrismaticJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPrismaticJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPrismaticJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse + this.m_impulse.z, this.m_axis).mul(inv_dt);\n}\n\nPrismaticJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.y;\n}\n\nPrismaticJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  // Compute motor Jacobian and effective mass.\n  {\n    this.m_axis = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_a1 = Vec2.cross(Vec2.add(d, rA), this.m_axis);\n    this.m_a2 = Vec2.cross(rB, this.m_axis);\n\n    this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2\n        * this.m_a2;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  }\n\n  // Prismatic constraint.\n  {\n    this.m_perp = Rot.mulVec2(qA, this.m_localYAxisA);\n\n    this.m_s1 = Vec2.cross(Vec2.add(d, rA), this.m_perp);\n    this.m_s2 = Vec2.cross(rB, this.m_perp);\n\n    var s1test = Vec2.cross(rA, this.m_perp);\n\n    var k11 = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\n    var k12 = iA * this.m_s1 + iB * this.m_s2;\n    var k13 = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\n    var k22 = iA + iB;\n    if (k22 == 0.0) {\n      // For bodies with fixed rotation.\n      k22 = 1.0;\n    }\n    var k23 = iA * this.m_a1 + iB * this.m_a2;\n    var k33 = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n\n    this.m_K.ex.set(k11, k12, k13);\n    this.m_K.ey.set(k12, k22, k23);\n    this.m_K.ez.set(k13, k23, k33);\n  }\n\n  // Compute motor and limit terms.\n  if (this.m_enableLimit) {\n\n    var jointTranslation = Vec2.dot(this.m_axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * Settings.linearSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointTranslation <= this.m_lowerTranslation) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_limitState = atLowerLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else if (jointTranslation >= this.m_upperTranslation) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_limitState = atUpperLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n    this.m_impulse.z = 0.0;\n  }\n\n  if (this.m_enableMotor == false) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse\n        + this.m_impulse.z, this.m_axis);\n    var LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\n    var LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Solve linear motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits) {\n    var Cdot = Vec2.dot(this.m_axis, Vec2.sub(vB, vA)) + this.m_a2 * wB\n        - this.m_a1 * wA;\n    var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n    var oldImpulse = this.m_motorImpulse;\n    var maxImpulse = step.dt * this.m_maxMotorForce;\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    var P = Vec2.mul(impulse, this.m_axis);\n    var LA = impulse * this.m_a1;\n    var LB = impulse * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  var Cdot1 = Vec2.zero();\n  Cdot1.x += Vec2.dot(this.m_perp, vB) + this.m_s2 * wB;\n  Cdot1.x -= Vec2.dot(this.m_perp, vA) + this.m_s1 * wA;\n  Cdot1.y = wB - wA;\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit) {\n    // Solve prismatic and limit constraint in block form.\n    var Cdot2 = 0;\n    Cdot2 += Vec2.dot(this.m_axis, vB) + this.m_a2 * wB;\n    Cdot2 -= Vec2.dot(this.m_axis, vA) + this.m_a1 * wA;\n\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var f1 = Vec3(this.m_impulse);\n    var df = this.m_K.solve33(Vec3.neg(Cdot)); // Vec3\n    this.m_impulse.add(df);\n\n    if (this.m_limitState == atLowerLimit) {\n      this.m_impulse.z = Math.max(this.m_impulse.z, 0.0);\n    } else if (this.m_limitState == atUpperLimit) {\n      this.m_impulse.z = Math.min(this.m_impulse.z, 0.0);\n    }\n\n    // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n    // f1(1:2)\n    var b = Vec2.combine(-1, Cdot1, -(this.m_impulse.z - f1.z), Vec2.neo(this.m_K.ez.x, this.m_K.ez.y)); // Vec2\n    var f2r = Vec2.add(this.m_K.solve22(b), Vec2.neo(f1.x, f1.y)); // Vec2\n    this.m_impulse.x = f2r.x;\n    this.m_impulse.y = f2r.y;\n\n    df = Vec3.sub(this.m_impulse, f1);\n\n    var P = Vec2.combine(df.x, this.m_perp, df.z, this.m_axis); // Vec2\n    var LA = df.x * this.m_s1 + df.y + df.z * this.m_a1; // float\n    var LB = df.x * this.m_s2 + df.y + df.z * this.m_a2; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    // Limit is inactive, just solve the prismatic constraint in block form.\n    var df = this.m_K.solve22(Vec2.neg(Cdot1)); // Vec2\n    this.m_impulse.x += df.x;\n    this.m_impulse.y += df.y;\n\n    var P = Vec2.mul(df.x, this.m_perp); // Vec2\n    var LA = df.x * this.m_s1 + df.y; // float\n    var LB = df.x * this.m_s2 + df.y; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Compute fresh Jacobians\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n  var d = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA)); // Vec2\n\n  var axis = Rot.mulVec2(qA, this.m_localXAxisA); // Vec2\n  var a1 = Vec2.cross(Vec2.add(d, rA), axis); // float\n  var a2 = Vec2.cross(rB, axis); // float\n  var perp = Rot.mulVec2(qA, this.m_localYAxisA); // Vec2\n\n  var s1 = Vec2.cross(Vec2.add(d, rA), perp); // float\n  var s2 = Vec2.cross(rB, perp); // float\n\n  var impulse = Vec3();\n  var C1 = Vec2.zero(); // Vec2\n  C1.x = Vec2.dot(perp, d);\n  C1.y = aB - aA - this.m_referenceAngle;\n\n  var linearError = Math.abs(C1.x); // float\n  var angularError = Math.abs(C1.y); // float\n\n  var linearSlop = Settings.linearSlop;\n  var maxLinearCorrection = Settings.maxLinearCorrection;\n\n  var active = false; // bool\n  var C2 = 0.0; // float\n  if (this.m_enableLimit) {\n\n    var translation = Vec2.dot(axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * linearSlop) {\n      // Prevent large angular corrections\n      C2 = Math.clamp(translation, -maxLinearCorrection, maxLinearCorrection);\n      linearError = Math.max(linearError, Math.abs(translation));\n      active = true;\n\n    } else if (translation <= this.m_lowerTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_lowerTranslation + linearSlop,\n          -maxLinearCorrection, 0.0);\n      linearError = Math\n          .max(linearError, this.m_lowerTranslation - translation);\n      active = true;\n\n    } else if (translation >= this.m_upperTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_upperTranslation - linearSlop, 0.0,\n          maxLinearCorrection);\n      linearError = Math\n          .max(linearError, translation - this.m_upperTranslation);\n      active = true;\n    }\n  }\n\n  if (active) {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k13 = iA * s1 * a1 + iB * s2 * a2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      // For fixed rotation\n      k22 = 1.0;\n    }\n    var k23 = iA * a1 + iB * a2; // float\n    var k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2; // float\n\n    var K = new Mat33()\n    K.ex.set(k11, k12, k13);\n    K.ey.set(k12, k22, k23);\n    K.ez.set(k13, k23, k33);\n\n    var C = Vec3();\n    C.x = C1.x;\n    C.y = C1.y;\n    C.z = C2;\n\n    impulse = K.solve33(Vec3.neg(C));\n  } else {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      k22 = 1.0;\n    }\n\n    var K = new Mat22();\n    K.ex.set(k11, k12);\n    K.ey.set(k12, k22);\n\n    var impulse1 = K.solve(Vec2.neg(C1)); // Vec2\n    impulse.x = impulse1.x;\n    impulse.y = impulse1.y;\n    impulse.z = 0.0;\n  }\n\n  var P = Vec2.combine(impulse.x, perp, impulse.z, axis); // Vec2\n  var LA = impulse.x * s1 + impulse.y + impulse.z * a1; // float\n  var LB = impulse.x * s2 + impulse.y + impulse.z * a2; // float\n\n  cA.subMul(mA, P);\n  aA -= iA * LA;\n  cB.addMul(mB, P);\n  aB += iB * LB;\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","exports.internal = {};\n\nexports.Serializer = require('./serializer');\n\nexports.Math = require('./common/Math');\nexports.Vec2 = require('./common/Vec2');\nexports.Vec3 = require('./common/Vec3');\nexports.Mat22 = require('./common/Mat22');\nexports.Mat33 = require('./common/Mat33');\nexports.Transform = require('./common/Transform');\nexports.Rot = require('./common/Rot');\n\nexports.AABB = require('./collision/AABB');\n\nexports.Shape = require('./Shape');\nexports.Fixture = require('./Fixture');\nexports.Body = require('./Body');\nexports.Contact = require('./Contact');\nexports.Joint = require('./Joint');\nexports.World = require('./World');\n\nexports.Circle = require('./shape/CircleShape');\nexports.Edge = require('./shape/EdgeShape');\nexports.Polygon = require('./shape/PolygonShape');\nexports.Chain = require('./shape/ChainShape');\nexports.Box = require('./shape/BoxShape');\n\nrequire('./shape/CollideCircle');\nrequire('./shape/CollideEdgeCircle');\nexports.internal.CollidePolygons = require('./shape/CollidePolygon');\nrequire('./shape/CollideCirclePolygone');\nrequire('./shape/CollideEdgePolygon');\n\nexports.DistanceJoint = require('./joint/DistanceJoint');\nexports.FrictionJoint = require('./joint/FrictionJoint');\nexports.GearJoint = require('./joint/GearJoint');\nexports.MotorJoint = require('./joint/MotorJoint');\nexports.MouseJoint = require('./joint/MouseJoint');\nexports.PrismaticJoint = require('./joint/PrismaticJoint');\nexports.PulleyJoint = require('./joint/PulleyJoint');\nexports.RevoluteJoint = require('./joint/RevoluteJoint');\nexports.RopeJoint = require('./joint/RopeJoint');\nexports.WeldJoint = require('./joint/WeldJoint');\nexports.WheelJoint = require('./joint/WheelJoint');\n\nexports.internal.Sweep = require('./common/Sweep');\nexports.internal.stats = require('./common/stats');\nexports.internal.Manifold = require('./Manifold');\nexports.internal.Distance = require('./collision/Distance');\nexports.internal.TimeOfImpact = require('./collision/TimeOfImpact');\nexports.internal.DynamicTree = require('./collision/DynamicTree');\nexports.internal.Settings = require('./Settings');\n","var World = require('../World');\nvar Body = require('../Body');\nvar Joint = require('../Joint');\nvar Shape = require('../Shape');\n\nvar SID = 0;\n\nvar CLASSES = {\n  'World': World,\n  'Body': Body,\n  'Joint': Joint,\n};\n\nfunction Document(world) {\n  this.world = world;\n}\n\nDocument.prototype._serialize = function() {\n  return {\n    world: this.world,\n  };\n};\n\nDocument._deserialize = function(data, context, restore) {\n  if (!data) {\n    return new Document();\n  }\n  var doc = new Document(restore(World, data.world));\n  return doc;\n};\n\n\nexports.toJson = function(world, stringify) {\n  stringify = stringify || JSON.stringify;\n  var flat = [];\n  var doc = new Document(world);\n  var queue = [doc];\n  var map = {};\n\n  var store = function(value, cls) {\n    value.__sid = value.__sid || ++SID;\n    if (map[value.__sid]) {\n      return map[value.__sid];\n    }\n    queue.push(value);\n    var index = flat.length + queue.length;\n    var ref = {\n      'refIndex': index,\n      'refType': cls\n    };\n    return map[value.__sid] = ref;\n  };\n\n  while (queue.length) {\n    var obj = queue.shift();\n    var str = stringify(obj, function(key, value) {\n      if (typeof value !== 'object' || value === null) {\n        return value;\n      }\n      if (typeof value._serialize !== 'function') {\n        return value;\n      }\n      if (value === obj) {\n        value = value._serialize();\n      } else if (value instanceof Body) {\n        value = store(value, 'Body');\n      } else if (value instanceof Joint) {\n        value = store(value, 'Joint');\n      } else if (value instanceof World) {\n        value = store(value, 'World');\n      } else {\n        value = value._serialize();\n      }\n      return value;\n    }, '  ');\n    flat.push(str);\n  }\n\n  var result = '[' + flat.join(',') + ']';\n  return result;\n};\n\nexports.fromJson = function(string, parse) {\n  parse = parse || JSON.parse;\n  var dump = parse(string);\n  var map = {};\n  function restore(cls, ref, ctx) {\n    if (!ref.refIndex) {\n      return cls && cls._deserialize && cls._deserialize(ref, ctx, restore);\n    }\n    var index = ref.refIndex;\n    cls = CLASSES[ref.refType] || cls;\n    if (map[index]) {\n      return map[index];\n    }\n    var data = dump[index];\n    return map[index] = cls._deserialize(data, ctx, restore);\n  }\n  var doc = Document._deserialize(dump[0], null, restore);\n  return doc.world;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\nvar DynamicTree = require('./DynamicTree');\n\nmodule.exports = BroadPhase;\n\n/**\n * The broad-phase wraps and extends a dynamic-tree to keep track of moved\n * objects and query them on update.\n */\nfunction BroadPhase() {\n  this.m_tree = new DynamicTree();\n  this.m_proxyCount = 0;\n  this.m_moveBuffer = [];\n  this.queryCallback = this.queryCallback.bind(this);\n};\n\n/**\n * Get user data from a proxy. Returns null if the id is invalid.\n */\nBroadPhase.prototype.getUserData = function(proxyId) {\n  return this.m_tree.getUserData(proxyId);\n}\n\n/**\n * Test overlap of fat AABBs.\n */\nBroadPhase.prototype.testOverlap = function(proxyIdA, proxyIdB) {\n  var aabbA = this.m_tree.getFatAABB(proxyIdA);\n  var aabbB = this.m_tree.getFatAABB(proxyIdB);\n  return AABB.testOverlap(aabbA, aabbB);\n}\n\n/**\n * Get the fat AABB for a proxy.\n */\nBroadPhase.prototype.getFatAABB = function(proxyId) {\n  return this.m_tree.getFatAABB(proxyId);\n}\n\n/**\n * Get the number of proxies.\n */\nBroadPhase.prototype.getProxyCount = function() {\n  return this.m_proxyCount;\n}\n\n/**\n * Get the height of the embedded tree.\n */\nBroadPhase.prototype.getTreeHeight = function() {\n  return this.m_tree.getHeight();\n}\n\n/**\n * Get the balance (integer) of the embedded tree.\n */\nBroadPhase.prototype.getTreeBalance = function() {\n  return this.m_tree.getMaxBalance();\n}\n\n/**\n * Get the quality metric of the embedded tree.\n */\nBroadPhase.prototype.getTreeQuality = function() {\n  return this.m_tree.getAreaRatio();\n}\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n */\nBroadPhase.prototype.query = function(aabb, queryCallback) {\n  this.m_tree.query(aabb, queryCallback);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nBroadPhase.prototype.rayCast = function(input, rayCastCallback) {\n  this.m_tree.rayCast(input, rayCastCallback);\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nBroadPhase.prototype.shiftOrigin = function(newOrigin) {\n  this.m_tree.shiftOrigin(newOrigin);\n}\n\n/**\n * Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs\n * is called.\n */\nBroadPhase.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var proxyId = this.m_tree.createProxy(aabb, userData);\n  this.m_proxyCount++;\n  this.bufferMove(proxyId);\n  return proxyId;\n}\n\n/**\n * Destroy a proxy. It is up to the client to remove any pairs.\n */\nBroadPhase.prototype.destroyProxy = function(proxyId) {\n  this.unbufferMove(proxyId);\n  this.m_proxyCount--;\n  this.m_tree.destroyProxy(proxyId);\n}\n\n/**\n * Call moveProxy as many times as you like, then when you are done call\n * UpdatePairs to finalized the proxy pairs (for your time step).\n */\nBroadPhase.prototype.moveProxy = function(proxyId, aabb, displacement) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var changed = this.m_tree.moveProxy(proxyId, aabb, displacement);\n  if (changed) {\n    this.bufferMove(proxyId);\n  }\n}\n\n/**\n * Call to trigger a re-processing of it's pairs on the next call to\n * UpdatePairs.\n */\nBroadPhase.prototype.touchProxy = function(proxyId) {\n  this.bufferMove(proxyId);\n}\n\nBroadPhase.prototype.bufferMove = function(proxyId) {\n  this.m_moveBuffer.push(proxyId);\n}\n\nBroadPhase.prototype.unbufferMove = function(proxyId) {\n  for (var i = 0; i < this.m_moveBuffer.length; ++i) {\n    if (this.m_moveBuffer[i] == proxyId) {\n      this.m_moveBuffer[i] = null;\n    }\n  }\n}\n\n/**\n * @function BroadPhase~addPair\n * @param {Object} userDataA\n * @param {Object} userDataB\n */\n\n/**\n * Update the pairs. This results in pair callbacks. This can only add pairs.\n * \n * @param {BroadPhase~AddPair} addPairCallback\n */\nBroadPhase.prototype.updatePairs = function(addPairCallback) {\n  _ASSERT && common.assert(typeof addPairCallback === 'function');\n  this.m_callback = addPairCallback;\n\n  // Perform tree queries for all moving proxies.\n  while (this.m_moveBuffer.length > 0) {\n    this.m_queryProxyId = this.m_moveBuffer.pop();\n    if (this.m_queryProxyId === null) {\n      continue;\n    }\n\n    // We have to query the tree with the fat AABB so that\n    // we don't fail to create a pair that may touch later.\n    var fatAABB = this.m_tree.getFatAABB(this.m_queryProxyId);\n\n    // Query tree, create pairs and add them pair buffer.\n    this.m_tree.query(fatAABB, this.queryCallback);\n  }\n\n  // Try to keep the tree balanced.\n  // this.m_tree.rebalance(4);\n}\n\nBroadPhase.prototype.queryCallback = function(proxyId) {\n  // A proxy cannot form a pair with itself.\n  if (proxyId == this.m_queryProxyId) {\n    return true;\n  }\n\n  var proxyIdA = Math.min(proxyId, this.m_queryProxyId);\n  var proxyIdB = Math.max(proxyId, this.m_queryProxyId);\n\n  // TODO: Skip any duplicate pairs.\n\n  var userDataA = this.m_tree.getUserData(proxyIdA);\n  var userDataB = this.m_tree.getUserData(proxyIdB);\n\n  // Send the pairs back to the client.\n  this.m_callback(userDataA, userDataB);\n\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Pool;\n\nfunction Pool(opts) {\n  var _list = [];\n  var _max = opts.max || Infinity;\n\n  var _createFn = opts.create;\n  var _outFn = opts.allocate;\n  var _inFn = opts.release;\n  var _discardFn = opts.discard;\n\n  var _createCount = 0;\n  var _outCount = 0;\n  var _inCount = 0;\n  var _discardCount = 0;\n\n  this.max = function(n) {\n    if (typeof n === 'number') {\n      _max = n;\n      return this;\n    }\n    return _max;\n  };\n\n  this.size = function() {\n    return _list.length;\n  };\n\n  this.allocate = function() {\n    var item;\n    if (_list.length > 0) {\n      item = _list.shift();\n    } else {\n      _createCount++;\n      if (typeof _createFn === 'function') {\n        item = _createFn();\n      } else {\n        item = {};\n      }\n    }\n    _outCount++;\n    if (typeof _outFn === 'function') {\n      _outFn(item);\n    }\n    return item;\n  };\n\n  this.release = function(item) {\n    if (_list.length < _max) {\n      _inCount++;\n      if (typeof _inFn === 'function') {\n        _inFn(item);\n      }\n      _list.push(item);\n    } else {\n      _discardCount++;\n      if (typeof _discardFn === 'function') {\n        item = _discardFn(item);\n      }\n    }\n  };\n\n  this.toString = function() {\n    return \" +\" + _createCount + \" >\" + _outCount + \" <\" + _inCount + \" -\"\n        + _discardCount + \" =\" + _list.length + \"/\" + _max;\n  };\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Solver;\nmodule.exports.TimeStep = TimeStep;\n\nvar Settings = require('./Settings');\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Math = require('./common/Math');\n\nvar Body = require('./Body');\nvar Contact = require('./Contact');\nvar Joint = require('./Joint');\n\nvar TimeOfImpact = require('./collision/TimeOfImpact');\nvar TOIInput = TimeOfImpact.Input;\nvar TOIOutput = TimeOfImpact.Output;\n\nvar Distance = require('./collision/Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\nfunction TimeStep(dt) {\n  this.dt = 0; // time step\n  this.inv_dt = 0; // inverse time step (0 if dt == 0)\n  this.velocityIterations = 0;\n  this.positionIterations = 0;\n  this.warmStarting = false;\n  this.blockSolve = true;\n\n  // timestep ratio for variable timestep\n  this.inv_dt0 = 0.0;\n  this.dtRatio = 1; // dt * inv_dt0\n}\n\nTimeStep.prototype.reset = function(dt) {\n  if (this.dt > 0.0) {\n    this.inv_dt0 = this.inv_dt;\n  }\n  this.dt = dt;\n  this.inv_dt = dt == 0 ? 0 : 1 / dt;\n  this.dtRatio = dt * this.inv_dt0;\n}\n\n/**\n * Finds and solves islands. An island is a connected subset of the world.\n * \n * @param {World} world\n */\nfunction Solver(world) {\n  this.m_world = world;\n  this.m_stack = [];\n  this.m_bodies = [];\n  this.m_contacts = [];\n  this.m_joints = [];\n}\n\nSolver.prototype.clear = function() {\n  this.m_stack.length = 0;\n  this.m_bodies.length = 0;\n  this.m_contacts.length = 0;\n  this.m_joints.length = 0;\n}\n\nSolver.prototype.addBody = function(body) {\n  _ASSERT && common.assert(body instanceof Body, 'Not a Body!', body);\n  this.m_bodies.push(body);\n  // why?\n//  body.c_position.c.setZero();\n//  body.c_position.a = 0;\n//  body.c_velocity.v.setZero();\n//  body.c_velocity.w = 0;\n};\n\nSolver.prototype.addContact = function(contact) {\n  _ASSERT && common.assert(contact instanceof Contact, 'Not a Contact!', contact);\n  this.m_contacts.push(contact);\n};\n\nSolver.prototype.addJoint = function(joint) {\n  _ASSERT && common.assert(joint instanceof Joint, 'Not a Joint!', joint);\n  this.m_joints.push(joint);\n};\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorld = function(step) {\n  var world = this.m_world;\n\n  // Clear all the island flags.\n  for (var b = world.m_bodyList; b; b = b.m_next) {\n    b.m_islandFlag = false;\n  }\n  for (var c = world.m_contactList; c; c = c.m_next) {\n    c.m_islandFlag = false;\n  }\n  for (var j = world.m_jointList; j; j = j.m_next) {\n    j.m_islandFlag = false;\n  }\n\n  // Build and simulate all awake islands.\n  var stack = this.m_stack;\n  var loop = -1;\n  for (var seed = world.m_bodyList; seed; seed = seed.m_next) {\n    loop++;\n    if (seed.m_islandFlag) {\n      continue;\n    }\n\n    if (seed.isAwake() == false || seed.isActive() == false) {\n      continue;\n    }\n\n    // The seed can be dynamic or kinematic.\n    if (seed.isStatic()) {\n      continue;\n    }\n\n    // Reset island and stack.\n    this.clear();\n\n    stack.push(seed);\n\n    seed.m_islandFlag = true;\n\n    // Perform a depth first search (DFS) on the constraint graph.\n    while (stack.length > 0) {\n      // Grab the next body off the stack and add it to the island.\n      var b = stack.pop();\n      _ASSERT && common.assert(b.isActive() == true);\n      this.addBody(b);\n\n      // Make sure the body is awake.\n      b.setAwake(true);\n\n      // To keep islands as small as possible, we don't\n      // propagate islands across static bodies.\n      if (b.isStatic()) {\n        continue;\n      }\n      \n      // Search all contacts connected to this body.\n      for (var ce = b.m_contactList; ce; ce = ce.next) {\n        var contact = ce.contact;\n\n        // Has this contact already been added to an island?\n        if (contact.m_islandFlag) {\n          continue;\n        }\n\n        // Is this contact solid and touching?\n        if (contact.isEnabled() == false || contact.isTouching() == false) {\n          continue;\n        }\n\n        // Skip sensors.\n        var sensorA = contact.m_fixtureA.m_isSensor;\n        var sensorB = contact.m_fixtureB.m_isSensor;\n        if (sensorA || sensorB) {\n          continue;\n        }\n\n        this.addContact(contact);\n        contact.m_islandFlag = true;\n\n        var other = ce.other;\n\n        // Was the other body already added to this island?\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n\n      // Search all joints connect to this body.\n      for (var je = b.m_jointList; je; je = je.next) {\n        if (je.joint.m_islandFlag == true) {\n          continue;\n        }\n\n        var other = je.other;\n\n        // Don't simulate joints connected to inactive bodies.\n        if (other.isActive() == false) {\n          continue;\n        }\n\n        this.addJoint(je.joint);\n        je.joint.m_islandFlag = true;\n\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n    }\n\n    this.solveIsland(step);\n\n    // Post solve cleanup.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      // Allow static bodies to participate in other islands.\n      // TODO: are they added at all?\n      var b = this.m_bodies[i];\n      if (b.isStatic()) {\n        b.m_islandFlag = false;\n      }\n    }\n  }\n}\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveIsland = function(step) {\n  // B2: Island Solve\n  var world = this.m_world;\n  var gravity = world.m_gravity;\n  var allowSleep = world.m_allowSleep;\n\n  var h = step.dt;\n\n  // Integrate velocities and apply damping. Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.m_sweep.c);\n    var a = body.m_sweep.a;\n    var v = Vec2.clone(body.m_linearVelocity);\n    var w = body.m_angularVelocity;\n\n    // Store positions for continuous collision.\n    body.m_sweep.c0.set(body.m_sweep.c);\n    body.m_sweep.a0 = body.m_sweep.a;\n\n    if (body.isDynamic()) {\n      // Integrate velocities.\n      v.addMul(h * body.m_gravityScale, gravity);\n      v.addMul(h * body.m_invMass, body.m_force);\n      w += h * body.m_invI * body.m_torque;\n      /**\n       * <pre>\n       * Apply damping.\n       * ODE: dv/dt + c * v = 0\n       * Solution: v(t) = v0 * exp(-c * t)\n       * Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\n       * v2 = exp(-c * dt) * v1\n       * Pade approximation:\n       * v2 = v1 * 1 / (1 + c * dt)\n       * </pre>\n       */\n      v.mul(1.0 / (1.0 + h * body.m_linearDamping));\n      w *= 1.0 / (1.0 + h * body.m_angularDamping);\n    }\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('M: ');\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('R: ');\n\n  if (step.warmStarting) {\n    // Warm start.\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var contact = this.m_contacts[i];\n      contact.warmStartConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('Q: ');\n  \n  for (var i = 0; i < this.m_joints.length; ++i) {\n    var joint = this.m_joints[i];\n    joint.initVelocityConstraints(step);\n  }\n\n  _DEBUG && this.printBodies('E: ');\n\n  // Solve velocity constraints\n  for (var i = 0; i < step.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      joint.solveVelocityConstraints(step);\n    }\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('D: ');\n\n  // Store impulses for warm starting\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.storeConstraintImpulses(step);\n  }\n\n  _DEBUG && this.printBodies('C: ');\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.lengthSquared(translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c.set(c);\n    body.c_position.a = a;\n    body.c_velocity.v.set(v);\n    body.c_velocity.w = w;\n  }\n\n  _DEBUG && this.printBodies('B: ');\n\n  // Solve position constraints\n  var positionSolved = false;\n  for (var i = 0; i < step.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraint(step);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -3.0 * Settings.linearSlop;\n\n    var jointsOkay = true;\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      var jointOkay = joint.solvePositionConstraints(step);\n      jointsOkay = jointsOkay && jointOkay;\n    }\n\n    if (contactsOkay && jointsOkay) {\n      // Exit early if the position errors are small.\n      positionSolved = true;\n      break;\n    }\n  }\n\n  _DEBUG && this.printBodies('L: ');\n\n  // Copy state buffers back to the bodies\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    body.m_sweep.c.set(body.c_position.c);\n    body.m_sweep.a = body.c_position.a;\n    body.m_linearVelocity.set(body.c_velocity.v);\n    body.m_angularVelocity = body.c_velocity.w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n\n  if (allowSleep) {\n    var minSleepTime = Infinity;\n\n    var linTolSqr = Settings.linearSleepToleranceSqr;\n    var angTolSqr = Settings.angularSleepToleranceSqr;\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      if (body.isStatic()) {\n        continue;\n      }\n\n      if ((body.m_autoSleepFlag == false)\n          || (body.m_angularVelocity * body.m_angularVelocity > angTolSqr)\n          || (Vec2.lengthSquared(body.m_linearVelocity) > linTolSqr)) {\n        body.m_sleepTime = 0.0;\n        minSleepTime = 0.0;\n      } else {\n        body.m_sleepTime += h;\n        minSleepTime = Math.min(minSleepTime, body.m_sleepTime);\n      }\n    }\n\n    if (minSleepTime >= Settings.timeToSleep && positionSolved) {\n      for (var i = 0; i < this.m_bodies.length; ++i) {\n        var body = this.m_bodies[i];\n        body.setAwake(false);\n      }\n    }\n  }\n};\n\nSolver.prototype.printBodies = function(tag) {\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var b = this.m_bodies[i];\n    common.debug(tag, b.c_position.a, b.c_position.c.x, b.c_position.c.y, b.c_velocity.w, b.c_velocity.v.x, b.c_velocity.v.y);\n  }\n};\n\nvar s_subStep = new TimeStep(); // reuse\n\n/**\n * Find TOI contacts and solve them.\n *\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorldTOI = function(step) {\n  var world = this.m_world;\n\n  if (world.m_stepComplete) {\n    for (var b = world.m_bodyList; b; b = b.m_next) {\n      b.m_islandFlag = false;\n      b.m_sweep.alpha0 = 0.0;\n    }\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Invalidate TOI\n      c.m_toiFlag = false;\n      c.m_islandFlag = false;\n      c.m_toiCount = 0;\n      c.m_toi = 1.0;\n    }\n  }\n\n  // Find TOI events and solve them.\n  for (;;) {\n    // Find the first TOI.\n    var minContact = null; // Contact\n    var minAlpha = 1.0;\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Is this contact disabled?\n      if (c.isEnabled() == false) {\n        continue;\n      }\n\n      // Prevent excessive sub-stepping.\n      if (c.m_toiCount > Settings.maxSubSteps) {\n        continue;\n      }\n\n      var alpha = 1.0;\n      if (c.m_toiFlag) {\n        // This contact has a valid cached TOI.\n        alpha = c.m_toi;\n      } else {\n        var fA = c.getFixtureA();\n        var fB = c.getFixtureB();\n\n        // Is there a sensor?\n        if (fA.isSensor() || fB.isSensor()) {\n          continue;\n        }\n\n        var bA = fA.getBody();\n        var bB = fB.getBody();\n\n        _ASSERT && common.assert(bA.isDynamic() || bB.isDynamic());\n\n        var activeA = bA.isAwake() && !bA.isStatic();\n        var activeB = bB.isAwake() && !bB.isStatic();\n\n        // Is at least one body active (awake and dynamic or kinematic)?\n        if (activeA == false && activeB == false) {\n          continue;\n        }\n\n        var collideA = bA.isBullet() || !bA.isDynamic();\n        var collideB = bB.isBullet() || !bB.isDynamic();\n\n        // Are these two non-bullet dynamic bodies?\n        if (collideA == false && collideB == false) {\n          continue;\n        }\n\n        // Compute the TOI for this contact.\n        // Put the sweeps onto the same time interval.\n        var alpha0 = bA.m_sweep.alpha0;\n\n        if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\n          alpha0 = bB.m_sweep.alpha0;\n          bA.m_sweep.advance(alpha0);\n        } else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\n          alpha0 = bA.m_sweep.alpha0;\n          bB.m_sweep.advance(alpha0);\n        }\n\n        _ASSERT && common.assert(alpha0 < 1.0);\n\n        var indexA = c.getChildIndexA();\n        var indexB = c.getChildIndexB();\n\n        var sweepA = bA.m_sweep;\n        var sweepB = bB.m_sweep;\n\n        // Compute the time of impact in interval [0, minTOI]\n        var input = new TOIInput(); // TODO: reuse\n        input.proxyA.set(fA.getShape(), indexA);\n        input.proxyB.set(fB.getShape(), indexB);\n        input.sweepA.set(bA.m_sweep);\n        input.sweepB.set(bB.m_sweep);\n        input.tMax = 1.0;\n\n        var output = new TOIOutput(); // TODO: reuse\n        TimeOfImpact(output, input);\n\n        // Beta is the fraction of the remaining portion of the [time?].\n        var beta = output.t;\n        if (output.state == TOIOutput.e_touching) {\n          alpha = Math.min(alpha0 + (1.0 - alpha0) * beta, 1.0);\n        } else {\n          alpha = 1.0;\n        }\n\n        c.m_toi = alpha;\n        c.m_toiFlag = true;\n      }\n\n      if (alpha < minAlpha) {\n        // This is the minimum TOI found so far.\n        minContact = c;\n        minAlpha = alpha;\n      }\n    }\n\n    if (minContact == null || 1.0 - 10.0 * Math.EPSILON < minAlpha) {\n      // No more TOI events. Done!\n      world.m_stepComplete = true;\n      break;\n    }\n\n    // Advance the bodies to the TOI.\n    var fA = minContact.getFixtureA();\n    var fB = minContact.getFixtureB();\n    var bA = fA.getBody();\n    var bB = fB.getBody();\n\n    var backup1 = bA.m_sweep.clone();\n    var backup2 = bB.m_sweep.clone();\n\n    bA.advance(minAlpha);\n    bB.advance(minAlpha);\n\n    // The TOI contact likely has some new contact points.\n    minContact.update(world);\n    minContact.m_toiFlag = false;\n    ++minContact.m_toiCount;\n\n    // Is the contact solid?\n    if (minContact.isEnabled() == false || minContact.isTouching() == false) {\n      // Restore the sweeps.\n      minContact.setEnabled(false);\n      bA.m_sweep.set(backup1);\n      bB.m_sweep.set(backup2);\n      bA.synchronizeTransform();\n      bB.synchronizeTransform();\n      continue;\n    }\n\n    bA.setAwake(true);\n    bB.setAwake(true);\n\n    // Build the island\n    this.clear();\n    this.addBody(bA);\n    this.addBody(bB);\n    this.addContact(minContact);\n\n    bA.m_islandFlag = true;\n    bB.m_islandFlag = true;\n    minContact.m_islandFlag = true;\n\n    // Get contacts on bodyA and bodyB.\n    var bodies = [ bA, bB ];\n    for (var i = 0; i < bodies.length; ++i) {\n      var body = bodies[i];\n      if (body.isDynamic()) {\n        for (var ce = body.m_contactList; ce; ce = ce.next) {\n          // if (this.m_bodyCount == this.m_bodyCapacity) { break; }\n          // if (this.m_contactCount == this.m_contactCapacity) { break; }\n\n          var contact = ce.contact;\n\n          // Has this contact already been added to the island?\n          if (contact.m_islandFlag) {\n            continue;\n          }\n\n          // Only add if either is static, kinematic or bullet.\n          var other = ce.other;\n          if (other.isDynamic() && !body.isBullet() && !other.isBullet()) {\n            continue;\n          }\n\n          // Skip sensors.\n          var sensorA = contact.m_fixtureA.m_isSensor;\n          var sensorB = contact.m_fixtureB.m_isSensor;\n          if (sensorA || sensorB) {\n            continue;\n          }\n\n          // Tentatively advance the body to the TOI.\n          var backup = other.m_sweep.clone();\n          if (other.m_islandFlag == false) {\n            other.advance(minAlpha);\n          }\n\n          // Update the contact points\n          contact.update(world);\n\n          // Was the contact disabled by the user?\n          // Are there contact points?\n          if (contact.isEnabled() == false || contact.isTouching() == false) {\n            other.m_sweep.set(backup);\n            other.synchronizeTransform();\n            continue;\n          }\n\n          // Add the contact to the island\n          contact.m_islandFlag = true;\n          this.addContact(contact);\n\n          // Has the other body already been added to the island?\n          if (other.m_islandFlag) {\n            continue;\n          }\n\n          // Add the other body to the island.\n          other.m_islandFlag = true;\n\n          if (!other.isStatic()) {\n            other.setAwake(true);\n          }\n\n          this.addBody(other);\n        }\n      }\n    }\n\n    s_subStep.reset((1.0 - minAlpha) * step.dt);\n    s_subStep.dtRatio = 1.0;\n    s_subStep.positionIterations = 20;\n    s_subStep.velocityIterations = step.velocityIterations;\n    s_subStep.warmStarting = false;\n\n    this.solveIslandTOI(s_subStep, bA, bB);\n\n    // Reset island flags and synchronize broad-phase proxies.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      body.m_islandFlag = false;\n\n      if (!body.isDynamic()) {\n        continue;\n      }\n\n      body.synchronizeFixtures();\n\n      // Invalidate all contact TOIs on this displaced body.\n      for (var ce = body.m_contactList; ce; ce = ce.next) {\n        ce.contact.m_toiFlag = false;\n        ce.contact.m_islandFlag = false;\n      }\n    }\n\n    // Commit fixture proxy movements to the broad-phase so that new contacts\n    // are created.\n    // Also, some contacts can be destroyed.\n    world.findNewContacts();\n\n    if (world.m_subStepping) {\n      world.m_stepComplete = false;\n      break;\n    }\n  }\n\n  if (_DEBUG) for (var b = world.m_bodyList; b; b = b.m_next) {\n    var c = b.m_sweep.c;\n    var a = b.m_sweep.a;\n    var v = b.m_linearVelocity;\n    var w = b.m_angularVelocity;\n  }\n}\n\n/**\n * @param {TimeStep} subStep\n * @param toiA\n * @param toiB\n */\nSolver.prototype.solveIslandTOI = function(subStep, toiA, toiB) {\n  var world = this.m_world;\n\n  // Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    body.c_position.c.set(body.m_sweep.c);\n    body.c_position.a = body.m_sweep.a;\n    body.c_velocity.v.set(body.m_linearVelocity);\n    body.c_velocity.w = body.m_angularVelocity;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(subStep);\n  }\n\n  // Solve position constraints.\n  for (var i = 0; i < subStep.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraintTOI(subStep, toiA, toiB);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -1.5 * Settings.linearSlop;\n    if (contactsOkay) {\n      break;\n    }\n  }\n\n  if (false) {\n    // Is the new position really safe?\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var c = this.m_contacts[i];\n      var fA = c.getFixtureA();\n      var fB = c.getFixtureB();\n\n      var bA = fA.getBody();\n      var bB = fB.getBody();\n\n      var indexA = c.getChildIndexA();\n      var indexB = c.getChildIndexB();\n\n      var input = new DistanceInput();\n      input.proxyA.set(fA.getShape(), indexA);\n      input.proxyB.set(fB.getShape(), indexB);\n      input.transformA = bA.getTransform();\n      input.transformB = bB.getTransform();\n      input.useRadii = false;\n\n      var output = new DistanceOutput();\n      var cache = new SimplexCache();\n      Distance(output, cache, input);\n\n      if (output.distance == 0 || cache.count == 3) {\n        cache.count += 0;\n      }\n    }\n  }\n\n  // Leap of faith to new safe state.\n  toiA.m_sweep.c0.set(toiA.c_position.c);\n  toiA.m_sweep.a0 = toiA.c_position.a;\n  toiB.m_sweep.c0.set(toiB.c_position.c);\n  toiB.m_sweep.a0 = toiB.c_position.a;\n\n  // No warm starting is needed for TOI events because warm\n  // starting impulses were applied in the discrete solver.\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(subStep);\n  }\n\n  // Solve velocity constraints.\n  for (var i = 0; i < subStep.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(subStep);\n    }\n  }\n\n  // Don't store the TOI contact forces for warm starting\n  // because they can be quite large.\n\n  var h = subStep.dt;\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.dot(translation, translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n\n    // Sync bodies\n    body.m_sweep.c = c;\n    body.m_sweep.a = a;\n    body.m_linearVelocity = v;\n    body.m_angularVelocity = w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n};\n\n/**\n * Contact impulses for reporting. Impulses are used instead of forces because\n * sub-step forces may approach infinity for rigid body collisions. These match\n * up one-to-one with the contact points in Manifold.\n */\nfunction ContactImpulse() {\n  this.normalImpulses = [];\n  this.tangentImpulses = [];\n};\n\nSolver.prototype.postSolveIsland = function() {\n  // TODO: report contact.v_points instead of new object?\n  var impulse = new ContactImpulse();\n  for (var c = 0; c < this.m_contacts.length; ++c) {\n    var contact = this.m_contacts[c];\n    for (var p = 0; p < contact.v_points.length; ++p) {\n      impulse.normalImpulses.push(contact.v_points[p].normalImpulse);\n      impulse.tangentImpulses.push(contact.v_points[p].tangentImpulse);\n    }\n    this.m_world.postSolve(contact, impulse);\n  }\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports.now = function() {\n  return Date.now();\n}\n\nmodule.exports.diff = function(time) {\n  return Date.now() - time;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = BoxShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar PolygonShape = require('./PolygonShape');\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = create(BoxShape._super.prototype);\n\nBoxShape.TYPE = 'polygon';\n\n/**\n * A rectangle polygon which extend PolygonShape.\n */\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(CircleShape.TYPE, CircleShape.TYPE, CircleCircleContact);\n\nfunction CircleCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == CircleShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollideCircles(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\nfunction CollideCircles(manifold, circleA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  var pA = Transform.mulVec2(xfA, circleA.m_p);\n  var pB = Transform.mulVec2(xfB, circleB.m_p);\n\n  var distSqr = Vec2.distanceSquared(pB, pA);\n  var rA = circleA.m_radius;\n  var rB = circleB.m_radius;\n  var radius = rA + rB;\n  if (distSqr > radius * radius) {\n    return;\n  }\n\n  manifold.type = Manifold.e_circles;\n  manifold.localPoint.set(circleA.m_p);\n  manifold.localNormal.setZero();\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n\nexports.CollideCircles = CollideCircles;","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(EdgeShape.TYPE, CircleShape.TYPE, EdgeCircleContact);\nContact.addType(ChainShape.TYPE, CircleShape.TYPE, ChainCircleContact);\n\nfunction EdgeCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\nfunction ChainCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var chain = fixtureA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  var shapeA = edge;\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\n// Compute contact points for edge versus circle.\n// This accounts for edge connectivity.\nfunction CollideEdgeCircle(manifold, edgeA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle in frame of edge\n  var Q = Transform.mulTVec2(xfA, Transform.mulVec2(xfB, circleB.m_p));\n\n  var A = edgeA.m_vertex1;\n  var B = edgeA.m_vertex2;\n  var e = Vec2.sub(B, A);\n\n  // Barycentric coordinates\n  var u = Vec2.dot(e, Vec2.sub(B, Q));\n  var v = Vec2.dot(e, Vec2.sub(Q, A));\n\n  var radius = edgeA.m_radius + circleB.m_radius;\n\n  // Region A\n  if (v <= 0.0) {\n    var P = Vec2.clone(A);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to A?\n    if (edgeA.m_hasVertex0) {\n      var A1 = edgeA.m_vertex0;\n      var B1 = A;\n      var e1 = Vec2.sub(B1, A1);\n      var u1 = Vec2.dot(e1, Vec2.sub(B1, Q));\n\n      // Is the circle in Region AB of the previous edge?\n      if (u1 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region B\n  if (u <= 0.0) {\n    var P = Vec2.clone(B);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to B?\n    if (edgeA.m_hasVertex3) {\n      var B2 = edgeA.m_vertex3;\n      var A2 = B;\n      var e2 = Vec2.sub(B2, A2);\n      var v2 = Vec2.dot(e2, Vec2.sub(Q, A2));\n\n      // Is the circle in Region AB of the next edge?\n      if (v2 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 1;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region AB\n  var den = Vec2.dot(e, e);\n  _ASSERT && common.assert(den > 0.0);\n  var P = Vec2.combine(u / den, A, v / den, B);\n  var d = Vec2.sub(Q, P);\n  var dd = Vec2.dot(d, d);\n  if (dd > radius * radius) {\n    return;\n  }\n\n  var n = Vec2.neo(-e.y, e.x);\n  if (Vec2.dot(n, Vec2.sub(Q, A)) < 0.0) {\n    n.set(-n.x, -n.y);\n  }\n  n.normalize();\n\n  manifold.type = Manifold.e_faceA;\n  manifold.localNormal = n;\n  manifold.localPoint.set(A);\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_face;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar PolygonShape = require('./PolygonShape');\n\nmodule.exports = CollidePolygons;\n\nContact.addType(PolygonShape.TYPE, PolygonShape.TYPE, PolygonContact);\n\nfunction PolygonContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == PolygonShape.TYPE);\n  CollidePolygons(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\n/**\n * Find the max separation between poly1 and poly2 using edge normals from\n * poly1.\n */\nfunction FindMaxSeparation(poly1, xf1, poly2, xf2) {\n  var count1 = poly1.m_count;\n  var count2 = poly2.m_count;\n  var n1s = poly1.m_normals;\n  var v1s = poly1.m_vertices;\n  var v2s = poly2.m_vertices;\n  var xf = Transform.mulTXf(xf2, xf1);\n\n  var bestIndex = 0;\n  var maxSeparation = -Infinity;\n  for (var i = 0; i < count1; ++i) {\n    // Get poly1 normal in frame2.\n    var n = Rot.mulVec2(xf.q, n1s[i]);\n    var v1 = Transform.mulVec2(xf, v1s[i]);\n\n    // Find deepest point for normal i.\n    var si = Infinity;\n    for (var j = 0; j < count2; ++j) {\n      var sij = Vec2.dot(n, v2s[j]) - Vec2.dot(n, v1);\n      if (sij < si) {\n        si = sij;\n      }\n    }\n\n    if (si > maxSeparation) {\n      maxSeparation = si;\n      bestIndex = i;\n    }\n  }\n\n  // used to keep last FindMaxSeparation call values\n  FindMaxSeparation._maxSeparation = maxSeparation;\n  FindMaxSeparation._bestIndex = bestIndex;\n}\n\n/**\n * @param {ClipVertex[2]} c\n * @param {int} edge1\n */\nfunction FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\n  var normals1 = poly1.m_normals;\n\n  var count2 = poly2.m_count;\n  var vertices2 = poly2.m_vertices;\n  var normals2 = poly2.m_normals;\n\n  _ASSERT && common.assert(0 <= edge1 && edge1 < poly1.m_count);\n\n  // Get the normal of the reference edge in poly2's frame.\n  var normal1 = Rot.mulT(xf2.q, Rot.mulVec2(xf1.q, normals1[edge1]));\n\n  // Find the incident edge on poly2.\n  var index = 0;\n  var minDot = Infinity;\n  for (var i = 0; i < count2; ++i) {\n    var dot = Vec2.dot(normal1, normals2[i]);\n    if (dot < minDot) {\n      minDot = dot;\n      index = i;\n    }\n  }\n\n  // Build the clip vertices for the incident edge.\n  var i1 = index;\n  var i2 = i1 + 1 < count2 ? i1 + 1 : 0;\n\n  c[0].v = Transform.mulVec2(xf2, vertices2[i1]);\n  c[0].id.cf.indexA = edge1;\n  c[0].id.cf.indexB = i1;\n  c[0].id.cf.typeA = Manifold.e_face;\n  c[0].id.cf.typeB = Manifold.e_vertex;\n\n  c[1].v = Transform.mulVec2(xf2, vertices2[i2]);\n  c[1].id.cf.indexA = edge1;\n  c[1].id.cf.indexB = i2;\n  c[1].id.cf.typeA = Manifold.e_face;\n  c[1].id.cf.typeB = Manifold.e_vertex;\n}\n\n/**\n * \n * Find edge normal of max separation on A - return if separating axis is found<br>\n * Find edge normal of max separation on B - return if separation axis is found<br>\n * Choose reference edge as min(minA, minB)<br>\n * Find incident edge<br>\n * Clip\n * \n * The normal points from 1 to 2\n */\nfunction CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\n  manifold.pointCount = 0;\n  var totalRadius = polyA.m_radius + polyB.m_radius;\n\n  FindMaxSeparation(polyA, xfA, polyB, xfB);\n  var edgeA = FindMaxSeparation._bestIndex;\n  var separationA = FindMaxSeparation._maxSeparation;\n  if (separationA > totalRadius)\n    return;\n\n  FindMaxSeparation(polyB, xfB, polyA, xfA);\n  var edgeB = FindMaxSeparation._bestIndex;\n  var separationB = FindMaxSeparation._maxSeparation;\n  if (separationB > totalRadius)\n    return;\n\n  var poly1; // reference polygon\n  var poly2; // incident polygon\n  var xf1;\n  var xf2;\n  var edge1; // reference edge\n  var flip;\n  var k_tol = 0.1 * Settings.linearSlop;\n\n  if (separationB > separationA + k_tol) {\n    poly1 = polyB;\n    poly2 = polyA;\n    xf1 = xfB;\n    xf2 = xfA;\n    edge1 = edgeB;\n    manifold.type = Manifold.e_faceB;\n    flip = 1;\n  } else {\n    poly1 = polyA;\n    poly2 = polyB;\n    xf1 = xfA;\n    xf2 = xfB;\n    edge1 = edgeA;\n    manifold.type = Manifold.e_faceA;\n    flip = 0;\n  }\n\n  var incidentEdge = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n\n  var count1 = poly1.m_count;\n  var vertices1 = poly1.m_vertices;\n\n  var iv1 = edge1;\n  var iv2 = edge1 + 1 < count1 ? edge1 + 1 : 0;\n\n  var v11 = vertices1[iv1];\n  var v12 = vertices1[iv2];\n\n  var localTangent = Vec2.sub(v12, v11);\n  localTangent.normalize();\n\n  var localNormal = Vec2.cross(localTangent, 1.0);\n  var planePoint = Vec2.combine(0.5, v11, 0.5, v12);\n\n  var tangent = Rot.mulVec2(xf1.q, localTangent);\n  var normal = Vec2.cross(tangent, 1.0);\n\n  v11 = Transform.mulVec2(xf1, v11);\n  v12 = Transform.mulVec2(xf1, v12);\n\n  // Face offset.\n  var frontOffset = Vec2.dot(normal, v11);\n\n  // Side offsets, extended by polytope skin thickness.\n  var sideOffset1 = -Vec2.dot(tangent, v11) + totalRadius;\n  var sideOffset2 = Vec2.dot(tangent, v12) + totalRadius;\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, incidentEdge, Vec2.neg(tangent),\n      sideOffset1, iv1);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, tangent,\n      sideOffset2, iv2);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  manifold.localNormal = localNormal;\n  manifold.localPoint = planePoint;\n\n  var pointCount = 0;\n  for (var i = 0; i < clipPoints2.length/* maxManifoldPoints */; ++i) {\n    var separation = Vec2.dot(normal, clipPoints2[i].v) - frontOffset;\n\n    if (separation <= totalRadius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n      cp.localPoint.set(Transform.mulTVec2(xf2, clipPoints2[i].v));\n      cp.id = clipPoints2[i].id;\n      if (flip) {\n        // Swap features\n        var cf = cp.id.cf; // ContactFeature\n        var indexA = cf.indexA;\n        var indexB = cf.indexB;\n        var typeA = cf.typeA;\n        var typeB = cf.typeB;\n        cf.indexA = indexB;\n        cf.indexB = indexA;\n        cf.typeA = typeB;\n        cf.typeB = typeA;\n      }\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar CircleShape = require('./CircleShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(PolygonShape.TYPE, CircleShape.TYPE, PolygonCircleContact);\n\nfunction PolygonCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollidePolygonCircle(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(),\n      xfB);\n}\n\nfunction CollidePolygonCircle(manifold, polygonA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle position in the frame of the polygon.\n  var c = Transform.mulVec2(xfB, circleB.m_p);\n  var cLocal = Transform.mulTVec2(xfA, c);\n\n  // Find the min separating edge.\n  var normalIndex = 0;\n  var separation = -Infinity;\n  var radius = polygonA.m_radius + circleB.m_radius;\n  var vertexCount = polygonA.m_count;\n  var vertices = polygonA.m_vertices;\n  var normals = polygonA.m_normals;\n\n  for (var i = 0; i < vertexCount; ++i) {\n    var s = Vec2.dot(normals[i], Vec2.sub(cLocal, vertices[i]));\n\n    if (s > radius) {\n      // Early out.\n      return;\n    }\n\n    if (s > separation) {\n      separation = s;\n      normalIndex = i;\n    }\n  }\n\n  // Vertices that subtend the incident face.\n  var vertIndex1 = normalIndex;\n  var vertIndex2 = vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0;\n  var v1 = vertices[vertIndex1];\n  var v2 = vertices[vertIndex2];\n\n  // If the center is inside the polygon ...\n  if (separation < Math.EPSILON) {\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[normalIndex]);\n    manifold.localPoint.setCombine(0.5, v1, 0.5, v2);\n    manifold.points[0].localPoint = circleB.m_p;\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Compute barycentric coordinates\n  var u1 = Vec2.dot(Vec2.sub(cLocal, v1), Vec2.sub(v2, v1));\n  var u2 = Vec2.dot(Vec2.sub(cLocal, v2), Vec2.sub(v1, v2));\n  if (u1 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v1) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v1);\n    manifold.localNormal.normalize();\n    manifold.localPoint = v1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else if (u2 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v2) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v2);\n    manifold.localNormal.normalize();\n    manifold.localPoint.set(v2);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else {\n    var faceCenter = Vec2.mid(v1, v2);\n    var separation = Vec2.dot(cLocal, normals[vertIndex1])\n        - Vec2.dot(faceCenter, normals[vertIndex1]);\n    if (separation > radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[vertIndex1]);\n    manifold.localPoint.set(faceCenter);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n}\n\n// EPAxis Type\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2;\n\n// VertexType unused?\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2;\n\n// This structure is used to keep track of the best separating axis.\nfunction EPAxis() {\n  this.type; // Type\n  this.index;\n  this.separation;\n};\n\n// This holds polygon B expressed in frame A.\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n  this.count = 0;\n};\n\n// Reference face used for clipping\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n  this.v1, this.v2; // v\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n};\n\n// reused\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulTXf(xfA, xfB);\n\n  var centroidB = Transform.mulVec2(xf, polygonB.m_centroid);\n\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false;\n\n  // Is there a preceding edge?\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  }\n\n  // Is there a following edge?\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero();\n\n  // Determine front or back collision. Determine collision normal limits.\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || (offset1 >= 0.0 && offset2 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || (offset0 >= 0.0 && offset1 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.setMul(-1, normal1);\n      upperLimit.setMul(-1, normal1);\n    } else {\n      normal.setMul(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  }\n\n  // Get polygonB in frameA\n  polygonBA.count = polygonB.m_count;\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mulVec2(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mulVec2(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n\n  manifold.pointCount = 0;\n\n  { // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  }\n\n  // If no valid normal can be found than this edge should not collide.\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  { // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      }\n\n      // Adjacency\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n\n  var primaryAxis;\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.setMul(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.setMul(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2);\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = DistanceJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nDistanceJoint.TYPE = 'distance-joint';\nJoint.TYPES[DistanceJoint.TYPE] = DistanceJoint;\n\nDistanceJoint._super = Joint;\nDistanceJoint.prototype = create(DistanceJoint._super.prototype);\n\n/**\n * @typedef {Object} DistanceJointDef\n *\n * Distance joint definition. This requires defining an anchor point on both\n * bodies and the non-zero length of the distance joint. The definition uses\n * local anchor points so that the initial configuration can violate the\n * constraint slightly. This helps when saving and loading a game. Warning: Do\n * not use a zero or short length.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. A value\n *       of 0 disables softness.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {number} def.length Distance length.\n */\n\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0\n};\n\n/**\n * A distance joint constrains two points on two bodies to remain at a fixed\n * distance from each other. You can view this as a massless, rigid rod.\n *\n * @param {DistanceJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchorA Anchor A in global coordination.\n * @param {Vec2} anchorB Anchor B in global coordination.\n */\nfunction DistanceJoint(def, bodyA, bodyB, anchorA, anchorB) {\n  if (!(this instanceof DistanceJoint)) {\n    return new DistanceJoint(def, bodyA, bodyB, anchorA, anchorB);\n  }\n\n  // order of constructor arguments is changed in v0.2\n  if (bodyB && anchorA && ('m_type' in anchorA) && ('x' in bodyB) && ('y' in bodyB)) {\n    var temp = bodyB;\n    bodyB = anchorA;\n    anchorA = temp;\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = DistanceJoint.TYPE;\n\n  // Solver shared\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.zero();\n  this.m_length = Math.isFinite(def.length) ? def.length :\n    Vec2.distance(bodyA.getWorldPoint(this.m_localAnchorA), bodyB.getWorldPoint(this.m_localAnchorB));\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_impulse = 0.0;\n  this.m_gamma = 0.0;\n  this.m_bias = 0.0;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA;\n  this.m_invMassB;\n  this.m_invIA;\n  this.m_invIB;\n  this.m_mass;\n\n  // 1-D constrained system\n  // m (v2 - v1) = lambda\n  // v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass.\n  // x2 = x1 + h * v2\n\n  // 1-D mass-damper-spring system\n  // m (v2 - v1) + h * d * v2 + h * k *\n\n  // C = norm(p2 - p1) - L\n  // u = (p2 - p1) / norm(p2 - p1)\n  // Cdot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1))\n  // J = [-u -cross(r1, u) u cross(r2, u)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2\n};\n\nDistanceJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    length: this.m_length,\n\n    impulse: this.m_impulse,\n    gamma: this.m_gamma,\n    bias: this.m_bias,\n  };\n};\n\nDistanceJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new DistanceJoint(data);\n  return joint;\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nDistanceJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nDistanceJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/get the natural length. Manipulating the length can lead to non-physical\n * behavior when the frequency is zero.\n */\nDistanceJoint.prototype.setLength = function(length) {\n  this.m_length = length;\n}\n\nDistanceJoint.prototype.getLength = function() {\n  return this.m_length;\n}\n\nDistanceJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nDistanceJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\nDistanceJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nDistanceJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nDistanceJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nDistanceJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nDistanceJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nDistanceJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nDistanceJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  this.m_u = Vec2.sub(Vec2.add(cB, this.m_rB), Vec2.add(cA, this.m_rA));\n\n  // Handle singularity.\n  var length = this.m_u.length();\n  if (length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / length);\n  } else {\n    this.m_u.set(0.0, 0.0);\n  }\n\n  var crAu = Vec2.cross(this.m_rA, this.m_u);\n  var crBu = Vec2.cross(this.m_rB, this.m_u);\n  var invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB\n      + this.m_invIB * crBu * crBu;\n\n  // Compute the effective mass matrix.\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C = length - this.m_length;\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n    // Damping coefficient\n    var d = 2.0 * this.m_mass * this.m_dampingRatio * omega;\n\n    // Spring stiffness\n    var k = this.m_mass * omega * omega;\n\n    // magic formulas\n    var h = step.dt;\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invMass += this.m_gamma;\n    this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n  } else {\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n  var Cdot = Vec2.dot(this.m_u, vpB) - Vec2.dot(this.m_u, vpA);\n\n  var impulse = -this.m_mass\n      * (Cdot + this.m_bias + this.m_gamma * this.m_impulse);\n  this.m_impulse += impulse;\n\n  var P = Vec2.mul(impulse, this.m_u);\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solvePositionConstraints = function(step) {\n  if (this.m_frequencyHz > 0.0) {\n    // There is no position correction for soft distance constraints.\n    return true;\n  }\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA));\n\n  var length = u.normalize();\n  var C = length - this.m_length;\n  C = Math\n      .clamp(C, -Settings.maxLinearCorrection, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C;\n  var P = Vec2.mul(impulse, u);\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = FrictionJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nFrictionJoint.TYPE = 'friction-joint';\n\nFrictionJoint._super = Joint;\nFrictionJoint.prototype = create(FrictionJoint._super.prototype);\n\n/**\n * @typedef {Object} FrictionJointDef\n *\n * Friction joint definition.\n * \n * @prop {float} maxForce The maximum friction force in N.\n * @prop {float} maxTorque The maximum friction torque in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  maxTorque : 0.0,\n};\n\n/**\n * Friction joint. This is used for top-down friction. It provides 2D\n * translational friction and angular friction.\n *\n * @param {FrictionJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchor Anchor in global coordination.\n */\nfunction FrictionJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof FrictionJoint)) {\n    return new FrictionJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = FrictionJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n\n  // Solver shared\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nFrictionJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nFrictionJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set the maximum friction force in N.\n */\nFrictionJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nFrictionJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\nFrictionJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nFrictionJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nFrictionJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nFrictionJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nFrictionJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var K = new Mat22()\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var h = step.dt; // float\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA; // float\n    var impulse = -this.m_angularMass * Cdot; // float\n\n    var oldImpulse = this.m_angularImpulse; // float\n    var maxImpulse = h * this.m_maxTorque; // float\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.sub(Vec2.add(vB, Vec2.cross(wB, this.m_rB)), Vec2.add(vA,\n        Vec2.cross(wA, this.m_rA))); // Vec2\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot)); // Vec2\n    var oldImpulse = this.m_linearImpulse; // Vec2\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce; // float\n\n    if (this.m_linearImpulse.lengthSquared() > maxImpulse * maxImpulse) {\n      this.m_linearImpulse.normalize();\n      this.m_linearImpulse.mul(maxImpulse);\n    }\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = GearJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar RevoluteJoint = require('./RevoluteJoint');\nvar PrismaticJoint = require('./PrismaticJoint');\n\nGearJoint.TYPE = 'gear-joint';\n\nGearJoint._super = Joint;\nGearJoint.prototype = create(GearJoint._super.prototype);\n\n/**\n * @typedef {Object} GearJointDef\n *\n * Gear joint definition.\n *\n * @prop {float} ratio The gear ratio. See GearJoint for explanation.\n *\n * @prop {RevoluteJoint|PrismaticJoint} joint1 The first revolute/prismatic\n *          joint attached to the gear joint.\n * @prop {PrismaticJoint|RevoluteJoint} joint2 The second prismatic/revolute\n *          joint attached to the gear joint.\n */\n\nvar DEFAULTS = {\n  ratio : 1.0\n};\n\n/**\n * A gear joint is used to connect two joints together. Either joint can be a\n * revolute or prismatic joint. You specify a gear ratio to bind the motions\n * together: coordinate1 + ratio * coordinate2 = constant\n * \n * The ratio can be negative or positive. If one joint is a revolute joint and\n * the other joint is a prismatic joint, then the ratio will have units of\n * length or units of 1/length. Warning: You have to manually destroy the gear\n * joint if joint1 or joint2 is destroyed.\n * \n * This definition requires two existing revolute or prismatic joints (any\n * combination will work).\n *\n * @param {GearJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction GearJoint(def, bodyA, bodyB, joint1, joint2, ratio) {\n  if (!(this instanceof GearJoint)) {\n    return new GearJoint(def, bodyA, bodyB, joint1, joint2, ratio);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = GearJoint.TYPE;\n\n  _ASSERT && common.assert(joint1.m_type === RevoluteJoint.TYPE\n      || joint1.m_type === PrismaticJoint.TYPE);\n  _ASSERT && common.assert(joint2.m_type === RevoluteJoint.TYPE\n      || joint2.m_type === PrismaticJoint.TYPE);\n\n  this.m_joint1 = joint1 ? joint1 : def.joint1;\n  this.m_joint2 = joint2 ? joint2 : def.joint2;\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  this.m_type1 = this.m_joint1.getType();\n  this.m_type2 = this.m_joint2.getType();\n\n  // joint1 connects body A to body C\n  // joint2 connects body B to body D\n\n  var coordinateA, coordinateB; // float\n\n  // TODO_ERIN there might be some problem with the joint edges in Joint.\n\n  this.m_bodyC = this.m_joint1.getBodyA();\n  this.m_bodyA = this.m_joint1.getBodyB();\n\n  // Get geometry of joint1\n  var xfA = this.m_bodyA.m_xf;\n  var aA = this.m_bodyA.m_sweep.a;\n  var xfC = this.m_bodyC.m_xf;\n  var aC = this.m_bodyC.m_sweep.a;\n\n  if (this.m_type1 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint1;// RevoluteJoint\n    this.m_localAnchorC = revolute.m_localAnchorA;\n    this.m_localAnchorA = revolute.m_localAnchorB;\n    this.m_referenceAngleA = revolute.m_referenceAngle;\n    this.m_localAxisC = Vec2.zero();\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var prismatic = this.m_joint1; // PrismaticJoint\n    this.m_localAnchorC = prismatic.m_localAnchorA;\n    this.m_localAnchorA = prismatic.m_localAnchorB;\n    this.m_referenceAngleA = prismatic.m_referenceAngle;\n    this.m_localAxisC = prismatic.m_localXAxisA;\n\n    var pC = this.m_localAnchorC;\n    var pA = Rot.mulTVec2(xfC.q, Vec2.add(Rot.mul(xfA.q, this.m_localAnchorA), Vec2.sub(xfA.p, xfC.p)));\n    coordinateA = Vec2.dot(pA, this.m_localAxisC) - Vec2.dot(pC, this.m_localAxisC);\n  }\n\n  this.m_bodyD = this.m_joint2.getBodyA();\n  this.m_bodyB = this.m_joint2.getBodyB();\n\n  // Get geometry of joint2\n  var xfB = this.m_bodyB.m_xf;\n  var aB = this.m_bodyB.m_sweep.a;\n  var xfD = this.m_bodyD.m_xf;\n  var aD = this.m_bodyD.m_sweep.a;\n\n  if (this.m_type2 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint2; // RevoluteJoint\n    this.m_localAnchorD = revolute.m_localAnchorA;\n    this.m_localAnchorB = revolute.m_localAnchorB;\n    this.m_referenceAngleB = revolute.m_referenceAngle;\n    this.m_localAxisD = Vec2.zero();\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var prismatic = this.m_joint2; // PrismaticJoint\n    this.m_localAnchorD = prismatic.m_localAnchorA;\n    this.m_localAnchorB = prismatic.m_localAnchorB;\n    this.m_referenceAngleB = prismatic.m_referenceAngle;\n    this.m_localAxisD = prismatic.m_localXAxisA;\n\n    var pD = this.m_localAnchorD;\n    var pB = Rot.mulTVec2(xfD.q, Vec2.add(Rot.mul(xfB.q, this.m_localAnchorB), Vec2.sub(xfB.p, xfD.p)));\n    coordinateB = Vec2.dot(pB, this.m_localAxisD) - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  this.m_constant = coordinateA + this.m_ratio * coordinateB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_lcA, this.m_lcB, this.m_lcC, this.m_lcD; // Vec2\n  this.m_mA, this.m_mB, this.m_mC, this.m_mD; // float\n  this.m_iA, this.m_iB, this.m_iC, this.m_iD; // float\n  this.m_JvAC, this.m_JvBD; // Vec2\n  this.m_JwA, this.m_JwB, this.m_JwC, this.m_JwD; // float\n  this.m_mass; // float\n\n  // Gear Joint:\n  // C0 = (coordinate1 + ratio * coordinate2)_initial\n  // C = (coordinate1 + ratio * coordinate2) - C0 = 0\n  // J = [J1 ratio * J2]\n  // K = J * invM * JT\n  // = J1 * invM1 * J1T + ratio * ratio * J2 * invM2 * J2T\n  //\n  // Revolute:\n  // coordinate = rotation\n  // Cdot = angularVelocity\n  // J = [0 0 1]\n  // K = J * invM * JT = invI\n  //\n  // Prismatic:\n  // coordinate = dot(p - pg, ug)\n  // Cdot = dot(v + cross(w, r), ug)\n  // J = [ug cross(r, ug)]\n  // K = J * invM * JT = invMass + invI * cross(r, ug)^2\n};\n\n/**\n * Get the first joint.\n */\nGearJoint.prototype.getJoint1 = function() {\n  return this.m_joint1;\n}\n\n/**\n * Get the second joint.\n */\nGearJoint.prototype.getJoint2 = function() {\n  return this.m_joint2;\n}\n\n/**\n * Set/Get the gear ratio.\n */\nGearJoint.prototype.setRatio = function(ratio) {\n  _ASSERT && common.assert(Math.isFinite(ratio));\n  this.m_ratio = ratio;\n}\n\nGearJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\nGearJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nGearJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nGearJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_JvAC).mul(inv_dt);\n}\n\nGearJoint.prototype.getReactionTorque = function(inv_dt) {\n  var L = this.m_impulse * this.m_JwA; // float\n  return inv_dt * L;\n}\n\nGearJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_lcA = this.m_bodyA.m_sweep.localCenter;\n  this.m_lcB = this.m_bodyB.m_sweep.localCenter;\n  this.m_lcC = this.m_bodyC.m_sweep.localCenter;\n  this.m_lcD = this.m_bodyD.m_sweep.localCenter;\n  this.m_mA = this.m_bodyA.m_invMass;\n  this.m_mB = this.m_bodyB.m_invMass;\n  this.m_mC = this.m_bodyC.m_invMass;\n  this.m_mD = this.m_bodyD.m_invMass;\n  this.m_iA = this.m_bodyA.m_invI;\n  this.m_iB = this.m_bodyB.m_invI;\n  this.m_iC = this.m_bodyC.m_invI;\n  this.m_iD = this.m_bodyD.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var aC = this.m_bodyC.c_position.a;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n\n  var aD = this.m_bodyD.c_position.a;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  this.m_mass = 0.0;\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    this.m_JvAC = Vec2.zero();\n    this.m_JwA = 1.0;\n    this.m_JwC = 1.0;\n    this.m_mass += this.m_iA + this.m_iC;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    this.m_JvAC = u;\n    this.m_JwC = Vec2.cross(rC, u);\n    this.m_JwA = Vec2.cross(rA, u);\n    this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    this.m_JvBD = Vec2.zero();\n    this.m_JwB = this.m_ratio;\n    this.m_JwD = this.m_ratio;\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD); // Vec2\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD); // Vec2\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB); // Vec2\n    this.m_JvBD = Vec2.mul(this.m_ratio, u);\n    this.m_JwD = this.m_ratio * Vec2.cross(rD, u);\n    this.m_JwB = this.m_ratio * Vec2.cross(rB, u);\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\n  }\n\n  // Compute effective mass.\n  this.m_mass = this.m_mass > 0.0 ? 1.0 / this.m_mass : 0.0;\n\n  if (step.warmStarting) {\n    vA.addMul(this.m_mA * this.m_impulse, this.m_JvAC);\n    wA += this.m_iA * this.m_impulse * this.m_JwA;\n    \n    vB.addMul(this.m_mB * this.m_impulse, this.m_JvBD);\n    wB += this.m_iB * this.m_impulse * this.m_JwB;\n    \n    vC.subMul(this.m_mC * this.m_impulse, this.m_JvAC);\n    wC -= this.m_iC * this.m_impulse * this.m_JwC;\n  \n    vD.subMul(this.m_mD * this.m_impulse, this.m_JvBD);\n    wD -= this.m_iD * this.m_impulse * this.m_JwD;\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var Cdot = Vec2.dot(this.m_JvAC, vA) - Vec2.dot(this.m_JvAC, vC)\n      + Vec2.dot(this.m_JvBD, vB) - Vec2.dot(this.m_JvBD, vD); // float\n  Cdot += (this.m_JwA * wA - this.m_JwC * wC)\n      + (this.m_JwB * wB - this.m_JwD * wD);\n\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  vA.addMul(this.m_mA * impulse, this.m_JvAC);\n  wA += this.m_iA * impulse * this.m_JwA;\n  vB.addMul(this.m_mB * impulse, this.m_JvBD);\n  wB += this.m_iB * impulse * this.m_JwB;\n  vC.subMul(this.m_mC * impulse, this.m_JvAC);\n  wC -= this.m_iC * impulse * this.m_JwC;\n  vD.subMul(this.m_mD * impulse, this.m_JvBD);\n  wD -= this.m_iD * impulse * this.m_JwD;\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var cC = this.m_bodyC.c_position.c;\n  var aC = this.m_bodyC.c_position.a;\n  var cD = this.m_bodyD.c_position.c;\n  var aD = this.m_bodyD.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  var linearError = 0.0; // float\n\n  var coordinateA, coordinateB; // float\n\n  var JvAC, JvBD; // Vec2\n  var JwA, JwB, JwC, JwD; // float\n  var mass = 0.0; // float\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    JvAC = Vec2.zero();\n    JwA = 1.0;\n    JwC = 1.0;\n    mass += this.m_iA + this.m_iC;\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    JvAC = u;\n    JwC = Vec2.cross(rC, u);\n    JwA = Vec2.cross(rA, u);\n    mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\n\n    var pC = Vec2.sub(this.m_localAnchorC, this.m_lcC); // Vec2\n    var pA = Rot.mulTVec2(qC, Vec2.add(rA, Vec2.sub(cA, cC))); // Vec2\n    coordinateA = Vec2.dot(Vec2.sub(pA, pC), this.m_localAxisC);\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    JvBD = Vec2.zero();\n    JwB = this.m_ratio;\n    JwD = this.m_ratio;\n    mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD);\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD);\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB);\n    JvBD = Vec2.mul(this.m_ratio, u);\n    JwD = this.m_ratio * Vec2.cross(rD, u);\n    JwB = this.m_ratio * Vec2.cross(rB, u);\n    mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD\n        * JwD * JwD + this.m_iB * JwB * JwB;\n\n    var pD = Vec2.sub(this.m_localAnchorD, this.m_lcD); // Vec2\n    var pB = Rot.mulTVec2(qD, Vec2.add(rB, Vec2.sub(cB, cD))); // Vec2\n    coordinateB = Vec2.dot(pB, this.m_localAxisD)\n        - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  var C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant; // float\n\n  var impulse = 0.0; // float\n  if (mass > 0.0) {\n    impulse = -C / mass;\n  }\n\n  cA.addMul(this.m_mA * impulse, JvAC);\n  aA += this.m_iA * impulse * JwA;\n  cB.addMul(this.m_mB * impulse, JvBD);\n  aB += this.m_iB * impulse * JwB;\n  cC.subMul(this.m_mC * impulse, JvAC);\n  aC -= this.m_iC * impulse * JwC;\n  cD.subMul(this.m_mD * impulse, JvBD);\n  aD -= this.m_iD * impulse * JwD;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  this.m_bodyC.c_position.c.set(cC);\n  this.m_bodyC.c_position.a = aC;\n  this.m_bodyD.c_position.c.set(cD);\n  this.m_bodyD.c_position.a = aD;\n\n  // TODO_ERIN not implemented\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MotorJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nMotorJoint.TYPE = 'motor-joint';\n\nMotorJoint._super = Joint;\nMotorJoint.prototype = create(MotorJoint._super.prototype);\n\n/**\n * @typedef {Object} MotorJointDef\n *\n * Motor joint definition.\n * \n * @prop {float} angularOffset The bodyB angle minus bodyA angle in radians.\n * @prop {float} maxForce The maximum motor force in N.\n * @prop {float} maxTorque The maximum motor torque in N-m.\n * @prop {float} correctionFactor Position correction factor in the range [0,1].\n * @prop {Vec2} linearOffset Position of bodyB minus the position of bodyA, in\n *       bodyA's frame, in meters.\n */\n\nvar DEFAULTS = {\n  maxForce : 1.0,\n  maxTorque : 1.0,\n  correctionFactor : 0.3\n};\n\n/**\n * A motor joint is used to control the relative motion between two bodies. A\n * typical usage is to control the movement of a dynamic body with respect to\n * the ground.\n *\n * @param {MotorJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MotorJoint(def, bodyA, bodyB) {\n  if (!(this instanceof MotorJoint)) {\n    return new MotorJoint(def, bodyA, bodyB);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MotorJoint.TYPE;\n\n  this.m_linearOffset = def.linearOffset ? def.linearOffset : bodyA.getLocalPoint(bodyB.getPosition());\n\n  var angleA = bodyA.getAngle();\n  var angleB = bodyB.getAngle();\n  this.m_angularOffset = angleB - angleA;\n\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n  this.m_correctionFactor = def.correctionFactor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_linearError; // Vec2\n  this.m_angularError; // float\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * Set the maximum friction force in N.\n */\nMotorJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nMotorJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nMotorJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nMotorJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\n/**\n * Set the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.setCorrectionFactor = function(factor) {\n  _ASSERT && common.assert(Math.isFinite(factor) && 0.0 <= factor && factor <= 1.0);\n  this.m_correctionFactor = factor;\n}\n\n/**\n * Get the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.getCorrectionFactor = function() {\n  return this.m_correctionFactor;\n}\n\n/**\n * Set/get the target linear offset, in frame A, in meters.\n */\nMotorJoint.prototype.setLinearOffset = function(linearOffset) {\n  if (linearOffset.x != this.m_linearOffset.x\n      || linearOffset.y != this.m_linearOffset.y) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_linearOffset = linearOffset;\n  }\n}\n\nMotorJoint.prototype.getLinearOffset = function() {\n  return this.m_linearOffset;\n}\n\n/**\n * Set/get the target angular offset, in radians.\n */\nMotorJoint.prototype.setAngularOffset = function(angularOffset) {\n  if (angularOffset != this.m_angularOffset) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_angularOffset = angularOffset;\n  }\n}\n\nMotorJoint.prototype.getAngularOffset = function() {\n  return this.m_angularOffset;\n}\n\nMotorJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getPosition();\n}\n\nMotorJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getPosition();\n}\n\nMotorJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nMotorJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nMotorJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.neg(this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.neg(this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  var K = new Mat22();\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  this.m_linearError = Vec2.zero();\n  this.m_linearError.addCombine(1, cB, 1, this.m_rB);\n  this.m_linearError.subCombine(1, cA, 1, this.m_rA);\n  this.m_linearError.sub(Rot.mulVec2(qA, this.m_linearOffset));\n\n  this.m_angularError = aB - aA - this.m_angularOffset;\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  var h = step.dt;\n  var inv_h = step.inv_dt;\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\n    var impulse = -this.m_angularMass * Cdot;\n\n    var oldImpulse = this.m_angularImpulse;\n    var maxImpulse = h * this.m_maxTorque;\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    Cdot.addMul(inv_h * this.m_correctionFactor, this.m_linearError);\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot));\n    var oldImpulse = Vec2.clone(this.m_linearImpulse);\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce;\n\n    this.m_linearImpulse.clamp(maxImpulse);\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MouseJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nMouseJoint.TYPE = 'mouse-joint';\n\nMouseJoint._super = Joint;\nMouseJoint.prototype = create(MouseJoint._super.prototype);\n\n/**\n * @typedef {Object} MouseJointDef\n *\n * Mouse joint definition. This requires a world target point, tuning\n * parameters, and the time step.\n * \n * @prop [maxForce = 0.0] The maximum constraint force that can be exerted to\n *       move the candidate body. Usually you will express as some multiple of\n *       the weight (multiplier * mass * gravity).\n * @prop [frequencyHz = 5.0] The response speed.\n * @prop [dampingRatio = 0.7] The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} target The initial world target point. This is assumed to\n *       coincide with the body anchor initially.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  frequencyHz : 5.0,\n  dampingRatio : 0.7\n};\n\n/**\n * A mouse joint is used to make a point on a body track a specified world\n * point. This a soft constraint with a maximum force. This allows the\n * constraint to stretch and without applying huge forces.\n * \n * NOTE: this joint is not documented in the manual because it was developed to\n * be used in the testbed. If you want to learn how to use the mouse joint, look\n * at the testbed.\n *\n * @param {MouseJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MouseJoint(def, bodyA, bodyB, target) {\n  if (!(this instanceof MouseJoint)) {\n    return new MouseJoint(def, bodyA, bodyB, target);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MouseJoint.TYPE;\n\n  _ASSERT && common.assert(Math.isFinite(def.maxForce) && def.maxForce >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.frequencyHz) && def.frequencyHz >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.dampingRatio) && def.dampingRatio >= 0.0);\n\n  this.m_targetA = target ? Vec2.clone(target) : def.target || Vec2.zero();\n  this.m_localAnchorB = Transform.mulTVec2(bodyB.getTransform(), this.m_targetA);\n\n  this.m_maxForce = def.maxForce;\n  this.m_impulse = Vec2.zero();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_beta = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rB = Vec2.zero();\n  this.m_localCenterB = Vec2.zero();\n  this.m_invMassB = 0.0;\n  this.m_invIB = 0.0;\n  this.mass = new Mat22()\n  this.m_C = Vec2.zero();\n\n  // p = attached point, m = mouse point\n  // C = p - m\n  // Cdot = v\n  // = v + cross(w, r)\n  // J = [I r_skew]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n}\n\n/**\n * Use this to update the target point.\n */\nMouseJoint.prototype.setTarget = function(target) {\n  if (this.m_bodyB.isAwake() == false) {\n    this.m_bodyB.setAwake(true);\n  }\n  this.m_targetA = Vec2.clone(target);\n}\n\nMouseJoint.prototype.getTarget = function() {\n  return this.m_targetA;\n}\n\n/**\n * Set/get the maximum force in Newtons.\n */\nMouseJoint.prototype.setMaxForce = function(force) {\n  this.m_maxForce = force;\n}\n\nMouseJoint.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set/get the frequency in Hertz.\n */\nMouseJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nMouseJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/get the damping ratio (dimensionless).\n */\nMouseJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nMouseJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nMouseJoint.prototype.getAnchorA = function() {\n  return Vec2.clone(this.m_targetA);\n}\n\nMouseJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nMouseJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_impulse);\n}\n\nMouseJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * 0.0;\n}\n\nMouseJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_targetA.sub(newOrigin);\n}\n\nMouseJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var position = this.m_bodyB.c_position;\n  var velocity = this.m_bodyB.c_velocity;\n\n  var cB = position.c;\n  var aB = position.a;\n  var vB = velocity.v;\n  var wB = velocity.w;\n\n  var qB = Rot.neo(aB);\n\n  var mass = this.m_bodyB.getMass();\n\n  // Frequency\n  var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n  // Damping coefficient\n  var d = 2.0 * mass * this.m_dampingRatio * omega;\n\n  // Spring stiffness\n  var k = mass * (omega * omega);\n\n  // magic formulas\n  // gamma has units of inverse mass.\n  // beta has units of inverse time.\n  var h = step.dt;\n  _ASSERT && common.assert(d + h * k > Math.EPSILON);\n  this.m_gamma = h * (d + h * k);\n  if (this.m_gamma != 0.0) {\n    this.m_gamma = 1.0 / this.m_gamma;\n  }\n  this.m_beta = h * k * this.m_gamma;\n\n  // Compute the effective mass matrix.\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // K = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) *\n  // invI2 * skew(r2)]\n  // = [1/m1+1/m2 0 ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y\n  // -r1.x*r1.y]\n  // [ 0 1/m1+1/m2] [-r1.x*r1.y r1.x*r1.x] [-r1.x*r1.y r1.x*r1.x]\n  var K = new Mat22();\n  K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y\n      + this.m_gamma;\n  K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x\n      + this.m_gamma;\n\n  this.m_mass = K.getInverse();\n\n  this.m_C.set(cB);\n  this.m_C.addCombine(1, this.m_rB, -1, this.m_targetA);\n  this.m_C.mul(this.m_beta);\n\n  // Cheat with some damping\n  wB *= 0.98;\n\n  if (step.warmStarting) {\n    this.m_impulse.mul(step.dtRatio);\n    vB.addMul(this.m_invMassB, this.m_impulse);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, this.m_impulse);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solveVelocityConstraints = function(step) {\n  var velocity = this.m_bodyB.c_velocity;\n  var vB = Vec2.clone(velocity.v);\n  var wB = velocity.w;\n\n  // Cdot = v + cross(w, r)\n\n  var Cdot = Vec2.cross(wB, this.m_rB);\n  Cdot.add(vB);\n\n  Cdot.addCombine(1, this.m_C, this.m_gamma, this.m_impulse);\n  Cdot.neg();\n\n  var impulse = Mat22.mulVec2(this.m_mass, Cdot);\n\n  var oldImpulse = Vec2.clone(this.m_impulse);\n  this.m_impulse.add(impulse);\n  var maxImpulse = step.dt * this.m_maxForce;\n  this.m_impulse.clamp(maxImpulse);\n  impulse = Vec2.sub(this.m_impulse, oldImpulse);\n\n  vB.addMul(this.m_invMassB, impulse);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, impulse);\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PulleyJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nPulleyJoint.TYPE = 'pulley-joint';\nPulleyJoint.MIN_PULLEY_LENGTH = 2.0; // minPulleyLength\n\nPulleyJoint._super = Joint;\nPulleyJoint.prototype = create(PulleyJoint._super.prototype);\n\n/**\n * @typedef {Object} PulleyJointDef\n *\n * Pulley joint definition. This requires two ground anchors, two dynamic body\n * anchor points, and a pulley ratio.\n *\n * @prop {Vec2} groundAnchorA The first ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} groundAnchorB The second ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} ratio The pulley ratio, used to simulate a block-and-tackle.\n * @prop {float} lengthA The reference length for the segment attached to bodyA.\n * @prop {float} lengthB The reference length for the segment attached to bodyB.\n */\nvar PulleyJointDef = {\n  collideConnected : true\n};\n\n/**\n * The pulley joint is connected to two bodies and two fixed ground points. The\n * pulley supports a ratio such that: length1 + ratio * length2 <= constant\n * \n * Yes, the force transmitted is scaled by the ratio.\n * \n * Warning: the pulley joint can get a bit squirrelly by itself. They often work\n * better when combined with prismatic joints. You should also cover the the\n * anchor points with static shapes to prevent one side from going to zero\n * length.\n *\n * @param {PulleyJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio) {\n  if (!(this instanceof PulleyJoint)) {\n    return new PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio);\n  }\n\n  def = options(def, PulleyJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PulleyJoint.TYPE;\n  this.m_groundAnchorA = groundA ? groundA : def.groundAnchorA || Vec2.neo(-1.0, 1.0);\n  this.m_groundAnchorB = groundB ? groundB : def.groundAnchorB || Vec2.neo(1.0, 1.0);\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n  this.m_lengthA = Math.isFinite(def.lengthA) ? def.lengthA : Vec2.distance(anchorA, groundA);\n  this.m_lengthB = Math.isFinite(def.lengthB) ? def.lengthB : Vec2.distance(anchorB, groundB);\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  _ASSERT && common.assert(ratio > Math.EPSILON);\n\n  this.m_constant = this.m_lengthA + this.m_ratio * this.m_lengthB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_uA; // Vec2\n  this.m_uB; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Pulley:\n  // length1 = norm(p1 - s1)\n  // length2 = norm(p2 - s2)\n  // C0 = (length1 + ratio * length2)_initial\n  // C = C0 - (length1 + ratio * length2)\n  // u1 = (p1 - s1) / norm(p1 - s1)\n  // u2 = (p2 - s2) / norm(p2 - s2)\n  // Cdot = -dot(u1, v1 + cross(w1, r1)) - ratio * dot(u2, v2 + cross(w2, r2))\n  // J = -[u1 cross(r1, u1) ratio * u2 ratio * cross(r2, u2)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u1)^2 + ratio^2 * (invMass2 + invI2 *\n  // cross(r2, u2)^2)\n}\n\n/**\n * Get the first ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorA = function() {\n  return this.m_groundAnchorA;\n}\n\n/**\n * Get the second ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorB = function() {\n  return this.m_groundAnchorB;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getLengthA = function() {\n  return this.m_lengthA;\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getLengthB = function() {\n  return this.m_lengthB;\n}\n\n/**\n * Get the pulley ratio.\n */\nPulleyJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getCurrentLengthA = function() {\n  var p = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var s = this.m_groundAnchorA;\n  return Vec2.distance(p, s);\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getCurrentLengthB = function() {\n  var p = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var s = this.m_groundAnchorB;\n  return Vec2.distance(p, s);\n}\n\nPulleyJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_groundAnchorA.sub(newOrigin);\n  this.m_groundAnchorB.sub(newOrigin);\n}\n\nPulleyJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPulleyJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPulleyJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_uB).mul(inv_dt);\n}\n\nPulleyJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nPulleyJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  this.m_uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  this.m_uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = this.m_uA.length();\n  var lengthB = this.m_uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    this.m_uA.mul(1.0 / lengthA);\n  } else {\n    this.m_uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    this.m_uB.mul(1.0 / lengthB);\n  } else {\n    this.m_uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(this.m_rA, this.m_uA); // float\n  var ruB = Vec2.cross(this.m_rB, this.m_uB); // float\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\n\n  if (this.m_mass > 0.0) {\n    this.m_mass = 1.0 / this.m_mass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support variable time steps.\n    this.m_impulse *= step.dtRatio;\n\n    // Warm starting.\n    var PA = Vec2.mul(-this.m_impulse, this.m_uA);\n    var PB = Vec2.mul(-this.m_ratio * this.m_impulse, this.m_uB);\n\n    vA.addMul(this.m_invMassA, PA);\n    wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n\n    vB.addMul(this.m_invMassB, PB);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n\n  var Cdot = -Vec2.dot(this.m_uA, vpA) - this.m_ratio\n      * Vec2.dot(this.m_uB, vpB); // float\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  var PA = Vec2.mul(-impulse, this.m_uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, this.m_uB); // Vec2\n  vA.addMul(this.m_invMassA, PA);\n  wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n  vB.addMul(this.m_invMassB, PB);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  var uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  var uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = uA.length();\n  var lengthB = uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    uA.mul(1.0 / lengthA);\n  } else {\n    uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    uB.mul(1.0 / lengthB);\n  } else {\n    uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(rA, uA);\n  var ruB = Vec2.cross(rB, uB);\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  var mass = mA + this.m_ratio * this.m_ratio * mB; // float\n\n  if (mass > 0.0) {\n    mass = 1.0 / mass;\n  }\n\n  var C = this.m_constant - lengthA - this.m_ratio * lengthB; // float\n  var linearError = Math.abs(C); // float\n\n  var impulse = -mass * C; // float\n\n  var PA = Vec2.mul(-impulse, uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, uB); // Vec2\n\n  cA.addMul(this.m_invMassA, PA);\n  aA += this.m_invIA * Vec2.cross(rA, PA);\n  cB.addMul(this.m_invMassB, PB);\n  aB += this.m_invIB * Vec2.cross(rB, PB);\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RopeJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRopeJoint.TYPE = 'rope-joint';\n\nRopeJoint._super = Joint;\nRopeJoint.prototype = create(RopeJoint._super.prototype);\n\n/**\n * @typedef {Object} RopeJointDef\n *\n * Rope joint definition. This requires two body anchor points and a maximum\n * lengths. Note: by default the connected objects will not collide. see\n * collideConnected in JointDef.\n *\n * @prop {float} maxLength The maximum length of the rope. Warning: this must be\n *       larger than linearSlop or the joint will have no effect.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxLength : 0.0,\n};\n\n/**\n * A rope joint enforces a maximum distance between two points on two bodies. It\n * has no other effect.\n * \n * Warning: if you attempt to change the maximum length during the simulation\n * you will get some non-physical behavior.\n * \n * A model that would allow you to dynamically modify the length would have some\n * sponginess, so I chose not to implement it that way. See DistanceJoint if you\n * want to dynamically control length.\n *\n * @param {RopeJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RopeJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RopeJoint)) {\n    return new RopeJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RopeJoint.TYPE;\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n\n  this.m_maxLength = def.maxLength;\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_length = 0.0;\n  this.m_state = inactiveLimit;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Limit:\n  // C = norm(pB - pA) - L\n  // u = (pB - pA) / norm(pB - pA)\n  // Cdot = dot(u, vB + cross(wB, rB) - vA - cross(wA, rA))\n  // J = [-u -cross(rA, u) u cross(rB, u)]\n  // K = J * invM * JT\n  // = invMassA + invIA * cross(rA, u)^2 + invMassB + invIB * cross(rB, u)^2\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRopeJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRopeJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/Get the maximum length of the rope.\n */\nRopeJoint.prototype.setMaxLength = function(length) {\n  this.m_maxLength = length;\n}\n\nRopeJoint.prototype.getMaxLength = function() {\n  return this.m_maxLength;\n}\n\nRopeJoint.prototype.getLimitState = function() {\n  // TODO LimitState\n  return this.m_state;\n}\n\nRopeJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRopeJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nRopeJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nRopeJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nRopeJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  this.m_rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  this.m_u = Vec2.zero();\n  this.m_u.addCombine(1, cB, 1, this.m_rB);\n  this.m_u.subCombine(1, cA, 1, this.m_rA); // Vec2\n\n  this.m_length = this.m_u.length();\n\n  var C = this.m_length - this.m_maxLength; // float\n  if (C > 0.0) {\n    this.m_state = atUpperLimit;\n  } else {\n    this.m_state = inactiveLimit;\n  }\n\n  if (this.m_length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / this.m_length);\n  } else {\n    this.m_u.setZero();\n    this.m_mass = 0.0;\n    this.m_impulse = 0.0;\n    return;\n  }\n\n  // Compute effective mass.\n  var crA = Vec2.cross(this.m_rA, this.m_u); // float\n  var crB = Vec2.cross(this.m_rB, this.m_u); // float\n  var invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB\n      + this.m_invIB * crB * crB; // float\n\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n    \n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n    \n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n    \n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.addCross(vA, wA, this.m_rA); // Vec2\n  var vpB = Vec2.addCross(vB, wB, this.m_rB); // Vec2\n  var C = this.m_length - this.m_maxLength; // float\n  var Cdot = Vec2.dot(this.m_u, Vec2.sub(vpB, vpA)); // float\n\n  // Predictive constraint.\n  if (C < 0.0) {\n    Cdot += step.inv_dt * C;\n  }\n\n  var impulse = -this.m_mass * Cdot; // float\n  var oldImpulse = this.m_impulse; // float\n  this.m_impulse = Math.min(0.0, this.m_impulse + impulse);\n  impulse = this.m_impulse - oldImpulse;\n\n  var P = Vec2.mul(impulse, this.m_u); // Vec2\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c; // Vec2\n  var aA = this.m_bodyA.c_position.a; // float\n  var cB = this.m_bodyB.c_position.c; // Vec2\n  var aB = this.m_bodyB.c_position.a; // float\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.zero();\n  u.addCombine(1, cB, 1, rB);\n  u.subCombine(1, cA, 1, rA); // Vec2\n\n  var length = u.normalize(); // float\n  var C = length - this.m_maxLength; // float\n\n  C = Math.clamp(C, 0.0, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C; // float\n  var P = Vec2.mul(impulse, u); // Vec2\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return length - this.m_maxLength < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WeldJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nWeldJoint.TYPE = 'weld-joint';\n\nWeldJoint._super = Joint;\nWeldJoint.prototype = create(WeldJoint._super.prototype);\n\n/**\n * @typedef {Object} WeldJointDef\n *\n * Weld joint definition. You need to specify local anchor points where they are\n * attached and the relative body angle. The position of the anchor points is\n * important for computing the reaction torque.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. Rotation\n *       only. Disable softness with a value of 0.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0,\n}\n\n/**\n * A weld joint essentially glues two bodies together. A weld joint may distort\n * somewhat because the island constraint solver is approximate.\n *\n * @param {WeldJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WeldJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof WeldJoint)) {\n    return new WeldJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WeldJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_impulse = Vec3();\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass = new Mat33();\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // / = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // C = angle2 - angle1 - referenceAngle\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWeldJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n};\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWeldJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n};\n\n/**\n * Get the reference angle.\n */\nWeldJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n};\n\n/**\n * Set/get frequency in Hz.\n */\nWeldJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n};\n\nWeldJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n};\n\n/**\n * Set/get damping ratio.\n */\nWeldJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nWeldJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n};\n\nWeldJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nWeldJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nWeldJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n};\n\nWeldJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n};\n\nWeldJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y\n      * iB;\n  K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n  K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x\n      * iB;\n  K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    K.getInverse22(this.m_mass);\n\n    var invM = iA + iB; // float\n    var m = invM > 0.0 ? 1.0 / invM : 0.0; // float\n\n    var C = aB - aA - this.m_referenceAngle; // float\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n    // Damping coefficient\n    var d = 2.0 * m * this.m_dampingRatio * omega; // float\n\n    // Spring stiffness\n    var k = m * omega * omega; // float\n\n    // magic formulas\n    var h = step.dt; // float\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invM += this.m_gamma;\n    this.m_mass.ez.z = invM != 0.0 ? 1.0 / invM : 0.0;\n  } else if (K.ez.z == 0.0) {\n    K.getInverse22(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  } else {\n    K.getSymInverse33(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  if (this.m_frequencyHz > 0.0) {\n    var Cdot2 = wB - wA; // float\n\n    var impulse2 = -this.m_mass.ez.z\n        * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z); // float\n    this.m_impulse.z += impulse2;\n\n    wA -= iA * impulse2;\n    wB += iB * impulse2;\n\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n\n    var impulse1 = Vec2.neg(Mat33.mulVec2(this.m_mass, Cdot1)); // Vec2\n    this.m_impulse.x += impulse1.x;\n    this.m_impulse.y += impulse1.y;\n\n    var P = Vec2.clone(impulse1); // Vec2\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(this.m_rB, P);\n  } else {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2); // Vec3\n\n    var impulse = Vec3.neg(Mat33.mulVec3(this.m_mass, Cdot)); // Vec3\n    this.m_impulse.add(impulse);\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  var positionError, angularError; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\n  K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\n  K.ez.x = -rA.y * iA - rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\n  K.ez.y = rA.x * iA + rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA); // Vec2\n\n    positionError = C1.length();\n    angularError = 0.0;\n\n    var P = Vec2.neg(K.solve22(C1)); // Vec2\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  } else {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA);\n\n    var C2 = aB - aA - this.m_referenceAngle; // float\n\n    positionError = C1.length();\n    angularError = Math.abs(C2);\n\n    var C = Vec3(C1.x, C1.y, C2);\n\n    var impulse = Vec3();\n    if (K.ez.z > 0.0) {\n      impulse = Vec3.neg(K.solve33(C));\n    } else {\n      var impulse2 = Vec2.neg(K.solve22(C1));\n      impulse.set(impulse2.x, impulse2.y, 0.0);\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    cA.subMul(mA, P);\n    aA -= iA * (Vec2.cross(rA, P) + impulse.z);\n\n    cB.addMul(mB, P);\n    aB += iB * (Vec2.cross(rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WheelJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nWheelJoint.TYPE = 'wheel-joint';\nJoint.TYPES[WheelJoint.TYPE] = WheelJoint;\n\nWheelJoint._super = Joint;\nWheelJoint.prototype = create(WheelJoint._super.prototype);\n\n/**\n * @typedef {Object} WheelJointDef\n *\n * Wheel joint definition. This requires defining a line of motion using an axis\n * and an anchor point. The definition uses local anchor points and a local axis\n * so that the initial configuration can violate the constraint slightly. The\n * joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n *\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorTorque The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n * @prop {float} frequencyHz Suspension frequency, zero indicates no suspension.\n * @prop {float} dampingRatio Suspension damping ratio, one indicates critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation axis in bodyA.\n */\nvar DEFAULTS = {\n  enableMotor : false,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  frequencyHz : 2.0,\n  dampingRatio : 0.7,\n};\n\n/**\n * A wheel joint. This joint provides two degrees of freedom: translation along\n * an axis fixed in bodyA and rotation in the plane. In other words, it is a\n * point to line constraint with a rotational motor and a linear spring/damper.\n * This joint is designed for vehicle suspensions.\n *\n * @param {WheelJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WheelJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof WheelJoint)) {\n    return new WheelJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WheelJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_localXAxisA = axis ? bodyA.getLocalVector(axis) : def.localAxisA || def.localAxis || Vec2.neo(1.0, 0.0);\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n  this.m_springMass = 0.0;\n  this.m_springImpulse = 0.0;\n\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableMotor = def.enableMotor;\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n\n  this.m_ax = Vec2.zero();\n  this.m_ay = Vec2.zero(); // Vec2\n  this.m_sAx;\n  this.m_sBx; // float\n  this.m_sAy;\n  this.m_sBy; // float\n\n  // Linear constraint (point-to-line)\n  // d = pB - pA = xB + rB - xA - rA\n  // C = dot(ay, d)\n  // Cdot = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA,\n  // rA))\n  // = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB,\n  // ay), vB)\n  // J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)]\n\n  // Spring linear constraint\n  // C = dot(ax, d)\n  // Cdot = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) +\n  // dot(cross(rB, ax), vB)\n  // J = [-ax -cross(d+rA, ax) ax cross(rB, ax)]\n\n  // Motor rotational constraint\n  // Cdot = wB - wA\n  // J = [0 0 -1 0 0 1]\n}\n\nWheelJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    enableMotor: this.m_enableMotor,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA,\n  };\n};\n\nWheelJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WheelJoint(data);\n  return joint;\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWheelJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWheelJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nWheelJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nWheelJoint.prototype.getJointTranslation = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var pA = bA.getWorldPoint(this.m_localAnchorA); // Vec2\n  var pB = bB.getWorldPoint(this.m_localAnchorB); // Vec2\n  var d = Vec2.sub(pB, pA); // Vec2\n  var axis = bA.getWorldVector(this.m_localXAxisA); // Vec2\n\n  var translation = Vec2.dot(d, axis); // float\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nWheelJoint.prototype.getJointSpeed = function() {\n  var wA = this.m_bodyA.m_angularVelocity;\n  var wB = this.m_bodyB.m_angularVelocity;\n  return wB - wA;\n}\n\n/**\n * Is the joint motor enabled?\n */\nWheelJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nWheelJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set/Get the maximum motor force, usually in N-m.\n */\nWheelJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nWheelJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Get the current motor torque given the inverse time step, usually in N-m.\n */\nWheelJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set/Get the spring frequency in hertz. Setting the frequency to zero disables\n * the spring.\n */\nWheelJoint.prototype.setSpringFrequencyHz = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nWheelJoint.prototype.getSpringFrequencyHz = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/Get the spring damping ratio\n */\nWheelJoint.prototype.setSpringDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nWheelJoint.prototype.getSpringDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nWheelJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nWheelJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nWheelJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax).mul(inv_dt);\n}\n\nWheelJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nWheelJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA); // Vec2\n\n  // Point to line constraint\n  {\n    this.m_ay = Rot.mulVec2(qA, this.m_localYAxisA);\n    this.m_sAy = Vec2.cross(Vec2.add(d, rA), this.m_ay);\n    this.m_sBy = Vec2.cross(rB, this.m_ay);\n\n    this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy\n        * this.m_sBy;\n\n    if (this.m_mass > 0.0) {\n      this.m_mass = 1.0 / this.m_mass;\n    }\n  }\n\n  // Spring constraint\n  this.m_springMass = 0.0;\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n  if (this.m_frequencyHz > 0.0) {\n    this.m_ax = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_sAx = Vec2.cross(Vec2.add(d, rA), this.m_ax);\n    this.m_sBx = Vec2.cross(rB, this.m_ax);\n\n    var invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx\n        * this.m_sBx; // float\n\n    if (invMass > 0.0) {\n      this.m_springMass = 1.0 / invMass;\n\n      var C = Vec2.dot(d, this.m_ax); // float\n\n      // Frequency\n      var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n      // Damping coefficient\n      var d = 2.0 * this.m_springMass * this.m_dampingRatio * omega; // float\n\n      // Spring stiffness\n      var k = this.m_springMass * omega * omega; // float\n\n      // magic formulas\n      var h = step.dt; // float\n      this.m_gamma = h * (d + h * k);\n      if (this.m_gamma > 0.0) {\n        this.m_gamma = 1.0 / this.m_gamma;\n      }\n\n      this.m_bias = C * h * k * this.m_gamma;\n\n      this.m_springMass = invMass + this.m_gamma;\n      if (this.m_springMass > 0.0) {\n        this.m_springMass = 1.0 / this.m_springMass;\n      }\n    }\n  } else {\n    this.m_springImpulse = 0.0;\n  }\n\n  // Rotational motor\n  if (this.m_enableMotor) {\n    this.m_motorMass = iA + iB;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  } else {\n    this.m_motorMass = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse *= step.dtRatio;\n    this.m_springImpulse *= step.dtRatio;\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax);\n    var LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\n    var LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * LA;\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * LB;\n\n  } else {\n    this.m_impulse = 0.0;\n    this.m_springImpulse = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solveVelocityConstraints = function(step) {\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Solve spring constraint\n  {\n    var Cdot = Vec2.dot(this.m_ax, vB) - Vec2.dot(this.m_ax, vA) + this.m_sBx\n        * wB - this.m_sAx * wA; // float\n    var impulse = -this.m_springMass\n        * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse); // float\n    this.m_springImpulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ax); // Vec2\n    var LA = impulse * this.m_sAx; // float\n    var LB = impulse * this.m_sBx; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  // Solve rotational motor constraint\n  {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve point to line constraint\n  {\n    var Cdot = Vec2.dot(this.m_ay, vB) - Vec2.dot(this.m_ay, vA) + this.m_sBy\n        * wB - this.m_sAy * wA; // float\n    var impulse = -this.m_mass * Cdot; // float\n    this.m_impulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ay); // Vec2\n    var LA = impulse * this.m_sAy; // float\n    var LB = impulse * this.m_sBy; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var ay = Rot.mulVec2(qA, this.m_localYAxisA);\n\n  var sAy = Vec2.cross(Vec2.add(d, rA), ay); // float\n  var sBy = Vec2.cross(rB, ay); // float\n\n  var C = Vec2.dot(d, ay); // float\n\n  var k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy\n      * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy; // float\n\n  var impulse; // float\n  if (k != 0.0) {\n    impulse = -C / k;\n  } else {\n    impulse = 0.0;\n  }\n\n  var P = Vec2.mul(impulse, ay); // Vec2\n  var LA = impulse * sAy; // float\n  var LB = impulse * sBy; // float\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * LA;\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * LB;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) <= Settings.linearSlop;\n}\n"],"sourceRoot":""}